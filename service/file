
service：     文件格式 elf64-x86-64


Disassembly of section .init:

0000000000401108 <_init>:
  401108:	48 83 ec 08          	sub    $0x8,%rsp
  40110c:	48 8b 05 e5 4e 20 00 	mov    0x204ee5(%rip),%rax        # 605ff8 <_DYNAMIC+0x1e0>
  401113:	48 85 c0             	test   %rax,%rax
  401116:	74 05                	je     40111d <_init+0x15>
  401118:	e8 13 02 00 00       	callq  401330 <__gmon_start__@plt>
  40111d:	48 83 c4 08          	add    $0x8,%rsp
  401121:	c3                   	retq   

Disassembly of section .plt:

0000000000401130 <recv@plt-0x10>:
  401130:	ff 35 d2 4e 20 00    	pushq  0x204ed2(%rip)        # 606008 <_GLOBAL_OFFSET_TABLE_+0x8>
  401136:	ff 25 d4 4e 20 00    	jmpq   *0x204ed4(%rip)        # 606010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40113c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401140 <recv@plt>:
  401140:	ff 25 d2 4e 20 00    	jmpq   *0x204ed2(%rip)        # 606018 <_GLOBAL_OFFSET_TABLE_+0x18>
  401146:	68 00 00 00 00       	pushq  $0x0
  40114b:	e9 e0 ff ff ff       	jmpq   401130 <_init+0x28>

0000000000401150 <putchar@plt>:
  401150:	ff 25 ca 4e 20 00    	jmpq   *0x204eca(%rip)        # 606020 <_GLOBAL_OFFSET_TABLE_+0x20>
  401156:	68 01 00 00 00       	pushq  $0x1
  40115b:	e9 d0 ff ff ff       	jmpq   401130 <_init+0x28>

0000000000401160 <pthread_create@plt>:
  401160:	ff 25 c2 4e 20 00    	jmpq   *0x204ec2(%rip)        # 606028 <_GLOBAL_OFFSET_TABLE_+0x28>
  401166:	68 02 00 00 00       	pushq  $0x2
  40116b:	e9 c0 ff ff ff       	jmpq   401130 <_init+0x28>

0000000000401170 <localtime@plt>:
  401170:	ff 25 ba 4e 20 00    	jmpq   *0x204eba(%rip)        # 606030 <_GLOBAL_OFFSET_TABLE_+0x30>
  401176:	68 03 00 00 00       	pushq  $0x3
  40117b:	e9 b0 ff ff ff       	jmpq   401130 <_init+0x28>

0000000000401180 <remove@plt>:
  401180:	ff 25 b2 4e 20 00    	jmpq   *0x204eb2(%rip)        # 606038 <_GLOBAL_OFFSET_TABLE_+0x38>
  401186:	68 04 00 00 00       	pushq  $0x4
  40118b:	e9 a0 ff ff ff       	jmpq   401130 <_init+0x28>

0000000000401190 <strcpy@plt>:
  401190:	ff 25 aa 4e 20 00    	jmpq   *0x204eaa(%rip)        # 606040 <_GLOBAL_OFFSET_TABLE_+0x40>
  401196:	68 05 00 00 00       	pushq  $0x5
  40119b:	e9 90 ff ff ff       	jmpq   401130 <_init+0x28>

00000000004011a0 <puts@plt>:
  4011a0:	ff 25 a2 4e 20 00    	jmpq   *0x204ea2(%rip)        # 606048 <_GLOBAL_OFFSET_TABLE_+0x48>
  4011a6:	68 06 00 00 00       	pushq  $0x6
  4011ab:	e9 80 ff ff ff       	jmpq   401130 <_init+0x28>

00000000004011b0 <fread@plt>:
  4011b0:	ff 25 9a 4e 20 00    	jmpq   *0x204e9a(%rip)        # 606050 <_GLOBAL_OFFSET_TABLE_+0x50>
  4011b6:	68 07 00 00 00       	pushq  $0x7
  4011bb:	e9 70 ff ff ff       	jmpq   401130 <_init+0x28>

00000000004011c0 <setsockopt@plt>:
  4011c0:	ff 25 92 4e 20 00    	jmpq   *0x204e92(%rip)        # 606058 <_GLOBAL_OFFSET_TABLE_+0x58>
  4011c6:	68 08 00 00 00       	pushq  $0x8
  4011cb:	e9 60 ff ff ff       	jmpq   401130 <_init+0x28>

00000000004011d0 <write@plt>:
  4011d0:	ff 25 8a 4e 20 00    	jmpq   *0x204e8a(%rip)        # 606060 <_GLOBAL_OFFSET_TABLE_+0x60>
  4011d6:	68 09 00 00 00       	pushq  $0x9
  4011db:	e9 50 ff ff ff       	jmpq   401130 <_init+0x28>

00000000004011e0 <inet_ntoa@plt>:
  4011e0:	ff 25 82 4e 20 00    	jmpq   *0x204e82(%rip)        # 606068 <_GLOBAL_OFFSET_TABLE_+0x68>
  4011e6:	68 0a 00 00 00       	pushq  $0xa
  4011eb:	e9 40 ff ff ff       	jmpq   401130 <_init+0x28>

00000000004011f0 <fclose@plt>:
  4011f0:	ff 25 7a 4e 20 00    	jmpq   *0x204e7a(%rip)        # 606070 <_GLOBAL_OFFSET_TABLE_+0x70>
  4011f6:	68 0b 00 00 00       	pushq  $0xb
  4011fb:	e9 30 ff ff ff       	jmpq   401130 <_init+0x28>

0000000000401200 <shutdown@plt>:
  401200:	ff 25 72 4e 20 00    	jmpq   *0x204e72(%rip)        # 606078 <_GLOBAL_OFFSET_TABLE_+0x78>
  401206:	68 0c 00 00 00       	pushq  $0xc
  40120b:	e9 20 ff ff ff       	jmpq   401130 <_init+0x28>

0000000000401210 <strlen@plt>:
  401210:	ff 25 6a 4e 20 00    	jmpq   *0x204e6a(%rip)        # 606080 <_GLOBAL_OFFSET_TABLE_+0x80>
  401216:	68 0d 00 00 00       	pushq  $0xd
  40121b:	e9 10 ff ff ff       	jmpq   401130 <_init+0x28>

0000000000401220 <chdir@plt>:
  401220:	ff 25 62 4e 20 00    	jmpq   *0x204e62(%rip)        # 606088 <_GLOBAL_OFFSET_TABLE_+0x88>
  401226:	68 0e 00 00 00       	pushq  $0xe
  40122b:	e9 00 ff ff ff       	jmpq   401130 <_init+0x28>

0000000000401230 <system@plt>:
  401230:	ff 25 5a 4e 20 00    	jmpq   *0x204e5a(%rip)        # 606090 <_GLOBAL_OFFSET_TABLE_+0x90>
  401236:	68 0f 00 00 00       	pushq  $0xf
  40123b:	e9 f0 fe ff ff       	jmpq   401130 <_init+0x28>

0000000000401240 <htons@plt>:
  401240:	ff 25 52 4e 20 00    	jmpq   *0x204e52(%rip)        # 606098 <_GLOBAL_OFFSET_TABLE_+0x98>
  401246:	68 10 00 00 00       	pushq  $0x10
  40124b:	e9 e0 fe ff ff       	jmpq   401130 <_init+0x28>

0000000000401250 <send@plt>:
  401250:	ff 25 4a 4e 20 00    	jmpq   *0x204e4a(%rip)        # 6060a0 <_GLOBAL_OFFSET_TABLE_+0xa0>
  401256:	68 11 00 00 00       	pushq  $0x11
  40125b:	e9 d0 fe ff ff       	jmpq   401130 <_init+0x28>

0000000000401260 <printf@plt>:
  401260:	ff 25 42 4e 20 00    	jmpq   *0x204e42(%rip)        # 6060a8 <_GLOBAL_OFFSET_TABLE_+0xa8>
  401266:	68 12 00 00 00       	pushq  $0x12
  40126b:	e9 c0 fe ff ff       	jmpq   401130 <_init+0x28>

0000000000401270 <lseek@plt>:
  401270:	ff 25 3a 4e 20 00    	jmpq   *0x204e3a(%rip)        # 6060b0 <_GLOBAL_OFFSET_TABLE_+0xb0>
  401276:	68 13 00 00 00       	pushq  $0x13
  40127b:	e9 b0 fe ff ff       	jmpq   401130 <_init+0x28>

0000000000401280 <__assert_fail@plt>:
  401280:	ff 25 32 4e 20 00    	jmpq   *0x204e32(%rip)        # 6060b8 <_GLOBAL_OFFSET_TABLE_+0xb8>
  401286:	68 14 00 00 00       	pushq  $0x14
  40128b:	e9 a0 fe ff ff       	jmpq   401130 <_init+0x28>

0000000000401290 <htonl@plt>:
  401290:	ff 25 2a 4e 20 00    	jmpq   *0x204e2a(%rip)        # 6060c0 <_GLOBAL_OFFSET_TABLE_+0xc0>
  401296:	68 15 00 00 00       	pushq  $0x15
  40129b:	e9 90 fe ff ff       	jmpq   401130 <_init+0x28>

00000000004012a0 <memset@plt>:
  4012a0:	ff 25 22 4e 20 00    	jmpq   *0x204e22(%rip)        # 6060c8 <_GLOBAL_OFFSET_TABLE_+0xc8>
  4012a6:	68 16 00 00 00       	pushq  $0x16
  4012ab:	e9 80 fe ff ff       	jmpq   401130 <_init+0x28>

00000000004012b0 <close@plt>:
  4012b0:	ff 25 1a 4e 20 00    	jmpq   *0x204e1a(%rip)        # 6060d0 <_GLOBAL_OFFSET_TABLE_+0xd0>
  4012b6:	68 17 00 00 00       	pushq  $0x17
  4012bb:	e9 70 fe ff ff       	jmpq   401130 <_init+0x28>

00000000004012c0 <epoll_ctl@plt>:
  4012c0:	ff 25 12 4e 20 00    	jmpq   *0x204e12(%rip)        # 6060d8 <_GLOBAL_OFFSET_TABLE_+0xd8>
  4012c6:	68 18 00 00 00       	pushq  $0x18
  4012cb:	e9 60 fe ff ff       	jmpq   401130 <_init+0x28>

00000000004012d0 <read@plt>:
  4012d0:	ff 25 0a 4e 20 00    	jmpq   *0x204e0a(%rip)        # 6060e0 <_GLOBAL_OFFSET_TABLE_+0xe0>
  4012d6:	68 19 00 00 00       	pushq  $0x19
  4012db:	e9 50 fe ff ff       	jmpq   401130 <_init+0x28>

00000000004012e0 <__libc_start_main@plt>:
  4012e0:	ff 25 02 4e 20 00    	jmpq   *0x204e02(%rip)        # 6060e8 <_GLOBAL_OFFSET_TABLE_+0xe8>
  4012e6:	68 1a 00 00 00       	pushq  $0x1a
  4012eb:	e9 40 fe ff ff       	jmpq   401130 <_init+0x28>

00000000004012f0 <strcmp@plt>:
  4012f0:	ff 25 fa 4d 20 00    	jmpq   *0x204dfa(%rip)        # 6060f0 <_GLOBAL_OFFSET_TABLE_+0xf0>
  4012f6:	68 1b 00 00 00       	pushq  $0x1b
  4012fb:	e9 30 fe ff ff       	jmpq   401130 <_init+0x28>

0000000000401300 <getchar@plt>:
  401300:	ff 25 f2 4d 20 00    	jmpq   *0x204df2(%rip)        # 6060f8 <_GLOBAL_OFFSET_TABLE_+0xf8>
  401306:	68 1c 00 00 00       	pushq  $0x1c
  40130b:	e9 20 fe ff ff       	jmpq   401130 <_init+0x28>

0000000000401310 <fprintf@plt>:
  401310:	ff 25 ea 4d 20 00    	jmpq   *0x204dea(%rip)        # 606100 <_GLOBAL_OFFSET_TABLE_+0x100>
  401316:	68 1d 00 00 00       	pushq  $0x1d
  40131b:	e9 10 fe ff ff       	jmpq   401130 <_init+0x28>

0000000000401320 <feof@plt>:
  401320:	ff 25 e2 4d 20 00    	jmpq   *0x204de2(%rip)        # 606108 <_GLOBAL_OFFSET_TABLE_+0x108>
  401326:	68 1e 00 00 00       	pushq  $0x1e
  40132b:	e9 00 fe ff ff       	jmpq   401130 <_init+0x28>

0000000000401330 <__gmon_start__@plt>:
  401330:	ff 25 da 4d 20 00    	jmpq   *0x204dda(%rip)        # 606110 <_GLOBAL_OFFSET_TABLE_+0x110>
  401336:	68 1f 00 00 00       	pushq  $0x1f
  40133b:	e9 f0 fd ff ff       	jmpq   401130 <_init+0x28>

0000000000401340 <memcpy@plt>:
  401340:	ff 25 d2 4d 20 00    	jmpq   *0x204dd2(%rip)        # 606118 <_GLOBAL_OFFSET_TABLE_+0x118>
  401346:	68 20 00 00 00       	pushq  $0x20
  40134b:	e9 e0 fd ff ff       	jmpq   401130 <_init+0x28>

0000000000401350 <time@plt>:
  401350:	ff 25 ca 4d 20 00    	jmpq   *0x204dca(%rip)        # 606120 <_GLOBAL_OFFSET_TABLE_+0x120>
  401356:	68 21 00 00 00       	pushq  $0x21
  40135b:	e9 d0 fd ff ff       	jmpq   401130 <_init+0x28>

0000000000401360 <pthread_exit@plt>:
  401360:	ff 25 c2 4d 20 00    	jmpq   *0x204dc2(%rip)        # 606128 <_GLOBAL_OFFSET_TABLE_+0x128>
  401366:	68 22 00 00 00       	pushq  $0x22
  40136b:	e9 c0 fd ff ff       	jmpq   401130 <_init+0x28>

0000000000401370 <malloc@plt>:
  401370:	ff 25 ba 4d 20 00    	jmpq   *0x204dba(%rip)        # 606130 <_GLOBAL_OFFSET_TABLE_+0x130>
  401376:	68 23 00 00 00       	pushq  $0x23
  40137b:	e9 b0 fd ff ff       	jmpq   401130 <_init+0x28>

0000000000401380 <listen@plt>:
  401380:	ff 25 b2 4d 20 00    	jmpq   *0x204db2(%rip)        # 606138 <_GLOBAL_OFFSET_TABLE_+0x138>
  401386:	68 24 00 00 00       	pushq  $0x24
  40138b:	e9 a0 fd ff ff       	jmpq   401130 <_init+0x28>

0000000000401390 <fseek@plt>:
  401390:	ff 25 aa 4d 20 00    	jmpq   *0x204daa(%rip)        # 606140 <_GLOBAL_OFFSET_TABLE_+0x140>
  401396:	68 25 00 00 00       	pushq  $0x25
  40139b:	e9 90 fd ff ff       	jmpq   401130 <_init+0x28>

00000000004013a0 <epoll_wait@plt>:
  4013a0:	ff 25 a2 4d 20 00    	jmpq   *0x204da2(%rip)        # 606148 <_GLOBAL_OFFSET_TABLE_+0x148>
  4013a6:	68 26 00 00 00       	pushq  $0x26
  4013ab:	e9 80 fd ff ff       	jmpq   401130 <_init+0x28>

00000000004013b0 <bind@plt>:
  4013b0:	ff 25 9a 4d 20 00    	jmpq   *0x204d9a(%rip)        # 606150 <_GLOBAL_OFFSET_TABLE_+0x150>
  4013b6:	68 27 00 00 00       	pushq  $0x27
  4013bb:	e9 70 fd ff ff       	jmpq   401130 <_init+0x28>

00000000004013c0 <tcgetattr@plt>:
  4013c0:	ff 25 92 4d 20 00    	jmpq   *0x204d92(%rip)        # 606158 <_GLOBAL_OFFSET_TABLE_+0x158>
  4013c6:	68 28 00 00 00       	pushq  $0x28
  4013cb:	e9 60 fd ff ff       	jmpq   401130 <_init+0x28>

00000000004013d0 <tcsetattr@plt>:
  4013d0:	ff 25 8a 4d 20 00    	jmpq   *0x204d8a(%rip)        # 606160 <_GLOBAL_OFFSET_TABLE_+0x160>
  4013d6:	68 29 00 00 00       	pushq  $0x29
  4013db:	e9 50 fd ff ff       	jmpq   401130 <_init+0x28>

00000000004013e0 <open@plt>:
  4013e0:	ff 25 82 4d 20 00    	jmpq   *0x204d82(%rip)        # 606168 <_GLOBAL_OFFSET_TABLE_+0x168>
  4013e6:	68 2a 00 00 00       	pushq  $0x2a
  4013eb:	e9 40 fd ff ff       	jmpq   401130 <_init+0x28>

00000000004013f0 <access@plt>:
  4013f0:	ff 25 7a 4d 20 00    	jmpq   *0x204d7a(%rip)        # 606170 <_GLOBAL_OFFSET_TABLE_+0x170>
  4013f6:	68 2b 00 00 00       	pushq  $0x2b
  4013fb:	e9 30 fd ff ff       	jmpq   401130 <_init+0x28>

0000000000401400 <fopen@plt>:
  401400:	ff 25 72 4d 20 00    	jmpq   *0x204d72(%rip)        # 606178 <_GLOBAL_OFFSET_TABLE_+0x178>
  401406:	68 2c 00 00 00       	pushq  $0x2c
  40140b:	e9 20 fd ff ff       	jmpq   401130 <_init+0x28>

0000000000401410 <perror@plt>:
  401410:	ff 25 6a 4d 20 00    	jmpq   *0x204d6a(%rip)        # 606180 <_GLOBAL_OFFSET_TABLE_+0x180>
  401416:	68 2d 00 00 00       	pushq  $0x2d
  40141b:	e9 10 fd ff ff       	jmpq   401130 <_init+0x28>

0000000000401420 <rename@plt>:
  401420:	ff 25 62 4d 20 00    	jmpq   *0x204d62(%rip)        # 606188 <_GLOBAL_OFFSET_TABLE_+0x188>
  401426:	68 2e 00 00 00       	pushq  $0x2e
  40142b:	e9 00 fd ff ff       	jmpq   401130 <_init+0x28>

0000000000401430 <accept@plt>:
  401430:	ff 25 5a 4d 20 00    	jmpq   *0x204d5a(%rip)        # 606190 <_GLOBAL_OFFSET_TABLE_+0x190>
  401436:	68 2f 00 00 00       	pushq  $0x2f
  40143b:	e9 f0 fc ff ff       	jmpq   401130 <_init+0x28>

0000000000401440 <atoi@plt>:
  401440:	ff 25 52 4d 20 00    	jmpq   *0x204d52(%rip)        # 606198 <_GLOBAL_OFFSET_TABLE_+0x198>
  401446:	68 30 00 00 00       	pushq  $0x30
  40144b:	e9 e0 fc ff ff       	jmpq   401130 <_init+0x28>

0000000000401450 <__isoc99_scanf@plt>:
  401450:	ff 25 4a 4d 20 00    	jmpq   *0x204d4a(%rip)        # 6061a0 <_GLOBAL_OFFSET_TABLE_+0x1a0>
  401456:	68 31 00 00 00       	pushq  $0x31
  40145b:	e9 d0 fc ff ff       	jmpq   401130 <_init+0x28>

0000000000401460 <strcat@plt>:
  401460:	ff 25 42 4d 20 00    	jmpq   *0x204d42(%rip)        # 6061a8 <_GLOBAL_OFFSET_TABLE_+0x1a8>
  401466:	68 32 00 00 00       	pushq  $0x32
  40146b:	e9 c0 fc ff ff       	jmpq   401130 <_init+0x28>

0000000000401470 <epoll_create@plt>:
  401470:	ff 25 3a 4d 20 00    	jmpq   *0x204d3a(%rip)        # 6061b0 <_GLOBAL_OFFSET_TABLE_+0x1b0>
  401476:	68 33 00 00 00       	pushq  $0x33
  40147b:	e9 b0 fc ff ff       	jmpq   401130 <_init+0x28>

0000000000401480 <fwrite@plt>:
  401480:	ff 25 32 4d 20 00    	jmpq   *0x204d32(%rip)        # 6061b8 <_GLOBAL_OFFSET_TABLE_+0x1b8>
  401486:	68 34 00 00 00       	pushq  $0x34
  40148b:	e9 a0 fc ff ff       	jmpq   401130 <_init+0x28>

0000000000401490 <sleep@plt>:
  401490:	ff 25 2a 4d 20 00    	jmpq   *0x204d2a(%rip)        # 6061c0 <_GLOBAL_OFFSET_TABLE_+0x1c0>
  401496:	68 35 00 00 00       	pushq  $0x35
  40149b:	e9 90 fc ff ff       	jmpq   401130 <_init+0x28>

00000000004014a0 <usleep@plt>:
  4014a0:	ff 25 22 4d 20 00    	jmpq   *0x204d22(%rip)        # 6061c8 <_GLOBAL_OFFSET_TABLE_+0x1c8>
  4014a6:	68 36 00 00 00       	pushq  $0x36
  4014ab:	e9 80 fc ff ff       	jmpq   401130 <_init+0x28>

00000000004014b0 <socket@plt>:
  4014b0:	ff 25 1a 4d 20 00    	jmpq   *0x204d1a(%rip)        # 6061d0 <_GLOBAL_OFFSET_TABLE_+0x1d0>
  4014b6:	68 37 00 00 00       	pushq  $0x37
  4014bb:	e9 70 fc ff ff       	jmpq   401130 <_init+0x28>

Disassembly of section .text:

00000000004014c0 <_start>:
  4014c0:	31 ed                	xor    %ebp,%ebp
  4014c2:	49 89 d1             	mov    %rdx,%r9
  4014c5:	5e                   	pop    %rsi
  4014c6:	48 89 e2             	mov    %rsp,%rdx
  4014c9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  4014cd:	50                   	push   %rax
  4014ce:	54                   	push   %rsp
  4014cf:	49 c7 c0 40 41 40 00 	mov    $0x404140,%r8
  4014d6:	48 c7 c1 d0 40 40 00 	mov    $0x4040d0,%rcx
  4014dd:	48 c7 c7 75 16 40 00 	mov    $0x401675,%rdi
  4014e4:	e8 f7 fd ff ff       	callq  4012e0 <__libc_start_main@plt>
  4014e9:	f4                   	hlt    
  4014ea:	66 90                	xchg   %ax,%ax
  4014ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004014f0 <deregister_tm_clones>:
  4014f0:	b8 e7 61 60 00       	mov    $0x6061e7,%eax
  4014f5:	55                   	push   %rbp
  4014f6:	48 2d e0 61 60 00    	sub    $0x6061e0,%rax
  4014fc:	48 83 f8 0e          	cmp    $0xe,%rax
  401500:	48 89 e5             	mov    %rsp,%rbp
  401503:	77 02                	ja     401507 <deregister_tm_clones+0x17>
  401505:	5d                   	pop    %rbp
  401506:	c3                   	retq   
  401507:	b8 00 00 00 00       	mov    $0x0,%eax
  40150c:	48 85 c0             	test   %rax,%rax
  40150f:	74 f4                	je     401505 <deregister_tm_clones+0x15>
  401511:	5d                   	pop    %rbp
  401512:	bf e0 61 60 00       	mov    $0x6061e0,%edi
  401517:	ff e0                	jmpq   *%rax
  401519:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401520 <register_tm_clones>:
  401520:	b8 e0 61 60 00       	mov    $0x6061e0,%eax
  401525:	55                   	push   %rbp
  401526:	48 2d e0 61 60 00    	sub    $0x6061e0,%rax
  40152c:	48 c1 f8 03          	sar    $0x3,%rax
  401530:	48 89 e5             	mov    %rsp,%rbp
  401533:	48 89 c2             	mov    %rax,%rdx
  401536:	48 c1 ea 3f          	shr    $0x3f,%rdx
  40153a:	48 01 d0             	add    %rdx,%rax
  40153d:	48 d1 f8             	sar    %rax
  401540:	75 02                	jne    401544 <register_tm_clones+0x24>
  401542:	5d                   	pop    %rbp
  401543:	c3                   	retq   
  401544:	ba 00 00 00 00       	mov    $0x0,%edx
  401549:	48 85 d2             	test   %rdx,%rdx
  40154c:	74 f4                	je     401542 <register_tm_clones+0x22>
  40154e:	5d                   	pop    %rbp
  40154f:	48 89 c6             	mov    %rax,%rsi
  401552:	bf e0 61 60 00       	mov    $0x6061e0,%edi
  401557:	ff e2                	jmpq   *%rdx
  401559:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401560 <__do_global_dtors_aux>:
  401560:	80 3d 81 4c 20 00 00 	cmpb   $0x0,0x204c81(%rip)        # 6061e8 <completed.6337>
  401567:	75 11                	jne    40157a <__do_global_dtors_aux+0x1a>
  401569:	55                   	push   %rbp
  40156a:	48 89 e5             	mov    %rsp,%rbp
  40156d:	e8 7e ff ff ff       	callq  4014f0 <deregister_tm_clones>
  401572:	5d                   	pop    %rbp
  401573:	c6 05 6e 4c 20 00 01 	movb   $0x1,0x204c6e(%rip)        # 6061e8 <completed.6337>
  40157a:	f3 c3                	repz retq 
  40157c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401580 <frame_dummy>:
  401580:	48 83 3d 88 48 20 00 	cmpq   $0x0,0x204888(%rip)        # 605e10 <__JCR_END__>
  401587:	00 
  401588:	74 1e                	je     4015a8 <frame_dummy+0x28>
  40158a:	b8 00 00 00 00       	mov    $0x0,%eax
  40158f:	48 85 c0             	test   %rax,%rax
  401592:	74 14                	je     4015a8 <frame_dummy+0x28>
  401594:	55                   	push   %rbp
  401595:	bf 10 5e 60 00       	mov    $0x605e10,%edi
  40159a:	48 89 e5             	mov    %rsp,%rbp
  40159d:	ff d0                	callq  *%rax
  40159f:	5d                   	pop    %rbp
  4015a0:	e9 7b ff ff ff       	jmpq   401520 <register_tm_clones>
  4015a5:	0f 1f 00             	nopl   (%rax)
  4015a8:	e9 73 ff ff ff       	jmpq   401520 <register_tm_clones>
  4015ad:	0f 1f 00             	nopl   (%rax)

00000000004015b0 <service>:
 * Description :
 * *****************************************************************************/
#include "service.h"
#define EPOLL_MAX 10

int *service(send_t *precv){
  4015b0:	55                   	push   %rbp
  4015b1:	48 89 e5             	mov    %rsp,%rbp
  4015b4:	48 83 ec 10          	sub    $0x10,%rsp
  4015b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)

    switch(precv->command_type){
  4015bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4015c0:	8b 80 f4 0c 00 00    	mov    0xcf4(%rax),%eax
  4015c6:	83 e8 0b             	sub    $0xb,%eax
  4015c9:	83 f8 33             	cmp    $0x33,%eax
  4015cc:	0f 87 98 00 00 00    	ja     40166a <service+0xba>
  4015d2:	89 c0                	mov    %eax,%eax
  4015d4:	48 8b 04 c5 60 41 40 	mov    0x404160(,%rax,8),%rax
  4015db:	00 
  4015dc:	ff e0                	jmpq   *%rax

        case _USERADD:

            serve_user_register(precv);
  4015de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4015e2:	48 89 c7             	mov    %rax,%rdi
  4015e5:	e8 d2 0f 00 00       	callq  4025bc <serve_user_register>

            break;
  4015ea:	eb 7f                	jmp    40166b <service+0xbb>
        case _USERCHA:

            serve_user_update(precv);
  4015ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4015f0:	48 89 c7             	mov    %rax,%rdi
  4015f3:	e8 1c 18 00 00       	callq  402e14 <serve_user_update>
            break;
  4015f8:	eb 71                	jmp    40166b <service+0xbb>
        case _USERDEL:

            serve_user_delet(precv);
  4015fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4015fe:	48 89 c7             	mov    %rax,%rdi
  401601:	e8 b1 18 00 00       	callq  402eb7 <serve_user_delet>
            break;
  401606:	eb 63                	jmp    40166b <service+0xbb>
        case _USERONL:

            serve_user_login(precv);
  401608:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40160c:	48 89 c7             	mov    %rax,%rdi
  40160f:	e8 43 12 00 00       	callq  402857 <serve_user_login>

            break;
  401614:	eb 55                	jmp    40166b <service+0xbb>
        case _USEROFFL:

            serve_user_logoff(precv);
  401616:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40161a:	48 89 c7             	mov    %rax,%rdi
  40161d:	e8 9d 16 00 00       	callq  402cbf <serve_user_logoff>
            break;
  401622:	eb 47                	jmp    40166b <service+0xbb>
        case _FRIENDLIST:

            server_friend_show(precv);
  401624:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401628:	48 89 c7             	mov    %rax,%rdi
  40162b:	e8 a4 1f 00 00       	callq  4035d4 <server_friend_show>

            break;
  401630:	eb 39                	jmp    40166b <service+0xbb>
        case _FRIENDDEL:

            server_friend_delet(precv);
  401632:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401636:	48 89 c7             	mov    %rax,%rdi
  401639:	e8 ee 1d 00 00       	callq  40342c <server_friend_delet>

            break;
  40163e:	eb 2b                	jmp    40166b <service+0xbb>
        case _USERSALL:
            server_friend_add(precv);
  401640:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401644:	48 89 c7             	mov    %rax,%rdi
  401647:	e8 c4 21 00 00       	callq  403810 <server_friend_add>

            break;
  40164c:	eb 1d                	jmp    40166b <service+0xbb>
        case _UPLOAD:

            file_upload(precv);
  40164e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401652:	48 89 c7             	mov    %rax,%rdi
  401655:	e8 11 04 00 00       	callq  401a6b <file_upload>

            break;
  40165a:	eb 0f                	jmp    40166b <service+0xbb>
        case _DOWNLOAD:

              file_download(precv);
  40165c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401660:	48 89 c7             	mov    %rax,%rdi
  401663:	e8 f6 04 00 00       	callq  401b5e <file_download>

            break;
  401668:	eb 01                	jmp    40166b <service+0xbb>
                break;
                case 28:
                server_chat_group(conn_fd); //
                break;*/
        default:
            break;
  40166a:	90                   	nop
    }
    pthread_exit(0);
  40166b:	bf 00 00 00 00       	mov    $0x0,%edi
  401670:	e8 eb fc ff ff       	callq  401360 <pthread_exit@plt>

0000000000401675 <main>:
    return NULL;
}

int main(){
  401675:	55                   	push   %rbp
  401676:	48 89 e5             	mov    %rsp,%rbp
  401679:	48 81 ec c0 0f 00 00 	sub    $0xfc0,%rsp

    struct sockaddr_in cli_addr, serv_addr;
    struct epoll_event ev, events[10];
    char flag_recv = _ONLINE;
  401680:	c6 45 fb 6f          	movb   $0x6f,-0x5(%rbp)
    int epfd, nfds;
    int i;
    int optval;

    send_t recv_b;
    send_t *precv = &recv_b;
  401684:	48 8d 85 50 f0 ff ff 	lea    -0xfb0(%rbp),%rax
  40168b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    pthread_t id;

    socklen_t cli_len;


    epfd = epoll_create(EPOLL_MAX+1);
  40168f:	bf 0b 00 00 00       	mov    $0xb,%edi
  401694:	e8 d7 fd ff ff       	callq  401470 <epoll_create@plt>
  401699:	89 45 ec             	mov    %eax,-0x14(%rbp)

    //创建一个TCP套接字
    sock_fd = socket(AF_INET, SOCK_STREAM, 0);
  40169c:	ba 00 00 00 00       	mov    $0x0,%edx
  4016a1:	be 01 00 00 00       	mov    $0x1,%esi
  4016a6:	bf 02 00 00 00       	mov    $0x2,%edi
  4016ab:	e8 00 fe ff ff       	callq  4014b0 <socket@plt>
  4016b0:	89 45 e8             	mov    %eax,-0x18(%rbp)

    if(sock_fd < 0){
  4016b3:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
  4016b7:	79 0f                	jns    4016c8 <main+0x53>
        my_err("socket", __LINE__);
  4016b9:	be 71 00 00 00       	mov    $0x71,%esi
  4016be:	bf 00 43 40 00       	mov    $0x404300,%edi
  4016c3:	e8 d0 25 00 00       	callq  403c98 <my_err>
    }

    //设置该套接字使之可以重新绑定端口
    optval = 1;
  4016c8:	c7 85 2c fe ff ff 01 	movl   $0x1,-0x1d4(%rbp)
  4016cf:	00 00 00 
    if(setsockopt(sock_fd, SOL_SOCKET, SO_REUSEADDR, (void*)&optval, sizeof(int)) < 0){
  4016d2:	48 8d 95 2c fe ff ff 	lea    -0x1d4(%rbp),%rdx
  4016d9:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4016dc:	41 b8 04 00 00 00    	mov    $0x4,%r8d
  4016e2:	48 89 d1             	mov    %rdx,%rcx
  4016e5:	ba 02 00 00 00       	mov    $0x2,%edx
  4016ea:	be 01 00 00 00       	mov    $0x1,%esi
  4016ef:	89 c7                	mov    %eax,%edi
  4016f1:	e8 ca fa ff ff       	callq  4011c0 <setsockopt@plt>
  4016f6:	85 c0                	test   %eax,%eax
  4016f8:	79 0f                	jns    401709 <main+0x94>
        my_err("setsokopt", __LINE__);
  4016fa:	be 77 00 00 00       	mov    $0x77,%esi
  4016ff:	bf 07 43 40 00       	mov    $0x404307,%edi
  401704:	e8 8f 25 00 00       	callq  403c98 <my_err>
    }


    //套接字加入epoll
    ev.data.fd = sock_fd;
  401709:	8b 45 e8             	mov    -0x18(%rbp),%eax
  40170c:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    ev.events = EPOLLIN;
  40170f:	c7 45 a0 01 00 00 00 	movl   $0x1,-0x60(%rbp)
    epoll_ctl(epfd, EPOLL_CTL_ADD, sock_fd, &ev);
  401716:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
  40171a:	8b 55 e8             	mov    -0x18(%rbp),%edx
  40171d:	8b 45 ec             	mov    -0x14(%rbp),%eax
  401720:	be 01 00 00 00       	mov    $0x1,%esi
  401725:	89 c7                	mov    %eax,%edi
  401727:	e8 94 fb ff ff       	callq  4012c0 <epoll_ctl@plt>


    //初始化服务器端地址
    memset(&serv_addr, 0, sizeof(struct sockaddr_in));
  40172c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  401730:	ba 10 00 00 00       	mov    $0x10,%edx
  401735:	be 00 00 00 00       	mov    $0x0,%esi
  40173a:	48 89 c7             	mov    %rax,%rdi
  40173d:	e8 5e fb ff ff       	callq  4012a0 <memset@plt>
    serv_addr.sin_family = AF_INET;
  401742:	66 c7 45 b0 02 00    	movw   $0x2,-0x50(%rbp)
    serv_addr.sin_port = htons(SERV_PORT);
  401748:	bf 9b 11 00 00       	mov    $0x119b,%edi
  40174d:	e8 ee fa ff ff       	callq  401240 <htons@plt>
  401752:	66 89 45 b2          	mov    %ax,-0x4e(%rbp)
    serv_addr.sin_addr.s_addr = htonl(INADDR_ANY);
  401756:	bf 00 00 00 00       	mov    $0x0,%edi
  40175b:	e8 30 fb ff ff       	callq  401290 <htonl@plt>
  401760:	89 45 b4             	mov    %eax,-0x4c(%rbp)

    //将套接字绑定到本地端口
    if(bind(sock_fd, (struct sockaddr*)&serv_addr, sizeof(struct sockaddr_in)) < 0){
  401763:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
  401767:	8b 45 e8             	mov    -0x18(%rbp),%eax
  40176a:	ba 10 00 00 00       	mov    $0x10,%edx
  40176f:	48 89 ce             	mov    %rcx,%rsi
  401772:	89 c7                	mov    %eax,%edi
  401774:	e8 37 fc ff ff       	callq  4013b0 <bind@plt>
  401779:	85 c0                	test   %eax,%eax
  40177b:	79 0f                	jns    40178c <main+0x117>
        my_err("bind",__LINE__);
  40177d:	be 89 00 00 00       	mov    $0x89,%esi
  401782:	bf 11 43 40 00       	mov    $0x404311,%edi
  401787:	e8 0c 25 00 00       	callq  403c98 <my_err>
    }

    //将套接字转化为监听套接字
    if(listen(sock_fd, LISTENQ) < 0){
  40178c:	8b 45 e8             	mov    -0x18(%rbp),%eax
  40178f:	be 0c 00 00 00       	mov    $0xc,%esi
  401794:	89 c7                	mov    %eax,%edi
  401796:	e8 e5 fb ff ff       	callq  401380 <listen@plt>
  40179b:	85 c0                	test   %eax,%eax
  40179d:	79 0f                	jns    4017ae <main+0x139>
        my_err("listen",__LINE__);
  40179f:	be 8e 00 00 00       	mov    $0x8e,%esi
  4017a4:	bf 16 43 40 00       	mov    $0x404316,%edi
  4017a9:	e8 ea 24 00 00       	callq  403c98 <my_err>
    }

    cli_len = sizeof(struct sockaddr_in);
  4017ae:	c7 85 44 f0 ff ff 10 	movl   $0x10,-0xfbc(%rbp)
  4017b5:	00 00 00 

    system("clear");
  4017b8:	bf 1d 43 40 00       	mov    $0x40431d,%edi
  4017bd:	e8 6e fa ff ff       	callq  401230 <system@plt>
    puts("service is working...");
  4017c2:	bf 23 43 40 00       	mov    $0x404323,%edi
  4017c7:	e8 d4 f9 ff ff       	callq  4011a0 <puts@plt>

    while(1){

        //设置永久阻塞
        nfds = (epoll_wait(epfd, events, EPOLL_MAX, -1));
  4017cc:	48 8d b5 20 ff ff ff 	lea    -0xe0(%rbp),%rsi
  4017d3:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4017d6:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
  4017db:	ba 0a 00 00 00       	mov    $0xa,%edx
  4017e0:	89 c7                	mov    %eax,%edi
  4017e2:	e8 b9 fb ff ff       	callq  4013a0 <epoll_wait@plt>
  4017e7:	89 45 e4             	mov    %eax,-0x1c(%rbp)

        if(nfds < 0){
  4017ea:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  4017ee:	79 05                	jns    4017f5 <main+0x180>
            break;
  4017f0:	e9 56 02 00 00       	jmpq   401a4b <main+0x3d6>
        }

        for(i = 0; i < nfds; i++){
  4017f5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4017fc:	e9 39 02 00 00       	jmpq   401a3a <main+0x3c5>
            //套接字描述符改变_连接请求
            if(events[i].data.fd == sock_fd){
  401801:	8b 45 fc             	mov    -0x4(%rbp),%eax
  401804:	48 63 d0             	movslq %eax,%rdx
  401807:	48 89 d0             	mov    %rdx,%rax
  40180a:	48 01 c0             	add    %rax,%rax
  40180d:	48 01 d0             	add    %rdx,%rax
  401810:	48 c1 e0 02          	shl    $0x2,%rax
  401814:	48 01 e8             	add    %rbp,%rax
  401817:	48 2d e0 00 00 00    	sub    $0xe0,%rax
  40181d:	8b 40 04             	mov    0x4(%rax),%eax
  401820:	3b 45 e8             	cmp    -0x18(%rbp),%eax
  401823:	75 74                	jne    401899 <main+0x224>

                //通过accept接受客户端的连接请求，并返回连接套接字用于手法数据
                if((conn_fd = accept(sock_fd, (struct sockaddr*)&cli_addr, &cli_len)) == -1){
  401825:	48 8d 95 44 f0 ff ff 	lea    -0xfbc(%rbp),%rdx
  40182c:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  401830:	8b 45 e8             	mov    -0x18(%rbp),%eax
  401833:	48 89 ce             	mov    %rcx,%rsi
  401836:	89 c7                	mov    %eax,%edi
  401838:	e8 f3 fb ff ff       	callq  401430 <accept@plt>
  40183d:	89 45 e0             	mov    %eax,-0x20(%rbp)
  401840:	83 7d e0 ff          	cmpl   $0xffffffff,-0x20(%rbp)
  401844:	75 0f                	jne    401855 <main+0x1e0>
                    my_err("accept", __LINE__);
  401846:	be a5 00 00 00       	mov    $0xa5,%esi
  40184b:	bf 39 43 40 00       	mov    $0x404339,%edi
  401850:	e8 43 24 00 00       	callq  403c98 <my_err>
                }

                printf("client from [IP:%s] is working.\n",inet_ntoa(cli_addr.sin_addr));
  401855:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  401858:	89 c7                	mov    %eax,%edi
  40185a:	e8 81 f9 ff ff       	callq  4011e0 <inet_ntoa@plt>
  40185f:	48 89 c6             	mov    %rax,%rsi
  401862:	bf 40 43 40 00       	mov    $0x404340,%edi
  401867:	b8 00 00 00 00       	mov    $0x0,%eax
  40186c:	e8 ef f9 ff ff       	callq  401260 <printf@plt>

                //初始化客户端fd
                ev.data.fd = conn_fd;
  401871:	8b 45 e0             	mov    -0x20(%rbp),%eax
  401874:	89 45 a4             	mov    %eax,-0x5c(%rbp)
                ev.events = EPOLLIN;
  401877:	c7 45 a0 01 00 00 00 	movl   $0x1,-0x60(%rbp)
                epoll_ctl(epfd, EPOLL_CTL_ADD, conn_fd, &ev);
  40187e:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
  401882:	8b 55 e0             	mov    -0x20(%rbp),%edx
  401885:	8b 45 ec             	mov    -0x14(%rbp),%eax
  401888:	be 01 00 00 00       	mov    $0x1,%esi
  40188d:	89 c7                	mov    %eax,%edi
  40188f:	e8 2c fa ff ff       	callq  4012c0 <epoll_ctl@plt>
  401894:	e9 9d 01 00 00       	jmpq   401a36 <main+0x3c1>

            }

            //有读事件发生
            else if(events[i].events & EPOLLIN){
  401899:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40189c:	48 63 d0             	movslq %eax,%rdx
  40189f:	48 89 d0             	mov    %rdx,%rax
  4018a2:	48 01 c0             	add    %rax,%rax
  4018a5:	48 01 d0             	add    %rdx,%rax
  4018a8:	48 c1 e0 02          	shl    $0x2,%rax
  4018ac:	48 01 e8             	add    %rbp,%rax
  4018af:	48 2d e0 00 00 00    	sub    $0xe0,%rax
  4018b5:	8b 00                	mov    (%rax),%eax
  4018b7:	83 e0 01             	and    $0x1,%eax
  4018ba:	85 c0                	test   %eax,%eax
  4018bc:	0f 84 74 01 00 00    	je     401a36 <main+0x3c1>
                int fd;
                if(recv_data(events[i].data.fd, precv) <= 0 || precv->command_type == _USEROFFL){
  4018c2:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4018c5:	48 63 d0             	movslq %eax,%rdx
  4018c8:	48 89 d0             	mov    %rdx,%rax
  4018cb:	48 01 c0             	add    %rax,%rax
  4018ce:	48 01 d0             	add    %rdx,%rax
  4018d1:	48 c1 e0 02          	shl    $0x2,%rax
  4018d5:	48 01 e8             	add    %rbp,%rax
  4018d8:	48 2d e0 00 00 00    	sub    $0xe0,%rax
  4018de:	8b 40 04             	mov    0x4(%rax),%eax
  4018e1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4018e5:	48 89 d6             	mov    %rdx,%rsi
  4018e8:	89 c7                	mov    %eax,%edi
  4018ea:	e8 e2 23 00 00       	callq  403cd1 <recv_data>
  4018ef:	85 c0                	test   %eax,%eax
  4018f1:	7e 13                	jle    401906 <main+0x291>
  4018f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4018f7:	8b 80 f4 0c 00 00    	mov    0xcf4(%rax),%eax
  4018fd:	83 f8 0f             	cmp    $0xf,%eax
  401900:	0f 85 88 00 00 00    	jne    40198e <main+0x319>

                    printf("client: %d disconnect", events[i].data.fd);
  401906:	8b 45 fc             	mov    -0x4(%rbp),%eax
  401909:	48 63 d0             	movslq %eax,%rdx
  40190c:	48 89 d0             	mov    %rdx,%rax
  40190f:	48 01 c0             	add    %rax,%rax
  401912:	48 01 d0             	add    %rdx,%rax
  401915:	48 c1 e0 02          	shl    $0x2,%rax
  401919:	48 01 e8             	add    %rbp,%rax
  40191c:	48 2d e0 00 00 00    	sub    $0xe0,%rax
  401922:	8b 40 04             	mov    0x4(%rax),%eax
  401925:	89 c6                	mov    %eax,%esi
  401927:	bf 61 43 40 00       	mov    $0x404361,%edi
  40192c:	b8 00 00 00 00       	mov    $0x0,%eax
  401931:	e8 2a f9 ff ff       	callq  401260 <printf@plt>
                    fd = events[i].data.fd;
  401936:	8b 45 fc             	mov    -0x4(%rbp),%eax
  401939:	48 63 d0             	movslq %eax,%rdx
  40193c:	48 89 d0             	mov    %rdx,%rax
  40193f:	48 01 c0             	add    %rax,%rax
  401942:	48 01 d0             	add    %rdx,%rax
  401945:	48 c1 e0 02          	shl    $0x2,%rax
  401949:	48 01 e8             	add    %rbp,%rax
  40194c:	48 2d e0 00 00 00    	sub    $0xe0,%rax
  401952:	8b 40 04             	mov    0x4(%rax),%eax
  401955:	89 45 dc             	mov    %eax,-0x24(%rbp)
                    serve_user_logoff(precv);
  401958:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40195c:	48 89 c7             	mov    %rax,%rdi
  40195f:	e8 5b 13 00 00       	callq  402cbf <serve_user_logoff>

                    epoll_ctl(epfd, EPOLL_CTL_DEL, fd, &ev);
  401964:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
  401968:	8b 55 dc             	mov    -0x24(%rbp),%edx
  40196b:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40196e:	be 02 00 00 00       	mov    $0x2,%esi
  401973:	89 c7                	mov    %eax,%edi
  401975:	e8 46 f9 ff ff       	callq  4012c0 <epoll_ctl@plt>

                    shutdown(fd, SHUT_RD);
  40197a:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40197d:	be 00 00 00 00       	mov    $0x0,%esi
  401982:	89 c7                	mov    %eax,%edi
  401984:	e8 77 f8 ff ff       	callq  401200 <shutdown@plt>

                    continue;
  401989:	e9 a8 00 00 00       	jmpq   401a36 <main+0x3c1>
                }

                puts("dsa");
  40198e:	bf 77 43 40 00       	mov    $0x404377,%edi
  401993:	e8 08 f8 ff ff       	callq  4011a0 <puts@plt>
                precv->conn_fd = events[i].data.fd;
  401998:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40199b:	48 63 d0             	movslq %eax,%rdx
  40199e:	48 89 d0             	mov    %rdx,%rax
  4019a1:	48 01 c0             	add    %rax,%rax
  4019a4:	48 01 d0             	add    %rdx,%rax
  4019a7:	48 c1 e0 02          	shl    $0x2,%rax
  4019ab:	48 01 e8             	add    %rbp,%rax
  4019ae:	48 2d e0 00 00 00    	sub    $0xe0,%rax
  4019b4:	8b 50 04             	mov    0x4(%rax),%edx
  4019b7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4019bb:	89 90 e4 0c 00 00    	mov    %edx,0xce4(%rax)
                fd = events[i].data.fd;
  4019c1:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4019c4:	48 63 d0             	movslq %eax,%rdx
  4019c7:	48 89 d0             	mov    %rdx,%rax
  4019ca:	48 01 c0             	add    %rax,%rax
  4019cd:	48 01 d0             	add    %rdx,%rax
  4019d0:	48 c1 e0 02          	shl    $0x2,%rax
  4019d4:	48 01 e8             	add    %rbp,%rax
  4019d7:	48 2d e0 00 00 00    	sub    $0xe0,%rax
  4019dd:	8b 40 04             	mov    0x4(%rax),%eax
  4019e0:	89 45 dc             	mov    %eax,-0x24(%rbp)
                //线程参数结构体赋值
                printf("%d %d %c\n", precv->command_type, precv->input_check, precv->userstatus);
  4019e3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4019e7:	0f b6 80 f0 0c 00 00 	movzbl 0xcf0(%rax),%eax
  4019ee:	0f be c8             	movsbl %al,%ecx
  4019f1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4019f5:	8b 90 ec 0c 00 00    	mov    0xcec(%rax),%edx
  4019fb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4019ff:	8b 80 f4 0c 00 00    	mov    0xcf4(%rax),%eax
  401a05:	89 c6                	mov    %eax,%esi
  401a07:	bf 7b 43 40 00       	mov    $0x40437b,%edi
  401a0c:	b8 00 00 00 00       	mov    $0x0,%eax
  401a11:	e8 4a f8 ff ff       	callq  401260 <printf@plt>

                //下线则解除
                pthread_create(&id, NULL,(void*)service,precv);//新开线程去处理事件*/
  401a16:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  401a1a:	48 8d 85 48 f0 ff ff 	lea    -0xfb8(%rbp),%rax
  401a21:	48 89 d1             	mov    %rdx,%rcx
  401a24:	ba b0 15 40 00       	mov    $0x4015b0,%edx
  401a29:	be 00 00 00 00       	mov    $0x0,%esi
  401a2e:	48 89 c7             	mov    %rax,%rdi
  401a31:	e8 2a f7 ff ff       	callq  401160 <pthread_create@plt>

        if(nfds < 0){
            break;
        }

        for(i = 0; i < nfds; i++){
  401a36:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  401a3a:	8b 45 fc             	mov    -0x4(%rbp),%eax
  401a3d:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
  401a40:	0f 8c bb fd ff ff    	jl     401801 <main+0x18c>
                //下线则解除
                pthread_create(&id, NULL,(void*)service,precv);//新开线程去处理事件*/

            }
        }
    }
  401a46:	e9 81 fd ff ff       	jmpq   4017cc <main+0x157>

    close (epfd);
  401a4b:	8b 45 ec             	mov    -0x14(%rbp),%eax
  401a4e:	89 c7                	mov    %eax,%edi
  401a50:	e8 5b f8 ff ff       	callq  4012b0 <close@plt>
    shutdown(sock_fd, SHUT_RD);
  401a55:	8b 45 e8             	mov    -0x18(%rbp),%eax
  401a58:	be 00 00 00 00       	mov    $0x0,%esi
  401a5d:	89 c7                	mov    %eax,%edi
  401a5f:	e8 9c f7 ff ff       	callq  401200 <shutdown@plt>
    return 0;
  401a64:	b8 00 00 00 00       	mov    $0x0,%eax
}
  401a69:	c9                   	leaveq 
  401a6a:	c3                   	retq   

0000000000401a6b <file_upload>:

int file_upload(send_t * precv){
  401a6b:	55                   	push   %rbp
  401a6c:	48 89 e5             	mov    %rsp,%rbp
  401a6f:	48 81 ec 60 01 00 00 	sub    $0x160,%rsp
  401a76:	48 89 bd a8 fe ff ff 	mov    %rdi,-0x158(%rbp)
    int ret;
    int fd;
    //.readaheadint buf[100];
    file_t file_buf;
    //int buf2[100];
    file_t *pfile = &file_buf;
  401a7d:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
  401a84:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    //bootputs("dsadsa");
    //memset(pfile, 0, sizeof(file_buf));

    //maskname 判断

    fd = open(precv->file.markname, O_RDWR | O_CREAT | O_APPEND, S_IRUSR | S_IWUSR | S_IRGRP);
  401a88:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
  401a8f:	48 05 b4 0c 00 00    	add    $0xcb4,%rax
  401a95:	ba a0 01 00 00       	mov    $0x1a0,%edx
  401a9a:	be 42 04 00 00       	mov    $0x442,%esi
  401a9f:	48 89 c7             	mov    %rax,%rdi
  401aa2:	b8 00 00 00 00       	mov    $0x0,%eax
  401aa7:	e8 34 f9 ff ff       	callq  4013e0 <open@plt>
  401aac:	89 45 f4             	mov    %eax,-0xc(%rbp)
    if(fd < 0){
  401aaf:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  401ab3:	79 0f                	jns    401ac4 <file_upload+0x59>
        my_err("file_open", __LINE__);
  401ab5:	be e3 00 00 00       	mov    $0xe3,%esi
  401aba:	bf 85 43 40 00       	mov    $0x404385,%edi
  401abf:	e8 d4 21 00 00       	callq  403c98 <my_err>
    }    // 开始标志

    if(precv->userstatus == LOADSTART){
  401ac4:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
  401acb:	0f b6 80 f0 0c 00 00 	movzbl 0xcf0(%rax),%eax
  401ad2:	3c 74                	cmp    $0x74,%al
  401ad4:	74 6d                	je     401b43 <file_upload+0xd8>
        //printf("start recving file :%s\n", precv->file.markname);
        //printf("size of the file: %dB\n", precv->file.filelen);
    }else{

        //puts("?");
        ret = file_write(fd, precv->buf, BUFSIZE);
  401ad6:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
  401add:	48 8d 88 f8 0c 00 00 	lea    0xcf8(%rax),%rcx
  401ae4:	8b 45 f4             	mov    -0xc(%rbp),%eax
  401ae7:	ba e1 00 00 00       	mov    $0xe1,%edx
  401aec:	48 89 ce             	mov    %rcx,%rsi
  401aef:	89 c7                	mov    %eax,%edi
  401af1:	e8 56 22 00 00       	callq  403d4c <file_write>
  401af6:	89 45 f0             	mov    %eax,-0x10(%rbp)
        pfile->givelen = file_len(fd);
  401af9:	8b 45 f4             	mov    -0xc(%rbp),%eax
  401afc:	89 c7                	mov    %eax,%edi
  401afe:	e8 8f 22 00 00       	callq  403d92 <file_len>
  401b03:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  401b07:	89 42 48             	mov    %eax,0x48(%rdx)
        //printf("recvlen : %dB\n\n", precv->file.givelen);
        //
        if(pfile->givelen != precv->file.givelen){
            //my_err("recv_len", __LINE__);
        }
        if(precv->userstatus == LOADOVER){
  401b0a:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
  401b11:	0f b6 80 f0 0c 00 00 	movzbl 0xcf0(%rax),%eax
  401b18:	3c 72                	cmp    $0x72,%al
  401b1a:	75 27                	jne    401b43 <file_upload+0xd8>
            //
            if(pfile->givelen == precv->file.filelen){
  401b1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401b20:	8b 50 48             	mov    0x48(%rax),%edx
  401b23:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
  401b2a:	8b 80 d4 0c 00 00    	mov    0xcd4(%rax),%eax
  401b30:	39 c2                	cmp    %eax,%edx
  401b32:	74 0f                	je     401b43 <file_upload+0xd8>
               // puts("download over");
            }
            else{
                my_err("download failed", __LINE__);
  401b34:	be fa 00 00 00       	mov    $0xfa,%esi
  401b39:	bf 8f 43 40 00       	mov    $0x40438f,%edi
  401b3e:	e8 55 21 00 00       	callq  403c98 <my_err>
            }
        }
    }
    close(fd);
  401b43:	8b 45 f4             	mov    -0xc(%rbp),%eax
  401b46:	89 c7                	mov    %eax,%edi
  401b48:	e8 63 f7 ff ff       	callq  4012b0 <close@plt>
    system("ls");
  401b4d:	bf 9f 43 40 00       	mov    $0x40439f,%edi
  401b52:	e8 d9 f6 ff ff       	callq  401230 <system@plt>
    return 0;
  401b57:	b8 00 00 00 00       	mov    $0x0,%eax
}
  401b5c:	c9                   	leaveq 
  401b5d:	c3                   	retq   

0000000000401b5e <file_download>:

int file_download(send_t* precv){
  401b5e:	55                   	push   %rbp
  401b5f:	48 89 e5             	mov    %rsp,%rbp
  401b62:	48 81 ec 50 0f 00 00 	sub    $0xf50,%rsp
  401b69:	48 89 bd b8 f0 ff ff 	mov    %rdi,-0xf48(%rbp)

    int fd;
    file_t file_buf;
    file_t *pfile = &file_buf;
  401b70:	48 8d 85 a0 fe ff ff 	lea    -0x160(%rbp),%rax
  401b77:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    send_t send_buf;
    send_t *psend = &send_buf;
  401b7b:	48 8d 85 c0 f0 ff ff 	lea    -0xf40(%rbp),%rax
  401b82:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    char *temp_buf;

    psend->conn_fd = precv->conn_fd;
  401b86:	48 8b 85 b8 f0 ff ff 	mov    -0xf48(%rbp),%rax
  401b8d:	8b 90 e4 0c 00 00    	mov    0xce4(%rax),%edx
  401b93:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401b97:	89 90 e4 0c 00 00    	mov    %edx,0xce4(%rax)

    fd = open(precv->file.markname, O_RDWR );
  401b9d:	48 8b 85 b8 f0 ff ff 	mov    -0xf48(%rbp),%rax
  401ba4:	48 05 b4 0c 00 00    	add    $0xcb4,%rax
  401baa:	be 02 00 00 00       	mov    $0x2,%esi
  401baf:	48 89 c7             	mov    %rax,%rdi
  401bb2:	b8 00 00 00 00       	mov    $0x0,%eax
  401bb7:	e8 24 f8 ff ff       	callq  4013e0 <open@plt>
  401bbc:	89 45 ec             	mov    %eax,-0x14(%rbp)
    if(fd < 0){
  401bbf:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  401bc3:	79 15                	jns    401bda <file_download+0x7c>
        psend->userstatus = LOADWRONG;
  401bc5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401bc9:	c6 80 f0 0c 00 00 67 	movb   $0x67,0xcf0(%rax)
        return 0;
  401bd0:	b8 00 00 00 00       	mov    $0x0,%eax
  401bd5:	e9 7a 03 00 00       	jmpq   401f54 <file_download+0x3f6>
    }

    temp_buf = (char*)malloc(1024*1024);
  401bda:	bf 00 00 10 00       	mov    $0x100000,%edi
  401bdf:	e8 8c f7 ff ff       	callq  401370 <malloc@plt>
  401be4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

    //get the file information , size or ...

    puts("<system>:file send to user");
  401be8:	bf a2 43 40 00       	mov    $0x4043a2,%edi
  401bed:	e8 ae f5 ff ff       	callq  4011a0 <puts@plt>
    printf("filepath:%s\n", precv->file.markname);
  401bf2:	48 8b 85 b8 f0 ff ff 	mov    -0xf48(%rbp),%rax
  401bf9:	48 05 b4 0c 00 00    	add    $0xcb4,%rax
  401bff:	48 89 c6             	mov    %rax,%rsi
  401c02:	bf bd 43 40 00       	mov    $0x4043bd,%edi
  401c07:	b8 00 00 00 00       	mov    $0x0,%eax
  401c0c:	e8 4f f6 ff ff       	callq  401260 <printf@plt>
    printf("size:%dB\n", pfile->filelen);
  401c11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401c15:	8b 40 40             	mov    0x40(%rax),%eax
  401c18:	89 c6                	mov    %eax,%esi
  401c1a:	bf ca 43 40 00       	mov    $0x4043ca,%edi
  401c1f:	b8 00 00 00 00       	mov    $0x0,%eax
  401c24:	e8 37 f6 ff ff       	callq  401260 <printf@plt>

    //copy file into send_buf;
    pfile->filelen = file_len(fd);
  401c29:	8b 45 ec             	mov    -0x14(%rbp),%eax
  401c2c:	89 c7                	mov    %eax,%edi
  401c2e:	e8 5f 21 00 00       	callq  403d92 <file_len>
  401c33:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  401c37:	89 42 40             	mov    %eax,0x40(%rdx)
    pfile->leftlen = file_len(fd);
  401c3a:	8b 45 ec             	mov    -0x14(%rbp),%eax
  401c3d:	89 c7                	mov    %eax,%edi
  401c3f:	e8 4e 21 00 00       	callq  403d92 <file_len>
  401c44:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  401c48:	89 42 50             	mov    %eax,0x50(%rdx)
    pfile->givelen = 0;
  401c4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401c4f:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%rax)
    file_read(fd, pfile->filelen, temp_buf);
  401c56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401c5a:	8b 48 40             	mov    0x40(%rax),%ecx
  401c5d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  401c61:	8b 45 ec             	mov    -0x14(%rbp),%eax
  401c64:	89 ce                	mov    %ecx,%esi
  401c66:	89 c7                	mov    %eax,%edi
  401c68:	e8 ba 21 00 00       	callq  403e27 <file_read>

    psend->userstatus = LOADSTART;
  401c6d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401c71:	c6 80 f0 0c 00 00 74 	movb   $0x74,0xcf0(%rax)

    while(1){

        strcpy(psend->file.markname, pfile->markname);
  401c78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401c7c:	48 8d 50 20          	lea    0x20(%rax),%rdx
  401c80:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401c84:	48 05 b4 0c 00 00    	add    $0xcb4,%rax
  401c8a:	48 89 d6             	mov    %rdx,%rsi
  401c8d:	48 89 c7             	mov    %rax,%rdi
  401c90:	e8 fb f4 ff ff       	callq  401190 <strcpy@plt>
        psend->command_type = _DOWNLOAD;
  401c95:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401c99:	c7 80 f4 0c 00 00 3e 	movl   $0x3e,0xcf4(%rax)
  401ca0:	00 00 00 
        psend->conn_fd = precv->conn_fd;
  401ca3:	48 8b 85 b8 f0 ff ff 	mov    -0xf48(%rbp),%rax
  401caa:	8b 90 e4 0c 00 00    	mov    0xce4(%rax),%edx
  401cb0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401cb4:	89 90 e4 0c 00 00    	mov    %edx,0xce4(%rax)

        if(psend->userstatus == LOADSTART){
  401cba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401cbe:	0f b6 80 f0 0c 00 00 	movzbl 0xcf0(%rax),%eax
  401cc5:	3c 74                	cmp    $0x74,%al
  401cc7:	75 54                	jne    401d1d <file_download+0x1bf>

            pfile->sendlen = send_data(psend->conn_fd,psend);
  401cc9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401ccd:	8b 80 e4 0c 00 00    	mov    0xce4(%rax),%eax
  401cd3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  401cd7:	48 89 d6             	mov    %rdx,%rsi
  401cda:	89 c7                	mov    %eax,%edi
  401cdc:	e8 65 22 00 00       	callq  403f46 <send_data>
  401ce1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  401ce5:	89 42 44             	mov    %eax,0x44(%rdx)
            psend->userstatus = '0';
  401ce8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401cec:	c6 80 f0 0c 00 00 30 	movb   $0x30,0xcf0(%rax)

            if(pfile->sendlen < 0){
  401cf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401cf7:	8b 40 44             	mov    0x44(%rax),%eax
  401cfa:	85 c0                	test   %eax,%eax
  401cfc:	79 0f                	jns    401d0d <file_download+0x1af>
                my_err("download_file", __LINE__);
  401cfe:	be 30 01 00 00       	mov    $0x130,%esi
  401d03:	bf d4 43 40 00       	mov    $0x4043d4,%edi
  401d08:	e8 8b 1f 00 00       	callq  403c98 <my_err>
            }
            sleep(1);
  401d0d:	bf 01 00 00 00       	mov    $0x1,%edi
  401d12:	e8 79 f7 ff ff       	callq  401490 <sleep@plt>
            continue;
  401d17:	90                   	nop

        usleep(100000);

        pfile->givelen += BUFSIZE;
        pfile->leftlen = pfile->filelen - pfile->givelen;
    }//while
  401d18:	e9 5b ff ff ff       	jmpq   401c78 <file_download+0x11a>
            }
            sleep(1);
            continue;
        }

        if((pfile->leftlen <= 0) || (pfile->givelen >= pfile->filelen)){
  401d1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401d21:	8b 40 50             	mov    0x50(%rax),%eax
  401d24:	85 c0                	test   %eax,%eax
  401d26:	0f 8e d7 01 00 00    	jle    401f03 <file_download+0x3a5>
  401d2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401d30:	8b 50 48             	mov    0x48(%rax),%edx
  401d33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401d37:	8b 40 40             	mov    0x40(%rax),%eax
  401d3a:	39 c2                	cmp    %eax,%edx
  401d3c:	0f 8d c1 01 00 00    	jge    401f03 <file_download+0x3a5>
            break;
        }

        if(pfile->leftlen >= BUFSIZE){
  401d42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401d46:	8b 40 50             	mov    0x50(%rax),%eax
  401d49:	3d e0 00 00 00       	cmp    $0xe0,%eax
  401d4e:	0f 8e 88 00 00 00    	jle    401ddc <file_download+0x27e>
            psend->file.givelen = pfile->givelen;
  401d54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401d58:	8b 50 48             	mov    0x48(%rax),%edx
  401d5b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401d5f:	89 90 dc 0c 00 00    	mov    %edx,0xcdc(%rax)
            memcpy(psend->buf, temp_buf+precv->file.givelen, BUFSIZE);
  401d65:	48 8b 85 b8 f0 ff ff 	mov    -0xf48(%rbp),%rax
  401d6c:	8b 80 dc 0c 00 00    	mov    0xcdc(%rax),%eax
  401d72:	48 63 d0             	movslq %eax,%rdx
  401d75:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  401d79:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
  401d7d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401d81:	48 05 f8 0c 00 00    	add    $0xcf8,%rax
  401d87:	ba e1 00 00 00       	mov    $0xe1,%edx
  401d8c:	48 89 ce             	mov    %rcx,%rsi
  401d8f:	48 89 c7             	mov    %rax,%rdi
  401d92:	e8 a9 f5 ff ff       	callq  401340 <memcpy@plt>
            pfile->sendlen = send_data(precv->conn_fd, psend);
  401d97:	48 8b 85 b8 f0 ff ff 	mov    -0xf48(%rbp),%rax
  401d9e:	8b 80 e4 0c 00 00    	mov    0xce4(%rax),%eax
  401da4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  401da8:	48 89 d6             	mov    %rdx,%rsi
  401dab:	89 c7                	mov    %eax,%edi
  401dad:	e8 94 21 00 00       	callq  403f46 <send_data>
  401db2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  401db6:	89 42 44             	mov    %eax,0x44(%rdx)

            if(pfile->sendlen <= 0){
  401db9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401dbd:	8b 40 44             	mov    0x44(%rax),%eax
  401dc0:	85 c0                	test   %eax,%eax
  401dc2:	0f 8f d0 00 00 00    	jg     401e98 <file_download+0x33a>
                my_err("download_file", __LINE__);
  401dc8:	be 40 01 00 00       	mov    $0x140,%esi
  401dcd:	bf d4 43 40 00       	mov    $0x4043d4,%edi
  401dd2:	e8 c1 1e 00 00       	callq  403c98 <my_err>
  401dd7:	e9 bc 00 00 00       	jmpq   401e98 <file_download+0x33a>
                //can make mark;
            }
        }
        else{
            memcpy(psend->buf, temp_buf+pfile->givelen, pfile->leftlen);
  401ddc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401de0:	8b 40 50             	mov    0x50(%rax),%eax
  401de3:	48 98                	cltq   
  401de5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  401de9:	8b 52 48             	mov    0x48(%rdx),%edx
  401dec:	48 63 ca             	movslq %edx,%rcx
  401def:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  401df3:	48 8d 34 11          	lea    (%rcx,%rdx,1),%rsi
  401df7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  401dfb:	48 8d 8a f8 0c 00 00 	lea    0xcf8(%rdx),%rcx
  401e02:	48 89 c2             	mov    %rax,%rdx
  401e05:	48 89 cf             	mov    %rcx,%rdi
  401e08:	e8 33 f5 ff ff       	callq  401340 <memcpy@plt>
            psend->userstatus = LOADOVER;
  401e0d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401e11:	c6 80 f0 0c 00 00 72 	movb   $0x72,0xcf0(%rax)
            psend->file.givelen = pfile->givelen + pfile->leftlen;
  401e18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401e1c:	8b 50 48             	mov    0x48(%rax),%edx
  401e1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401e23:	8b 40 50             	mov    0x50(%rax),%eax
  401e26:	01 c2                	add    %eax,%edx
  401e28:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401e2c:	89 90 dc 0c 00 00    	mov    %edx,0xcdc(%rax)
            psend->file.sendlen = pfile->leftlen;
  401e32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401e36:	8b 50 50             	mov    0x50(%rax),%edx
  401e39:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401e3d:	89 90 d8 0c 00 00    	mov    %edx,0xcd8(%rax)
            pfile->sendlen = send_data(precv->conn_fd, psend);
  401e43:	48 8b 85 b8 f0 ff ff 	mov    -0xf48(%rbp),%rax
  401e4a:	8b 80 e4 0c 00 00    	mov    0xce4(%rax),%eax
  401e50:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  401e54:	48 89 d6             	mov    %rdx,%rsi
  401e57:	89 c7                	mov    %eax,%edi
  401e59:	e8 e8 20 00 00       	callq  403f46 <send_data>
  401e5e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  401e62:	89 42 44             	mov    %eax,0x44(%rdx)

            if(pfile->sendlen <= 0){
  401e65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401e69:	8b 40 44             	mov    0x44(%rax),%eax
  401e6c:	85 c0                	test   %eax,%eax
  401e6e:	7f 0f                	jg     401e7f <file_download+0x321>
                my_err("download_failed", __LINE__);
  401e70:	be 4c 01 00 00       	mov    $0x14c,%esi
  401e75:	bf e2 43 40 00       	mov    $0x4043e2,%edi
  401e7a:	e8 19 1e 00 00       	callq  403c98 <my_err>
            }

            pfile->givelen = pfile->givelen + pfile->leftlen;
  401e7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401e83:	8b 50 48             	mov    0x48(%rax),%edx
  401e86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401e8a:	8b 40 50             	mov    0x50(%rax),%eax
  401e8d:	01 c2                	add    %eax,%edx
  401e8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401e93:	89 50 48             	mov    %edx,0x48(%rax)

            break;
  401e96:	eb 6b                	jmp    401f03 <file_download+0x3a5>
        }
        if(pfile->givelen < pfile->filelen){
  401e98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401e9c:	8b 50 48             	mov    0x48(%rax),%edx
  401e9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401ea3:	8b 40 40             	mov    0x40(%rax),%eax
  401ea6:	39 c2                	cmp    %eax,%edx
  401ea8:	7d 1f                	jge    401ec9 <file_download+0x36b>
            printf("user recved %dB, file len %dB\n", pfile->givelen, pfile->filelen);
  401eaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401eae:	8b 50 40             	mov    0x40(%rax),%edx
  401eb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401eb5:	8b 40 48             	mov    0x48(%rax),%eax
  401eb8:	89 c6                	mov    %eax,%esi
  401eba:	bf f8 43 40 00       	mov    $0x4043f8,%edi
  401ebf:	b8 00 00 00 00       	mov    $0x0,%eax
  401ec4:	e8 97 f3 ff ff       	callq  401260 <printf@plt>
        }

        usleep(100000);
  401ec9:	bf a0 86 01 00       	mov    $0x186a0,%edi
  401ece:	e8 cd f5 ff ff       	callq  4014a0 <usleep@plt>

        pfile->givelen += BUFSIZE;
  401ed3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401ed7:	8b 40 48             	mov    0x48(%rax),%eax
  401eda:	8d 90 e1 00 00 00    	lea    0xe1(%rax),%edx
  401ee0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401ee4:	89 50 48             	mov    %edx,0x48(%rax)
        pfile->leftlen = pfile->filelen - pfile->givelen;
  401ee7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401eeb:	8b 50 40             	mov    0x40(%rax),%edx
  401eee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401ef2:	8b 40 48             	mov    0x48(%rax),%eax
  401ef5:	29 c2                	sub    %eax,%edx
  401ef7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401efb:	89 50 50             	mov    %edx,0x50(%rax)
    }//while
  401efe:	e9 75 fd ff ff       	jmpq   401c78 <file_download+0x11a>

    if(pfile->givelen == pfile->filelen){
  401f03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401f07:	8b 50 48             	mov    0x48(%rax),%edx
  401f0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401f0e:	8b 40 40             	mov    0x40(%rax),%eax
  401f11:	39 c2                	cmp    %eax,%edx
  401f13:	75 2b                	jne    401f40 <file_download+0x3e2>
        printf("user recved %dB, file len %dB\n", pfile->filelen, pfile->filelen);
  401f15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401f19:	8b 50 40             	mov    0x40(%rax),%edx
  401f1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401f20:	8b 40 40             	mov    0x40(%rax),%eax
  401f23:	89 c6                	mov    %eax,%esi
  401f25:	bf f8 43 40 00       	mov    $0x4043f8,%edi
  401f2a:	b8 00 00 00 00       	mov    $0x0,%eax
  401f2f:	e8 2c f3 ff ff       	callq  401260 <printf@plt>
        puts("user download over");
  401f34:	bf 17 44 40 00       	mov    $0x404417,%edi
  401f39:	e8 62 f2 ff ff       	callq  4011a0 <puts@plt>
  401f3e:	eb 0f                	jmp    401f4f <file_download+0x3f1>
    }
    else{
        my_err("upload failed", __LINE__);
  401f40:	be 62 01 00 00       	mov    $0x162,%esi
  401f45:	bf 2a 44 40 00       	mov    $0x40442a,%edi
  401f4a:	e8 49 1d 00 00       	callq  403c98 <my_err>
    }
    return 0;
  401f4f:	b8 00 00 00 00       	mov    $0x0,%eax
}
  401f54:	c9                   	leaveq 
  401f55:	c3                   	retq   
  401f56:	66 90                	xchg   %ax,%ax

0000000000401f58 <userinfo_p_deletid>:
#include"service.h"

#define USER_FILE "/home/wyf/"

//在账号文件中删除与参数id匹配的账号，删除成功 return 1；否则 return 0；
int userinfo_p_deletid(int id) {
  401f58:	55                   	push   %rbp
  401f59:	48 89 e5             	mov    %rsp,%rbp
  401f5c:	48 81 ec d0 01 00 00 	sub    $0x1d0,%rsp
  401f63:	89 bd 3c fe ff ff    	mov    %edi,-0x1c4(%rbp)
    if(rename("USER", "USER_TEMP")<0){
  401f69:	be 38 44 40 00       	mov    $0x404438,%esi
  401f6e:	bf 42 44 40 00       	mov    $0x404442,%edi
  401f73:	e8 a8 f4 ff ff       	callq  401420 <rename@plt>
  401f78:	85 c0                	test   %eax,%eax
  401f7a:	79 1e                	jns    401f9a <userinfo_p_deletid+0x42>
        printf("Cannot open file %s!\n", "USER");
  401f7c:	be 42 44 40 00       	mov    $0x404442,%esi
  401f81:	bf 47 44 40 00       	mov    $0x404447,%edi
  401f86:	b8 00 00 00 00       	mov    $0x0,%eax
  401f8b:	e8 d0 f2 ff ff       	callq  401260 <printf@plt>
        return 0;
  401f90:	b8 00 00 00 00       	mov    $0x0,%eax
  401f95:	e9 0a 01 00 00       	jmpq   4020a4 <userinfo_p_deletid+0x14c>
    }

    FILE *fp1;
    fp1= fopen("USER_TEMP", "rb");
  401f9a:	be 5d 44 40 00       	mov    $0x40445d,%esi
  401f9f:	bf 38 44 40 00       	mov    $0x404438,%edi
  401fa4:	e8 57 f4 ff ff       	callq  401400 <fopen@plt>
  401fa9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    if (fp1 == NULL){
  401fad:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  401fb2:	75 1e                	jne    401fd2 <userinfo_p_deletid+0x7a>
        printf("Cannot open file %s!\n", "USER");
  401fb4:	be 42 44 40 00       	mov    $0x404442,%esi
  401fb9:	bf 47 44 40 00       	mov    $0x404447,%edi
  401fbe:	b8 00 00 00 00       	mov    $0x0,%eax
  401fc3:	e8 98 f2 ff ff       	callq  401260 <printf@plt>
        return 0;
  401fc8:	b8 00 00 00 00       	mov    $0x0,%eax
  401fcd:	e9 d2 00 00 00       	jmpq   4020a4 <userinfo_p_deletid+0x14c>
    }
    FILE *fp2;
    fp2 = fopen("USER", "wb");
  401fd2:	be 60 44 40 00       	mov    $0x404460,%esi
  401fd7:	bf 42 44 40 00       	mov    $0x404442,%edi
  401fdc:	e8 1f f4 ff ff       	callq  401400 <fopen@plt>
  401fe1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    if (fp2 == NULL) {
  401fe5:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  401fea:	75 1e                	jne    40200a <userinfo_p_deletid+0xb2>
        printf("Cannot open file %s!\n", "USER_TEMP");
  401fec:	be 38 44 40 00       	mov    $0x404438,%esi
  401ff1:	bf 47 44 40 00       	mov    $0x404447,%edi
  401ff6:	b8 00 00 00 00       	mov    $0x0,%eax
  401ffb:	e8 60 f2 ff ff       	callq  401260 <printf@plt>
        return 0;
  402000:	b8 00 00 00 00       	mov    $0x0,%eax
  402005:	e9 9a 00 00 00       	jmpq   4020a4 <userinfo_p_deletid+0x14c>
    }
    userinfo_service_t buf;
    int found = 0;
  40200a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    while (!feof(fp1)) {
  402011:	eb 5c                	jmp    40206f <userinfo_p_deletid+0x117>
        if (fread(&buf, sizeof(userinfo_service_t), 1, fp1)) {
  402013:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  402017:	48 8d 85 40 fe ff ff 	lea    -0x1c0(%rbp),%rax
  40201e:	48 89 d1             	mov    %rdx,%rcx
  402021:	ba 01 00 00 00       	mov    $0x1,%edx
  402026:	be 9c 01 00 00       	mov    $0x19c,%esi
  40202b:	48 89 c7             	mov    %rax,%rdi
  40202e:	e8 7d f1 ff ff       	callq  4011b0 <fread@plt>
  402033:	48 85 c0             	test   %rax,%rax
  402036:	74 37                	je     40206f <userinfo_p_deletid+0x117>
            if (id == buf.userid) {
  402038:	8b 85 40 fe ff ff    	mov    -0x1c0(%rbp),%eax
  40203e:	3b 85 3c fe ff ff    	cmp    -0x1c4(%rbp),%eax
  402044:	75 09                	jne    40204f <userinfo_p_deletid+0xf7>
                found = 1;
  402046:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
                continue;
  40204d:	eb 20                	jmp    40206f <userinfo_p_deletid+0x117>
            }
            fwrite(&buf, sizeof(userinfo_service_t), 1, fp2);
  40204f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402053:	48 8d 85 40 fe ff ff 	lea    -0x1c0(%rbp),%rax
  40205a:	48 89 d1             	mov    %rdx,%rcx
  40205d:	ba 01 00 00 00       	mov    $0x1,%edx
  402062:	be 9c 01 00 00       	mov    $0x19c,%esi
  402067:	48 89 c7             	mov    %rax,%rdi
  40206a:	e8 11 f4 ff ff       	callq  401480 <fwrite@plt>
        printf("Cannot open file %s!\n", "USER_TEMP");
        return 0;
    }
    userinfo_service_t buf;
    int found = 0;
    while (!feof(fp1)) {
  40206f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402073:	48 89 c7             	mov    %rax,%rdi
  402076:	e8 a5 f2 ff ff       	callq  401320 <feof@plt>
  40207b:	85 c0                	test   %eax,%eax
  40207d:	74 94                	je     402013 <userinfo_p_deletid+0xbb>
                continue;
            }
            fwrite(&buf, sizeof(userinfo_service_t), 1, fp2);
        }
    }
    fclose(fp1);
  40207f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402083:	48 89 c7             	mov    %rax,%rdi
  402086:	e8 65 f1 ff ff       	callq  4011f0 <fclose@plt>
    fclose(fp2);
  40208b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40208f:	48 89 c7             	mov    %rax,%rdi
  402092:	e8 59 f1 ff ff       	callq  4011f0 <fclose@plt>
    remove("USER_TEMP");     //删除临时文件
  402097:	bf 38 44 40 00       	mov    $0x404438,%edi
  40209c:	e8 df f0 ff ff       	callq  401180 <remove@plt>
    return found;
  4020a1:	8b 45 fc             	mov    -0x4(%rbp),%eax

}
  4020a4:	c9                   	leaveq 
  4020a5:	c3                   	retq   

00000000004020a6 <userinfo_p_update>:


//在账号文件中查找与参数账号匹配的账号，找到 return 1；否则 return 0；并进行覆盖重写
int userinfo_p_update(userinfo_service_t * data) {
  4020a6:	55                   	push   %rbp
  4020a7:	48 89 e5             	mov    %rsp,%rbp
  4020aa:	48 81 ec c0 01 00 00 	sub    $0x1c0,%rsp
  4020b1:	48 89 bd 48 fe ff ff 	mov    %rdi,-0x1b8(%rbp)
    FILE *fp = fopen("USER","rb+");
  4020b8:	be 63 44 40 00       	mov    $0x404463,%esi
  4020bd:	bf 42 44 40 00       	mov    $0x404442,%edi
  4020c2:	e8 39 f3 ff ff       	callq  401400 <fopen@plt>
  4020c7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    if(fp == NULL){
  4020cb:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  4020d0:	75 0f                	jne    4020e1 <userinfo_p_update+0x3b>
        my_err("open_USER", __LINE__);
  4020d2:	be 37 00 00 00       	mov    $0x37,%esi
  4020d7:	bf 67 44 40 00       	mov    $0x404467,%edi
  4020dc:	e8 b7 1b 00 00       	callq  403c98 <my_err>
    }
    userinfo_service_t buf;     //结构体
    int found = 0;
  4020e1:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    while(!feof(fp)){
  4020e8:	eb 79                	jmp    402163 <userinfo_p_update+0xbd>
        if(fread(&buf,sizeof(userinfo_service_t),1,fp)){
  4020ea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4020ee:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
  4020f5:	48 89 d1             	mov    %rdx,%rcx
  4020f8:	ba 01 00 00 00       	mov    $0x1,%edx
  4020fd:	be 9c 01 00 00       	mov    $0x19c,%esi
  402102:	48 89 c7             	mov    %rax,%rdi
  402105:	e8 a6 f0 ff ff       	callq  4011b0 <fread@plt>
  40210a:	48 85 c0             	test   %rax,%rax
  40210d:	74 54                	je     402163 <userinfo_p_update+0xbd>
            if (buf.userid == data->userid) {
  40210f:	8b 95 50 fe ff ff    	mov    -0x1b0(%rbp),%edx
  402115:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
  40211c:	8b 00                	mov    (%rax),%eax
  40211e:	39 c2                	cmp    %eax,%edx
  402120:	75 41                	jne    402163 <userinfo_p_update+0xbd>
                fseek(fp, -sizeof(userinfo_service_t), SEEK_CUR);
  402122:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402126:	ba 01 00 00 00       	mov    $0x1,%edx
  40212b:	48 c7 c6 64 fe ff ff 	mov    $0xfffffffffffffe64,%rsi
  402132:	48 89 c7             	mov    %rax,%rdi
  402135:	e8 56 f2 ff ff       	callq  401390 <fseek@plt>
                fwrite(data, sizeof(userinfo_service_t), 1, fp);
  40213a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40213e:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
  402145:	48 89 d1             	mov    %rdx,%rcx
  402148:	ba 01 00 00 00       	mov    $0x1,%edx
  40214d:	be 9c 01 00 00       	mov    $0x19c,%esi
  402152:	48 89 c7             	mov    %rax,%rdi
  402155:	e8 26 f3 ff ff       	callq  401480 <fwrite@plt>
                found = 1;
  40215a:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
                break;
  402161:	eb 14                	jmp    402177 <userinfo_p_update+0xd1>
    if(fp == NULL){
        my_err("open_USER", __LINE__);
    }
    userinfo_service_t buf;     //结构体
    int found = 0;
    while(!feof(fp)){
  402163:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402167:	48 89 c7             	mov    %rax,%rdi
  40216a:	e8 b1 f1 ff ff       	callq  401320 <feof@plt>
  40216f:	85 c0                	test   %eax,%eax
  402171:	0f 84 73 ff ff ff    	je     4020ea <userinfo_p_update+0x44>
                found = 1;
                break;
            }
        }
    }
    fclose(fp);
  402177:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40217b:	48 89 c7             	mov    %rax,%rdi
  40217e:	e8 6d f0 ff ff       	callq  4011f0 <fclose@plt>
    return found;
  402183:	8b 45 fc             	mov    -0x4(%rbp),%eax
}
  402186:	c9                   	leaveq 
  402187:	c3                   	retq   

0000000000402188 <userinfo_p_checkfile>:


//检查用户文件是否存在
int userinfo_p_checkfile(const char *string){
  402188:	55                   	push   %rbp
  402189:	48 89 e5             	mov    %rsp,%rbp
  40218c:	48 83 ec 10          	sub    $0x10,%rsp
  402190:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)

    chdir(USER_FILE);
  402194:	bf 71 44 40 00       	mov    $0x404471,%edi
  402199:	e8 82 f0 ff ff       	callq  401220 <chdir@plt>

    if(access(string, 0) == 0){
  40219e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4021a2:	be 00 00 00 00       	mov    $0x0,%esi
  4021a7:	48 89 c7             	mov    %rax,%rdi
  4021aa:	e8 41 f2 ff ff       	callq  4013f0 <access@plt>
  4021af:	85 c0                	test   %eax,%eax
  4021b1:	75 07                	jne    4021ba <userinfo_p_checkfile+0x32>
        return 1;
  4021b3:	b8 01 00 00 00       	mov    $0x1,%eax
  4021b8:	eb 05                	jmp    4021bf <userinfo_p_checkfile+0x37>
    }
    else{
        return -1;
  4021ba:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    }
}
  4021bf:	c9                   	leaveq 
  4021c0:	c3                   	retq   

00000000004021c1 <creat_userdir>:

//创建用户文件
int creat_userdir(const char *string){
  4021c1:	55                   	push   %rbp
  4021c2:	48 89 e5             	mov    %rsp,%rbp
  4021c5:	48 83 ec 20          	sub    $0x20,%rsp
  4021c9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    int ret = 0;
  4021cd:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    int fd;

    chdir(USER_FILE);
  4021d4:	bf 71 44 40 00       	mov    $0x404471,%edi
  4021d9:	e8 42 f0 ff ff       	callq  401220 <chdir@plt>
    if((fd = open(string, O_CREAT | O_RDWR | O_APPEND, S_IRUSR | S_IWUSR | S_IRGRP )) < 0){
  4021de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4021e2:	ba a0 01 00 00       	mov    $0x1a0,%edx
  4021e7:	be 42 04 00 00       	mov    $0x442,%esi
  4021ec:	48 89 c7             	mov    %rax,%rdi
  4021ef:	b8 00 00 00 00       	mov    $0x0,%eax
  4021f4:	e8 e7 f1 ff ff       	callq  4013e0 <open@plt>
  4021f9:	89 45 f8             	mov    %eax,-0x8(%rbp)
  4021fc:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  402200:	79 0f                	jns    402211 <creat_userdir+0x50>
        my_err("creat_info",__LINE__);
  402202:	be 5e 00 00 00       	mov    $0x5e,%esi
  402207:	bf 7c 44 40 00       	mov    $0x40447c,%edi
  40220c:	e8 87 1a 00 00       	callq  403c98 <my_err>
    }
    close(fd);
  402211:	8b 45 f8             	mov    -0x8(%rbp),%eax
  402214:	89 c7                	mov    %eax,%edi
  402216:	e8 95 f0 ff ff       	callq  4012b0 <close@plt>
    ret = 1;
  40221b:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
    return ret;
  402222:	8b 45 fc             	mov    -0x4(%rbp),%eax
}
  402225:	c9                   	leaveq 
  402226:	c3                   	retq   

0000000000402227 <userinfo_p_insert>:

//写入用户信息
int userinfo_p_insert(const userinfo_service_t * data){
  402227:	55                   	push   %rbp
  402228:	48 89 e5             	mov    %rsp,%rbp
  40222b:	48 83 ec 20          	sub    $0x20,%rsp
  40222f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)

    chdir(USER_FILE);
  402233:	bf 71 44 40 00       	mov    $0x404471,%edi
  402238:	e8 e3 ef ff ff       	callq  401220 <chdir@plt>

    int ret = 0;
  40223d:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    FILE *fp;
    fp = fopen("USER","ab");
  402244:	be 87 44 40 00       	mov    $0x404487,%esi
  402249:	bf 42 44 40 00       	mov    $0x404442,%edi
  40224e:	e8 ad f1 ff ff       	callq  401400 <fopen@plt>
  402253:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    if(fp == NULL){
  402257:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  40225c:	75 07                	jne    402265 <userinfo_p_insert+0x3e>
        return 0;
  40225e:	b8 00 00 00 00       	mov    $0x0,%eax
  402263:	eb 2f                	jmp    402294 <userinfo_p_insert+0x6d>
    }
    ret = fwrite(data,sizeof(userinfo_service_t),1,fp);
  402265:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  402269:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40226d:	48 89 d1             	mov    %rdx,%rcx
  402270:	ba 01 00 00 00       	mov    $0x1,%edx
  402275:	be 9c 01 00 00       	mov    $0x19c,%esi
  40227a:	48 89 c7             	mov    %rax,%rdi
  40227d:	e8 fe f1 ff ff       	callq  401480 <fwrite@plt>
  402282:	89 45 fc             	mov    %eax,-0x4(%rbp)

    fclose(fp);
  402285:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402289:	48 89 c7             	mov    %rax,%rdi
  40228c:	e8 5f ef ff ff       	callq  4011f0 <fclose@plt>

    return ret;
  402291:	8b 45 fc             	mov    -0x4(%rbp),%eax
}
  402294:	c9                   	leaveq 
  402295:	c3                   	retq   

0000000000402296 <userinfo_p_selet>:

//根据用户id获取用户信息并通过data传出

int userinfo_p_selet(int id, userinfo_service_t * data){
  402296:	55                   	push   %rbp
  402297:	48 89 e5             	mov    %rsp,%rbp
  40229a:	48 81 ec c0 01 00 00 	sub    $0x1c0,%rsp
  4022a1:	89 bd 4c fe ff ff    	mov    %edi,-0x1b4(%rbp)
  4022a7:	48 89 b5 40 fe ff ff 	mov    %rsi,-0x1c0(%rbp)

    FILE *fp;
    int found = 0;
  4022ae:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    userinfo_service_t buf;
    fp = fopen("USER","rb");
  4022b5:	be 5d 44 40 00       	mov    $0x40445d,%esi
  4022ba:	bf 42 44 40 00       	mov    $0x404442,%edi
  4022bf:	e8 3c f1 ff ff       	callq  401400 <fopen@plt>
  4022c4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    if(fp == NULL){
  4022c8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  4022cd:	75 0a                	jne    4022d9 <userinfo_p_selet+0x43>
        return 0;
  4022cf:	b8 00 00 00 00       	mov    $0x0,%eax
  4022d4:	e9 89 01 00 00       	jmpq   402462 <userinfo_p_selet+0x1cc>
    }
    while(!feof(fp)){
  4022d9:	e9 61 01 00 00       	jmpq   40243f <userinfo_p_selet+0x1a9>
        if(fread(&buf,sizeof(userinfo_service_t),1,fp)){
  4022de:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4022e2:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
  4022e9:	48 89 d1             	mov    %rdx,%rcx
  4022ec:	ba 01 00 00 00       	mov    $0x1,%edx
  4022f1:	be 9c 01 00 00       	mov    $0x19c,%esi
  4022f6:	48 89 c7             	mov    %rax,%rdi
  4022f9:	e8 b2 ee ff ff       	callq  4011b0 <fread@plt>
  4022fe:	48 85 c0             	test   %rax,%rax
  402301:	0f 84 38 01 00 00    	je     40243f <userinfo_p_selet+0x1a9>
            if(buf.userid == id){
  402307:	8b 85 50 fe ff ff    	mov    -0x1b0(%rbp),%eax
  40230d:	3b 85 4c fe ff ff    	cmp    -0x1b4(%rbp),%eax
  402313:	0f 85 8d 00 00 00    	jne    4023a6 <userinfo_p_selet+0x110>
                *data = buf;
  402319:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
  402320:	48 8d b5 50 fe ff ff 	lea    -0x1b0(%rbp),%rsi
  402327:	41 b8 9c 01 00 00    	mov    $0x19c,%r8d
  40232d:	48 89 c2             	mov    %rax,%rdx
  402330:	83 e2 04             	and    $0x4,%edx
  402333:	48 85 d2             	test   %rdx,%rdx
  402336:	74 10                	je     402348 <userinfo_p_selet+0xb2>
  402338:	8b 16                	mov    (%rsi),%edx
  40233a:	89 10                	mov    %edx,(%rax)
  40233c:	48 83 c0 04          	add    $0x4,%rax
  402340:	48 83 c6 04          	add    $0x4,%rsi
  402344:	41 83 e8 04          	sub    $0x4,%r8d
  402348:	44 89 c2             	mov    %r8d,%edx
  40234b:	c1 ea 03             	shr    $0x3,%edx
  40234e:	89 d2                	mov    %edx,%edx
  402350:	48 89 c7             	mov    %rax,%rdi
  402353:	48 89 d1             	mov    %rdx,%rcx
  402356:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
  402359:	48 89 f8             	mov    %rdi,%rax
  40235c:	ba 00 00 00 00       	mov    $0x0,%edx
  402361:	44 89 c1             	mov    %r8d,%ecx
  402364:	83 e1 04             	and    $0x4,%ecx
  402367:	85 c9                	test   %ecx,%ecx
  402369:	74 08                	je     402373 <userinfo_p_selet+0xdd>
  40236b:	8b 0e                	mov    (%rsi),%ecx
  40236d:	89 08                	mov    %ecx,(%rax)
  40236f:	48 83 c2 04          	add    $0x4,%rdx
  402373:	44 89 c1             	mov    %r8d,%ecx
  402376:	83 e1 02             	and    $0x2,%ecx
  402379:	85 c9                	test   %ecx,%ecx
  40237b:	74 0c                	je     402389 <userinfo_p_selet+0xf3>
  40237d:	0f b7 0c 16          	movzwl (%rsi,%rdx,1),%ecx
  402381:	66 89 0c 10          	mov    %cx,(%rax,%rdx,1)
  402385:	48 83 c2 02          	add    $0x2,%rdx
  402389:	44 89 c1             	mov    %r8d,%ecx
  40238c:	83 e1 01             	and    $0x1,%ecx
  40238f:	85 c9                	test   %ecx,%ecx
  402391:	74 07                	je     40239a <userinfo_p_selet+0x104>
  402393:	0f b6 0c 16          	movzbl (%rsi,%rdx,1),%ecx
  402397:	88 0c 10             	mov    %cl,(%rax,%rdx,1)
                found = 1;
  40239a:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
                break;
  4023a1:	e9 ad 00 00 00       	jmpq   402453 <userinfo_p_selet+0x1bd>
            }
            else if(buf.conn_fd == id){
  4023a6:	8b 45 b8             	mov    -0x48(%rbp),%eax
  4023a9:	3b 85 4c fe ff ff    	cmp    -0x1b4(%rbp),%eax
  4023af:	0f 85 8a 00 00 00    	jne    40243f <userinfo_p_selet+0x1a9>
                *data = buf;
  4023b5:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
  4023bc:	48 8d b5 50 fe ff ff 	lea    -0x1b0(%rbp),%rsi
  4023c3:	41 b8 9c 01 00 00    	mov    $0x19c,%r8d
  4023c9:	48 89 c2             	mov    %rax,%rdx
  4023cc:	83 e2 04             	and    $0x4,%edx
  4023cf:	48 85 d2             	test   %rdx,%rdx
  4023d2:	74 10                	je     4023e4 <userinfo_p_selet+0x14e>
  4023d4:	8b 16                	mov    (%rsi),%edx
  4023d6:	89 10                	mov    %edx,(%rax)
  4023d8:	48 83 c0 04          	add    $0x4,%rax
  4023dc:	48 83 c6 04          	add    $0x4,%rsi
  4023e0:	41 83 e8 04          	sub    $0x4,%r8d
  4023e4:	44 89 c2             	mov    %r8d,%edx
  4023e7:	c1 ea 03             	shr    $0x3,%edx
  4023ea:	89 d2                	mov    %edx,%edx
  4023ec:	48 89 c7             	mov    %rax,%rdi
  4023ef:	48 89 d1             	mov    %rdx,%rcx
  4023f2:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
  4023f5:	48 89 f8             	mov    %rdi,%rax
  4023f8:	ba 00 00 00 00       	mov    $0x0,%edx
  4023fd:	44 89 c1             	mov    %r8d,%ecx
  402400:	83 e1 04             	and    $0x4,%ecx
  402403:	85 c9                	test   %ecx,%ecx
  402405:	74 08                	je     40240f <userinfo_p_selet+0x179>
  402407:	8b 0e                	mov    (%rsi),%ecx
  402409:	89 08                	mov    %ecx,(%rax)
  40240b:	48 83 c2 04          	add    $0x4,%rdx
  40240f:	44 89 c1             	mov    %r8d,%ecx
  402412:	83 e1 02             	and    $0x2,%ecx
  402415:	85 c9                	test   %ecx,%ecx
  402417:	74 0c                	je     402425 <userinfo_p_selet+0x18f>
  402419:	0f b7 0c 16          	movzwl (%rsi,%rdx,1),%ecx
  40241d:	66 89 0c 10          	mov    %cx,(%rax,%rdx,1)
  402421:	48 83 c2 02          	add    $0x2,%rdx
  402425:	44 89 c1             	mov    %r8d,%ecx
  402428:	83 e1 01             	and    $0x1,%ecx
  40242b:	85 c9                	test   %ecx,%ecx
  40242d:	74 07                	je     402436 <userinfo_p_selet+0x1a0>
  40242f:	0f b6 0c 16          	movzbl (%rsi,%rdx,1),%ecx
  402433:	88 0c 10             	mov    %cl,(%rax,%rdx,1)
                found = -1;
  402436:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
                break;
  40243d:	eb 14                	jmp    402453 <userinfo_p_selet+0x1bd>
    userinfo_service_t buf;
    fp = fopen("USER","rb");
    if(fp == NULL){
        return 0;
    }
    while(!feof(fp)){
  40243f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402443:	48 89 c7             	mov    %rax,%rdi
  402446:	e8 d5 ee ff ff       	callq  401320 <feof@plt>
  40244b:	85 c0                	test   %eax,%eax
  40244d:	0f 84 8b fe ff ff    	je     4022de <userinfo_p_selet+0x48>
                found = -1;
                break;
            }
        }
    }
    fclose(fp);
  402453:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402457:	48 89 c7             	mov    %rax,%rdi
  40245a:	e8 91 ed ff ff       	callq  4011f0 <fclose@plt>
    return found;
  40245f:	8b 45 fc             	mov    -0x4(%rbp),%eax

}
  402462:	c9                   	leaveq 
  402463:	c3                   	retq   

0000000000402464 <userinfo_p_seletname>:

//根据用户名获取用户信息并通过data传出

int userinfo_p_seletname(const char* username, userinfo_service_t * data){
  402464:	55                   	push   %rbp
  402465:	48 89 e5             	mov    %rsp,%rbp
  402468:	48 81 ec c0 01 00 00 	sub    $0x1c0,%rsp
  40246f:	48 89 bd 48 fe ff ff 	mov    %rdi,-0x1b8(%rbp)
  402476:	48 89 b5 40 fe ff ff 	mov    %rsi,-0x1c0(%rbp)

    FILE *fp;
    int found = 0;
  40247d:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    userinfo_service_t buf;
    fp = fopen("USER","rb");
  402484:	be 5d 44 40 00       	mov    $0x40445d,%esi
  402489:	bf 42 44 40 00       	mov    $0x404442,%edi
  40248e:	e8 6d ef ff ff       	callq  401400 <fopen@plt>
  402493:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    if(fp == NULL){
  402497:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  40249c:	75 0a                	jne    4024a8 <userinfo_p_seletname+0x44>
        return 0;
  40249e:	b8 00 00 00 00       	mov    $0x0,%eax
  4024a3:	e9 00 01 00 00       	jmpq   4025a8 <userinfo_p_seletname+0x144>
    }
    while(!feof(fp)){
  4024a8:	e9 d8 00 00 00       	jmpq   402585 <userinfo_p_seletname+0x121>
        if(fread(&buf,sizeof(userinfo_service_t),1,fp)){
  4024ad:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4024b1:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
  4024b8:	48 89 d1             	mov    %rdx,%rcx
  4024bb:	ba 01 00 00 00       	mov    $0x1,%edx
  4024c0:	be 9c 01 00 00       	mov    $0x19c,%esi
  4024c5:	48 89 c7             	mov    %rax,%rdi
  4024c8:	e8 e3 ec ff ff       	callq  4011b0 <fread@plt>
  4024cd:	48 85 c0             	test   %rax,%rax
  4024d0:	0f 84 af 00 00 00    	je     402585 <userinfo_p_seletname+0x121>
            if(strcmp(buf.username,username) == 0){
  4024d6:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
  4024dd:	48 8d 95 50 fe ff ff 	lea    -0x1b0(%rbp),%rdx
  4024e4:	48 83 c2 04          	add    $0x4,%rdx
  4024e8:	48 89 c6             	mov    %rax,%rsi
  4024eb:	48 89 d7             	mov    %rdx,%rdi
  4024ee:	e8 fd ed ff ff       	callq  4012f0 <strcmp@plt>
  4024f3:	85 c0                	test   %eax,%eax
  4024f5:	0f 85 8a 00 00 00    	jne    402585 <userinfo_p_seletname+0x121>
                *data = buf;
  4024fb:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
  402502:	48 8d b5 50 fe ff ff 	lea    -0x1b0(%rbp),%rsi
  402509:	41 b8 9c 01 00 00    	mov    $0x19c,%r8d
  40250f:	48 89 c2             	mov    %rax,%rdx
  402512:	83 e2 04             	and    $0x4,%edx
  402515:	48 85 d2             	test   %rdx,%rdx
  402518:	74 10                	je     40252a <userinfo_p_seletname+0xc6>
  40251a:	8b 16                	mov    (%rsi),%edx
  40251c:	89 10                	mov    %edx,(%rax)
  40251e:	48 83 c0 04          	add    $0x4,%rax
  402522:	48 83 c6 04          	add    $0x4,%rsi
  402526:	41 83 e8 04          	sub    $0x4,%r8d
  40252a:	44 89 c2             	mov    %r8d,%edx
  40252d:	c1 ea 03             	shr    $0x3,%edx
  402530:	89 d2                	mov    %edx,%edx
  402532:	48 89 c7             	mov    %rax,%rdi
  402535:	48 89 d1             	mov    %rdx,%rcx
  402538:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
  40253b:	48 89 f8             	mov    %rdi,%rax
  40253e:	ba 00 00 00 00       	mov    $0x0,%edx
  402543:	44 89 c1             	mov    %r8d,%ecx
  402546:	83 e1 04             	and    $0x4,%ecx
  402549:	85 c9                	test   %ecx,%ecx
  40254b:	74 08                	je     402555 <userinfo_p_seletname+0xf1>
  40254d:	8b 0e                	mov    (%rsi),%ecx
  40254f:	89 08                	mov    %ecx,(%rax)
  402551:	48 83 c2 04          	add    $0x4,%rdx
  402555:	44 89 c1             	mov    %r8d,%ecx
  402558:	83 e1 02             	and    $0x2,%ecx
  40255b:	85 c9                	test   %ecx,%ecx
  40255d:	74 0c                	je     40256b <userinfo_p_seletname+0x107>
  40255f:	0f b7 0c 16          	movzwl (%rsi,%rdx,1),%ecx
  402563:	66 89 0c 10          	mov    %cx,(%rax,%rdx,1)
  402567:	48 83 c2 02          	add    $0x2,%rdx
  40256b:	44 89 c1             	mov    %r8d,%ecx
  40256e:	83 e1 01             	and    $0x1,%ecx
  402571:	85 c9                	test   %ecx,%ecx
  402573:	74 07                	je     40257c <userinfo_p_seletname+0x118>
  402575:	0f b6 0c 16          	movzbl (%rsi,%rdx,1),%ecx
  402579:	88 0c 10             	mov    %cl,(%rax,%rdx,1)
                found = 1;
  40257c:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
                break;
  402583:	eb 14                	jmp    402599 <userinfo_p_seletname+0x135>
    userinfo_service_t buf;
    fp = fopen("USER","rb");
    if(fp == NULL){
        return 0;
    }
    while(!feof(fp)){
  402585:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402589:	48 89 c7             	mov    %rax,%rdi
  40258c:	e8 8f ed ff ff       	callq  401320 <feof@plt>
  402591:	85 c0                	test   %eax,%eax
  402593:	0f 84 14 ff ff ff    	je     4024ad <userinfo_p_seletname+0x49>
                found = 1;
                break;
            }
        }
    }
    fclose(fp);
  402599:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40259d:	48 89 c7             	mov    %rax,%rdi
  4025a0:	e8 4b ec ff ff       	callq  4011f0 <fclose@plt>
    return found;
  4025a5:	8b 45 fc             	mov    -0x4(%rbp),%eax
}
  4025a8:	c9                   	leaveq 
  4025a9:	c3                   	retq   

00000000004025aa <userinfo_p_delet>:



int userinfo_p_delet(int id){
  4025aa:	55                   	push   %rbp
  4025ab:	48 89 e5             	mov    %rsp,%rbp
  4025ae:	89 7d ec             	mov    %edi,-0x14(%rbp)
    int ret = id;
  4025b1:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4025b4:	89 45 fc             	mov    %eax,-0x4(%rbp)
    return ret;
  4025b7:	8b 45 fc             	mov    -0x4(%rbp),%eax
}
  4025ba:	5d                   	pop    %rbp
  4025bb:	c3                   	retq   

00000000004025bc <serve_user_register>:


//注册函数

int serve_user_register(send_t *precv){
  4025bc:	55                   	push   %rbp
  4025bd:	48 89 e5             	mov    %rsp,%rbp
  4025c0:	48 81 ec a0 0f 00 00 	sub    $0xfa0,%rsp
  4025c7:	48 89 bd 68 f0 ff ff 	mov    %rdi,-0xf98(%rbp)

    int i;
    int ret = 0;    //check flag
  4025ce:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    send_t send_buf;
    send_t *psend = &send_buf;
  4025d5:	48 8d 85 10 f2 ff ff 	lea    -0xdf0(%rbp),%rax
  4025dc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    memset(psend, 0, sizeof(send_buf));
  4025e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4025e4:	ba dc 0d 00 00       	mov    $0xddc,%edx
  4025e9:	be 00 00 00 00       	mov    $0x0,%esi
  4025ee:	48 89 c7             	mov    %rax,%rdi
  4025f1:	e8 aa ec ff ff       	callq  4012a0 <memset@plt>
    userinfo_service_t data;

    //check USER file
    ret = userinfo_p_checkfile((char*)("USER"));
  4025f6:	bf 42 44 40 00       	mov    $0x404442,%edi
  4025fb:	e8 88 fb ff ff       	callq  402188 <userinfo_p_checkfile>
  402600:	89 45 f8             	mov    %eax,-0x8(%rbp)

    if(ret < 0){
  402603:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  402607:	79 0a                	jns    402613 <serve_user_register+0x57>
        creat_userdir("USER");
  402609:	bf 42 44 40 00       	mov    $0x404442,%edi
  40260e:	e8 ae fb ff ff       	callq  4021c1 <creat_userdir>
    }

    psend->conn_fd = precv->conn_fd;
  402613:	48 8b 85 68 f0 ff ff 	mov    -0xf98(%rbp),%rax
  40261a:	8b 90 e4 0c 00 00    	mov    0xce4(%rax),%edx
  402620:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402624:	89 90 e4 0c 00 00    	mov    %edx,0xce4(%rax)

    if(server_name_check(precv->userinfo.username) > 0){
  40262a:	48 8b 85 68 f0 ff ff 	mov    -0xf98(%rbp),%rax
  402631:	48 83 c0 04          	add    $0x4,%rax
  402635:	48 89 c7             	mov    %rax,%rdi
  402638:	e8 46 0a 00 00       	callq  403083 <server_name_check>
  40263d:	85 c0                	test   %eax,%eax
  40263f:	7e 3b                	jle    40267c <serve_user_register+0xc0>

        psend->userstatus = INVALID_USERINFO;
  402641:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402645:	c6 80 f0 0c 00 00 6e 	movb   $0x6e,0xcf0(%rax)
        psend->input_check = _INPUTNAME;
  40264c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402650:	c7 80 ec 0c 00 00 29 	movl   $0x29,0xcec(%rax)
  402657:	00 00 00 

        send_data(psend->conn_fd, psend);
  40265a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40265e:	8b 80 e4 0c 00 00    	mov    0xce4(%rax),%eax
  402664:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  402668:	48 89 d6             	mov    %rdx,%rsi
  40266b:	89 c7                	mov    %eax,%edi
  40266d:	e8 d4 18 00 00       	callq  403f46 <send_data>

        return 0;
  402672:	b8 00 00 00 00       	mov    $0x0,%eax
  402677:	e9 d9 01 00 00       	jmpq   402855 <serve_user_register+0x299>
    }

    strcpy(data.username, precv->userinfo.username);
  40267c:	48 8b 85 68 f0 ff ff 	mov    -0xf98(%rbp),%rax
  402683:	48 8d 50 04          	lea    0x4(%rax),%rdx
  402687:	48 8d 85 70 f0 ff ff 	lea    -0xf90(%rbp),%rax
  40268e:	48 83 c0 04          	add    $0x4,%rax
  402692:	48 89 d6             	mov    %rdx,%rsi
  402695:	48 89 c7             	mov    %rax,%rdi
  402698:	e8 f3 ea ff ff       	callq  401190 <strcpy@plt>

    //基本信息录入
    strcpy(data.userpasswd, precv->userinfo.userpasswd);
  40269d:	48 8b 85 68 f0 ff ff 	mov    -0xf98(%rbp),%rax
  4026a4:	48 8d 50 24          	lea    0x24(%rax),%rdx
  4026a8:	48 8d 85 70 f0 ff ff 	lea    -0xf90(%rbp),%rax
  4026af:	48 83 c0 24          	add    $0x24,%rax
  4026b3:	48 89 d6             	mov    %rdx,%rsi
  4026b6:	48 89 c7             	mov    %rax,%rdi
  4026b9:	e8 d2 ea ff ff       	callq  401190 <strcpy@plt>

    strcpy(data.usersex, precv->userinfo.usersex);
  4026be:	48 8b 85 68 f0 ff ff 	mov    -0xf98(%rbp),%rax
  4026c5:	48 8d 50 44          	lea    0x44(%rax),%rdx
  4026c9:	48 8d 85 70 f0 ff ff 	lea    -0xf90(%rbp),%rax
  4026d0:	48 83 c0 44          	add    $0x44,%rax
  4026d4:	48 89 d6             	mov    %rdx,%rsi
  4026d7:	48 89 c7             	mov    %rax,%rdi
  4026da:	e8 b1 ea ff ff       	callq  401190 <strcpy@plt>

    //id分配
    data.userid = EntKey_Srv_CompNewKey((char*)("USER"));
  4026df:	bf 42 44 40 00       	mov    $0x404442,%edi
  4026e4:	e8 0b 0a 00 00       	callq  4030f4 <EntKey_Srv_CompNewKey>
  4026e9:	89 85 70 f0 ff ff    	mov    %eax,-0xf90(%rbp)

    //initialize no leave_message
    data.leavemes_flag = _NOMESSAGE;
  4026ef:	c6 85 be f0 ff ff 65 	movb   $0x65,-0xf42(%rbp)

    data.status = _OFFLINE;
  4026f6:	c6 85 bf f0 ff ff 64 	movb   $0x64,-0xf41(%rbp)

    for(i = 0; i < FRIENDSIZE; i++){
  4026fd:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  402704:	eb 18                	jmp    40271e <serve_user_register+0x162>
        data.friendslist[i] = 0;
  402706:	8b 45 fc             	mov    -0x4(%rbp),%eax
  402709:	48 98                	cltq   
  40270b:	48 83 c0 14          	add    $0x14,%rax
  40270f:	c7 84 85 70 f0 ff ff 	movl   $0x0,-0xf90(%rbp,%rax,4)
  402716:	00 00 00 00 
    //initialize no leave_message
    data.leavemes_flag = _NOMESSAGE;

    data.status = _OFFLINE;

    for(i = 0; i < FRIENDSIZE; i++){
  40271a:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  40271e:	83 7d fc 31          	cmpl   $0x31,-0x4(%rbp)
  402722:	7e e2                	jle    402706 <serve_user_register+0x14a>
        data.friendslist[i] = 0;
    }

    for(i = 0; i < GROUPCOUNT; i++){
  402724:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40272b:	eb 18                	jmp    402745 <serve_user_register+0x189>
        data.grouplist[i] = 0;
  40272d:	8b 45 fc             	mov    -0x4(%rbp),%eax
  402730:	48 98                	cltq   
  402732:	48 83 c0 44          	add    $0x44,%rax
  402736:	c7 84 85 78 f0 ff ff 	movl   $0x0,-0xf88(%rbp,%rax,4)
  40273d:	00 00 00 00 

    for(i = 0; i < FRIENDSIZE; i++){
        data.friendslist[i] = 0;
    }

    for(i = 0; i < GROUPCOUNT; i++){
  402741:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  402745:	83 7d fc 13          	cmpl   $0x13,-0x4(%rbp)
  402749:	7e e2                	jle    40272d <serve_user_register+0x171>
    }



    //log time initialize
    data.ontime.date.year = 0;
  40274b:	c7 85 dc f1 ff ff 00 	movl   $0x0,-0xe24(%rbp)
  402752:	00 00 00 
    data.ontime.date.month = 0;
  402755:	c7 85 e0 f1 ff ff 00 	movl   $0x0,-0xe20(%rbp)
  40275c:	00 00 00 
    data.ontime.date.day = 0;
  40275f:	c7 85 e4 f1 ff ff 00 	movl   $0x0,-0xe1c(%rbp)
  402766:	00 00 00 
    data.offtime.date.year = 0;
  402769:	c7 85 f4 f1 ff ff 00 	movl   $0x0,-0xe0c(%rbp)
  402770:	00 00 00 
    data.offtime.date.month = 0;
  402773:	c7 85 f8 f1 ff ff 00 	movl   $0x0,-0xe08(%rbp)
  40277a:	00 00 00 
    data.offtime.date.day = 0;
  40277d:	c7 85 fc f1 ff ff 00 	movl   $0x0,-0xe04(%rbp)
  402784:	00 00 00 
    data.ontime.time.hour = 0;
  402787:	c7 85 e8 f1 ff ff 00 	movl   $0x0,-0xe18(%rbp)
  40278e:	00 00 00 
    data.ontime.time.second = 0;
  402791:	c7 85 f0 f1 ff ff 00 	movl   $0x0,-0xe10(%rbp)
  402798:	00 00 00 
    data.ontime.time.minute = 0;
  40279b:	c7 85 ec f1 ff ff 00 	movl   $0x0,-0xe14(%rbp)
  4027a2:	00 00 00 
    data.offtime.time.hour = 0;
  4027a5:	c7 85 00 f2 ff ff 00 	movl   $0x0,-0xe00(%rbp)
  4027ac:	00 00 00 
    data.offtime.time.second = 0;
  4027af:	c7 85 08 f2 ff ff 00 	movl   $0x0,-0xdf8(%rbp)
  4027b6:	00 00 00 
    data.offtime.time.minute = 0;
  4027b9:	c7 85 04 f2 ff ff 00 	movl   $0x0,-0xdfc(%rbp)
  4027c0:	00 00 00 


    //用户信息录入
    ret = userinfo_p_insert(&data);
  4027c3:	48 8d 85 70 f0 ff ff 	lea    -0xf90(%rbp),%rax
  4027ca:	48 89 c7             	mov    %rax,%rdi
  4027cd:	e8 55 fa ff ff       	callq  402227 <userinfo_p_insert>
  4027d2:	89 45 f8             	mov    %eax,-0x8(%rbp)

    if(ret > 0){
  4027d5:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  4027d9:	7e 77                	jle    402852 <serve_user_register+0x296>
    printf("\nNO. %d user registed, informatiom below:\n", data.userid);
  4027db:	8b 85 70 f0 ff ff    	mov    -0xf90(%rbp),%eax
  4027e1:	89 c6                	mov    %eax,%esi
  4027e3:	bf 90 44 40 00       	mov    $0x404490,%edi
  4027e8:	b8 00 00 00 00       	mov    $0x0,%eax
  4027ed:	e8 6e ea ff ff       	callq  401260 <printf@plt>
    printf("name: %s\n", data.username);
  4027f2:	48 8d 85 70 f0 ff ff 	lea    -0xf90(%rbp),%rax
  4027f9:	48 83 c0 04          	add    $0x4,%rax
  4027fd:	48 89 c6             	mov    %rax,%rsi
  402800:	bf bb 44 40 00       	mov    $0x4044bb,%edi
  402805:	b8 00 00 00 00       	mov    $0x0,%eax
  40280a:	e8 51 ea ff ff       	callq  401260 <printf@plt>
    printf("sex: %s\n\n", data.usersex);
  40280f:	48 8d 85 70 f0 ff ff 	lea    -0xf90(%rbp),%rax
  402816:	48 83 c0 44          	add    $0x44,%rax
  40281a:	48 89 c6             	mov    %rax,%rsi
  40281d:	bf c5 44 40 00       	mov    $0x4044c5,%edi
  402822:	b8 00 00 00 00       	mov    $0x0,%eax
  402827:	e8 34 ea ff ff       	callq  401260 <printf@plt>

    psend->userstatus = VALID_USERINFO;
  40282c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402830:	c6 80 f0 0c 00 00 79 	movb   $0x79,0xcf0(%rax)


    send_data(precv->conn_fd, psend);
  402837:	48 8b 85 68 f0 ff ff 	mov    -0xf98(%rbp),%rax
  40283e:	8b 80 e4 0c 00 00    	mov    0xce4(%rax),%eax
  402844:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  402848:	48 89 d6             	mov    %rdx,%rsi
  40284b:	89 c7                	mov    %eax,%edi
  40284d:	e8 f4 16 00 00       	callq  403f46 <send_data>
    }
    // return informatiom lenth
    return ret;
  402852:	8b 45 f8             	mov    -0x8(%rbp),%eax
}
  402855:	c9                   	leaveq 
  402856:	c3                   	retq   

0000000000402857 <serve_user_login>:



//登录函数

int serve_user_login(send_t *precv){
  402857:	55                   	push   %rbp
  402858:	48 89 e5             	mov    %rsp,%rbp
  40285b:	53                   	push   %rbx
  40285c:	48 81 ec a8 0f 00 00 	sub    $0xfa8,%rsp
  402863:	48 89 bd 58 f0 ff ff 	mov    %rdi,-0xfa8(%rbp)


    send_t send_buf;
    send_t *psend = &send_buf;
  40286a:	48 8d 85 00 f2 ff ff 	lea    -0xe00(%rbp),%rax
  402871:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    userinfo_service_t info;
    userinfo_service_t *data = &info;
  402875:	48 8d 85 60 f0 ff ff 	lea    -0xfa0(%rbp),%rax
  40287c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

    memset(psend, 0, sizeof(send_buf));
  402880:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402884:	ba dc 0d 00 00       	mov    $0xddc,%edx
  402889:	be 00 00 00 00       	mov    $0x0,%esi
  40288e:	48 89 c7             	mov    %rax,%rdi
  402891:	e8 0a ea ff ff       	callq  4012a0 <memset@plt>

    psend->conn_fd = precv->conn_fd;
  402896:	48 8b 85 58 f0 ff ff 	mov    -0xfa8(%rbp),%rax
  40289d:	8b 90 e4 0c 00 00    	mov    0xce4(%rax),%edx
  4028a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4028a7:	89 90 e4 0c 00 00    	mov    %edx,0xce4(%rax)

    if(server_name_check(precv->userinfo.username) < 0){
  4028ad:	48 8b 85 58 f0 ff ff 	mov    -0xfa8(%rbp),%rax
  4028b4:	48 83 c0 04          	add    $0x4,%rax
  4028b8:	48 89 c7             	mov    %rax,%rdi
  4028bb:	e8 c3 07 00 00       	callq  403083 <server_name_check>
  4028c0:	85 c0                	test   %eax,%eax
  4028c2:	79 3b                	jns    4028ff <serve_user_login+0xa8>

        psend->userstatus = INVALID_USERINFO;
  4028c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4028c8:	c6 80 f0 0c 00 00 6e 	movb   $0x6e,0xcf0(%rax)
        psend->input_check = _INPUTNAME;
  4028cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4028d3:	c7 80 ec 0c 00 00 29 	movl   $0x29,0xcec(%rax)
  4028da:	00 00 00 
        send_data(psend->conn_fd, psend);
  4028dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4028e1:	8b 80 e4 0c 00 00    	mov    0xce4(%rax),%eax
  4028e7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4028eb:	48 89 d6             	mov    %rdx,%rsi
  4028ee:	89 c7                	mov    %eax,%edi
  4028f0:	e8 51 16 00 00       	callq  403f46 <send_data>

        return 0;
  4028f5:	b8 00 00 00 00       	mov    $0x0,%eax
  4028fa:	e9 40 02 00 00       	jmpq   402b3f <serve_user_login+0x2e8>
    }
    else{
        strcpy(psend->userinfo.username, precv->userinfo.username);
  4028ff:	48 8b 85 58 f0 ff ff 	mov    -0xfa8(%rbp),%rax
  402906:	48 8d 50 04          	lea    0x4(%rax),%rdx
  40290a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40290e:	48 83 c0 04          	add    $0x4,%rax
  402912:	48 89 d6             	mov    %rdx,%rsi
  402915:	48 89 c7             	mov    %rax,%rdi
  402918:	e8 73 e8 ff ff       	callq  401190 <strcpy@plt>
    }
    //用户名密码校验

    userinfo_p_seletname(psend->userinfo.username, data);
  40291d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402921:	48 8d 50 04          	lea    0x4(%rax),%rdx
  402925:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  402929:	48 89 c6             	mov    %rax,%rsi
  40292c:	48 89 d7             	mov    %rdx,%rdi
  40292f:	e8 30 fb ff ff       	callq  402464 <userinfo_p_seletname>

    if(data->status ==  _ONLINE){
  402934:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  402938:	0f b6 40 4f          	movzbl 0x4f(%rax),%eax
  40293c:	3c 6f                	cmp    $0x6f,%al
  40293e:	75 58                	jne    402998 <serve_user_login+0x141>
        printf("<!> name [%s] sign conflict, system refused sign in\n", precv->userinfo.username);
  402940:	48 8b 85 58 f0 ff ff 	mov    -0xfa8(%rbp),%rax
  402947:	48 83 c0 04          	add    $0x4,%rax
  40294b:	48 89 c6             	mov    %rax,%rsi
  40294e:	bf d0 44 40 00       	mov    $0x4044d0,%edi
  402953:	b8 00 00 00 00       	mov    $0x0,%eax
  402958:	e8 03 e9 ff ff       	callq  401260 <printf@plt>
        psend->userstatus = INVALID_USERINFO;
  40295d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402961:	c6 80 f0 0c 00 00 6e 	movb   $0x6e,0xcf0(%rax)
        psend->input_check = _ONLINE;
  402968:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40296c:	c7 80 ec 0c 00 00 6f 	movl   $0x6f,0xcec(%rax)
  402973:	00 00 00 
        send_data(psend->conn_fd, psend);
  402976:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40297a:	8b 80 e4 0c 00 00    	mov    0xce4(%rax),%eax
  402980:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402984:	48 89 d6             	mov    %rdx,%rsi
  402987:	89 c7                	mov    %eax,%edi
  402989:	e8 b8 15 00 00       	callq  403f46 <send_data>

        return 0;
  40298e:	b8 00 00 00 00       	mov    $0x0,%eax
  402993:	e9 a7 01 00 00       	jmpq   402b3f <serve_user_login+0x2e8>
    }
    //密码校验
    if((strcmp(data->userpasswd, precv->userinfo.userpasswd)) == 0){
  402998:	48 8b 85 58 f0 ff ff 	mov    -0xfa8(%rbp),%rax
  40299f:	48 8d 50 24          	lea    0x24(%rax),%rdx
  4029a3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4029a7:	48 83 c0 24          	add    $0x24,%rax
  4029ab:	48 89 d6             	mov    %rdx,%rsi
  4029ae:	48 89 c7             	mov    %rax,%rdi
  4029b1:	e8 3a e9 ff ff       	callq  4012f0 <strcmp@plt>
  4029b6:	85 c0                	test   %eax,%eax
  4029b8:	0f 85 4b 01 00 00    	jne    402b09 <serve_user_login+0x2b2>

        //system tips
        printf("\nNO.%d log in, the informatiom below\n", data->userid);  //service tips
  4029be:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4029c2:	8b 00                	mov    (%rax),%eax
  4029c4:	89 c6                	mov    %eax,%esi
  4029c6:	bf 08 45 40 00       	mov    $0x404508,%edi
  4029cb:	b8 00 00 00 00       	mov    $0x0,%eax
  4029d0:	e8 8b e8 ff ff       	callq  401260 <printf@plt>
        printf("name: %s\n", data->username);
  4029d5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4029d9:	48 83 c0 04          	add    $0x4,%rax
  4029dd:	48 89 c6             	mov    %rax,%rsi
  4029e0:	bf bb 44 40 00       	mov    $0x4044bb,%edi
  4029e5:	b8 00 00 00 00       	mov    $0x0,%eax
  4029ea:	e8 71 e8 ff ff       	callq  401260 <printf@plt>
        printf("sex: %s\n", data->usersex);
  4029ef:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4029f3:	48 83 c0 44          	add    $0x44,%rax
  4029f7:	48 89 c6             	mov    %rax,%rsi
  4029fa:	bf 2e 45 40 00       	mov    $0x40452e,%edi
  4029ff:	b8 00 00 00 00       	mov    $0x0,%eax
  402a04:	e8 57 e8 ff ff       	callq  401260 <printf@plt>
        printf("last log in time: %d-%d-%d %d:%d:%d\n\n",data->ontime.date.year,data->ontime.date.month,data->ontime.date.day,data->ontime.time.hour,data->ontime.time.minute,data->ontime.time.second);
  402a09:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  402a0d:	8b b0 80 01 00 00    	mov    0x180(%rax),%esi
  402a13:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  402a17:	44 8b 80 7c 01 00 00 	mov    0x17c(%rax),%r8d
  402a1e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  402a22:	8b b8 78 01 00 00    	mov    0x178(%rax),%edi
  402a28:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  402a2c:	8b 88 74 01 00 00    	mov    0x174(%rax),%ecx
  402a32:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  402a36:	8b 90 70 01 00 00    	mov    0x170(%rax),%edx
  402a3c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  402a40:	8b 80 6c 01 00 00    	mov    0x16c(%rax),%eax
  402a46:	89 34 24             	mov    %esi,(%rsp)
  402a49:	45 89 c1             	mov    %r8d,%r9d
  402a4c:	41 89 f8             	mov    %edi,%r8d
  402a4f:	89 c6                	mov    %eax,%esi
  402a51:	bf 38 45 40 00       	mov    $0x404538,%edi
  402a56:	b8 00 00 00 00       	mov    $0x0,%eax
  402a5b:	e8 00 e8 ff ff       	callq  401260 <printf@plt>

        psend->userstatus = VALID_USERINFO;
  402a60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402a64:	c6 80 f0 0c 00 00 79 	movb   $0x79,0xcf0(%rax)
        send_data(psend->conn_fd, psend);

        return 0;
    }

    data->conn_fd = precv->conn_fd;
  402a6b:	48 8b 85 58 f0 ff ff 	mov    -0xfa8(%rbp),%rax
  402a72:	8b 90 e4 0c 00 00    	mov    0xce4(%rax),%edx
  402a78:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  402a7c:	89 90 68 01 00 00    	mov    %edx,0x168(%rax)
    //更改系统信息
    data->status = _ONLINE;
  402a82:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  402a86:	c6 40 4f 6f          	movb   $0x6f,0x4f(%rax)
    data->ontime.date = DateNow();
  402a8a:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
  402a8e:	b8 00 00 00 00       	mov    $0x0,%eax
  402a93:	e8 d5 13 00 00       	callq  403e6d <DateNow>
  402a98:	48 89 c1             	mov    %rax,%rcx
  402a9b:	89 d0                	mov    %edx,%eax
  402a9d:	48 89 8b 6c 01 00 00 	mov    %rcx,0x16c(%rbx)
  402aa4:	89 83 74 01 00 00    	mov    %eax,0x174(%rbx)
    data->ontime.time = TimeNow();
  402aaa:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
  402aae:	b8 00 00 00 00       	mov    $0x0,%eax
  402ab3:	e8 16 14 00 00       	callq  403ece <TimeNow>
  402ab8:	48 89 c1             	mov    %rax,%rcx
  402abb:	89 d0                	mov    %edx,%eax
  402abd:	48 89 8b 78 01 00 00 	mov    %rcx,0x178(%rbx)
  402ac4:	89 83 80 01 00 00    	mov    %eax,0x180(%rbx)

    data->conn_fd = psend->conn_fd;
  402aca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402ace:	8b 90 e4 0c 00 00    	mov    0xce4(%rax),%edx
  402ad4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  402ad8:	89 90 68 01 00 00    	mov    %edx,0x168(%rax)
    //保存
    userinfo_p_update(data);
  402ade:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  402ae2:	48 89 c7             	mov    %rax,%rdi
  402ae5:	e8 bc f5 ff ff       	callq  4020a6 <userinfo_p_update>

    send_data(psend->conn_fd, psend);
  402aea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402aee:	8b 80 e4 0c 00 00    	mov    0xce4(%rax),%eax
  402af4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402af8:	48 89 d6             	mov    %rdx,%rsi
  402afb:	89 c7                	mov    %eax,%edi
  402afd:	e8 44 14 00 00       	callq  403f46 <send_data>

    return 0;
  402b02:	b8 00 00 00 00       	mov    $0x0,%eax
  402b07:	eb 36                	jmp    402b3f <serve_user_login+0x2e8>

        psend->userstatus = VALID_USERINFO;

    }
    else{
        psend->userstatus = INVALID_USERINFO;
  402b09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402b0d:	c6 80 f0 0c 00 00 6e 	movb   $0x6e,0xcf0(%rax)
        psend->input_check = _INPUTPASSWD;
  402b14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402b18:	c7 80 ec 0c 00 00 2a 	movl   $0x2a,0xcec(%rax)
  402b1f:	00 00 00 
        send_data(psend->conn_fd, psend);
  402b22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402b26:	8b 80 e4 0c 00 00    	mov    0xce4(%rax),%eax
  402b2c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402b30:	48 89 d6             	mov    %rdx,%rsi
  402b33:	89 c7                	mov    %eax,%edi
  402b35:	e8 0c 14 00 00       	callq  403f46 <send_data>

        return 0;
  402b3a:	b8 00 00 00 00       	mov    $0x0,%eax
    userinfo_p_update(data);

    send_data(psend->conn_fd, psend);

    return 0;
}
  402b3f:	48 81 c4 a8 0f 00 00 	add    $0xfa8,%rsp
  402b46:	5b                   	pop    %rbx
  402b47:	5d                   	pop    %rbp
  402b48:	c3                   	retq   

0000000000402b49 <users_tips>:


int users_tips(char *username){
  402b49:	55                   	push   %rbp
  402b4a:	48 89 e5             	mov    %rsp,%rbp
  402b4d:	53                   	push   %rbx
  402b4e:	48 81 ec 48 11 00 00 	sub    $0x1148,%rsp
  402b55:	48 89 bd b8 ee ff ff 	mov    %rdi,-0x1148(%rbp)

    int i;
    send_t send_buf;
    send_t *psend = &send_buf;
  402b5c:	48 8d 85 00 f2 ff ff 	lea    -0xe00(%rbp),%rax
  402b63:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    userinfo_service_t data;
    userinfo_service_t buf;

    userinfo_p_seletname(username, &data);
  402b67:	48 8d 95 60 f0 ff ff 	lea    -0xfa0(%rbp),%rdx
  402b6e:	48 8b 85 b8 ee ff ff 	mov    -0x1148(%rbp),%rax
  402b75:	48 89 d6             	mov    %rdx,%rsi
  402b78:	48 89 c7             	mov    %rax,%rdi
  402b7b:	e8 e4 f8 ff ff       	callq  402464 <userinfo_p_seletname>

    for(i = 0; data.friendslist[i] != 0; i++){
  402b80:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  402b87:	e9 0c 01 00 00       	jmpq   402c98 <users_tips+0x14f>

        memset(&buf, 0, sizeof(userinfo_service_t));
  402b8c:	48 8d 85 c0 ee ff ff 	lea    -0x1140(%rbp),%rax
  402b93:	ba 9c 01 00 00       	mov    $0x19c,%edx
  402b98:	be 00 00 00 00       	mov    $0x0,%esi
  402b9d:	48 89 c7             	mov    %rax,%rdi
  402ba0:	e8 fb e6 ff ff       	callq  4012a0 <memset@plt>
        userinfo_p_selet(data.friendslist[i], &buf);
  402ba5:	8b 45 ec             	mov    -0x14(%rbp),%eax
  402ba8:	48 98                	cltq   
  402baa:	48 83 c0 14          	add    $0x14,%rax
  402bae:	8b 84 85 60 f0 ff ff 	mov    -0xfa0(%rbp,%rax,4),%eax
  402bb5:	48 8d 95 c0 ee ff ff 	lea    -0x1140(%rbp),%rdx
  402bbc:	48 89 d6             	mov    %rdx,%rsi
  402bbf:	89 c7                	mov    %eax,%edi
  402bc1:	e8 d0 f6 ff ff       	callq  402296 <userinfo_p_selet>

        if(buf.status == _ONLINE){
  402bc6:	0f b6 85 0f ef ff ff 	movzbl -0x10f1(%rbp),%eax
  402bcd:	3c 6f                	cmp    $0x6f,%al
  402bcf:	0f 85 bf 00 00 00    	jne    402c94 <users_tips+0x14b>
            psend->command_type = _SYSTEMTIP;
  402bd5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  402bd9:	c7 80 f4 0c 00 00 5b 	movl   $0x5b,0xcf4(%rax)
  402be0:	00 00 00 
            strcpy(psend->message.from_name, "system");
  402be3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  402be7:	48 05 c8 0a 00 00    	add    $0xac8,%rax
  402bed:	c7 00 73 79 73 74    	movl   $0x74737973,(%rax)
  402bf3:	66 c7 40 04 65 6d    	movw   $0x6d65,0x4(%rax)
  402bf9:	c6 40 06 00          	movb   $0x0,0x6(%rax)
            strcpy(psend->message.message_buf, "your friend: ");
  402bfd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  402c01:	48 05 e8 0a 00 00    	add    $0xae8,%rax
  402c07:	48 bb 79 6f 75 72 20 	movabs $0x6972662072756f79,%rbx
  402c0e:	66 72 69 
  402c11:	48 89 18             	mov    %rbx,(%rax)
  402c14:	c7 40 08 65 6e 64 3a 	movl   $0x3a646e65,0x8(%rax)
  402c1b:	66 c7 40 0c 20 00    	movw   $0x20,0xc(%rax)
            strcat(psend->message.message_buf, username);
  402c21:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  402c25:	48 8d 90 e8 0a 00 00 	lea    0xae8(%rax),%rdx
  402c2c:	48 8b 85 b8 ee ff ff 	mov    -0x1148(%rbp),%rax
  402c33:	48 89 c6             	mov    %rax,%rsi
  402c36:	48 89 d7             	mov    %rdx,%rdi
  402c39:	e8 22 e8 ff ff       	callq  401460 <strcat@plt>
            strcat(psend->message.message_buf, "sign in .");
  402c3e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  402c42:	48 8d b0 e8 0a 00 00 	lea    0xae8(%rax),%rsi
  402c49:	48 89 f0             	mov    %rsi,%rax
  402c4c:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  402c53:	48 89 c2             	mov    %rax,%rdx
  402c56:	b8 00 00 00 00       	mov    $0x0,%eax
  402c5b:	48 89 d7             	mov    %rdx,%rdi
  402c5e:	f2 ae                	repnz scas %es:(%rdi),%al
  402c60:	48 89 c8             	mov    %rcx,%rax
  402c63:	48 f7 d0             	not    %rax
  402c66:	48 83 e8 01          	sub    $0x1,%rax
  402c6a:	48 01 f0             	add    %rsi,%rax
  402c6d:	48 bb 73 69 67 6e 20 	movabs $0x206e69206e676973,%rbx
  402c74:	69 6e 20 
  402c77:	48 89 18             	mov    %rbx,(%rax)
  402c7a:	66 c7 40 08 2e 00    	movw   $0x2e,0x8(%rax)

            send_data(buf.conn_fd, psend);
  402c80:	8b 85 28 f0 ff ff    	mov    -0xfd8(%rbp),%eax
  402c86:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  402c8a:	48 89 d6             	mov    %rdx,%rsi
  402c8d:	89 c7                	mov    %eax,%edi
  402c8f:	e8 b2 12 00 00       	callq  403f46 <send_data>
    userinfo_service_t data;
    userinfo_service_t buf;

    userinfo_p_seletname(username, &data);

    for(i = 0; data.friendslist[i] != 0; i++){
  402c94:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  402c98:	8b 45 ec             	mov    -0x14(%rbp),%eax
  402c9b:	48 98                	cltq   
  402c9d:	48 83 c0 14          	add    $0x14,%rax
  402ca1:	8b 84 85 60 f0 ff ff 	mov    -0xfa0(%rbp,%rax,4),%eax
  402ca8:	85 c0                	test   %eax,%eax
  402caa:	0f 85 dc fe ff ff    	jne    402b8c <users_tips+0x43>

            send_data(buf.conn_fd, psend);

        }
    }
    return 0;
  402cb0:	b8 00 00 00 00       	mov    $0x0,%eax
}
  402cb5:	48 81 c4 48 11 00 00 	add    $0x1148,%rsp
  402cbc:	5b                   	pop    %rbx
  402cbd:	5d                   	pop    %rbp
  402cbe:	c3                   	retq   

0000000000402cbf <serve_user_logoff>:

//下线函数

int serve_user_logoff(send_t *precv){
  402cbf:	55                   	push   %rbp
  402cc0:	48 89 e5             	mov    %rsp,%rbp
  402cc3:	53                   	push   %rbx
  402cc4:	48 81 ec c8 01 00 00 	sub    $0x1c8,%rsp
  402ccb:	48 89 bd 38 fe ff ff 	mov    %rdi,-0x1c8(%rbp)

    userinfo_service_t info;
    userinfo_service_t *data = &info;
  402cd2:	48 8d 85 40 fe ff ff 	lea    -0x1c0(%rbp),%rax
  402cd9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    int ret;

    ret = userinfo_p_selet(precv->conn_fd, data);
  402cdd:	48 8b 85 38 fe ff ff 	mov    -0x1c8(%rbp),%rax
  402ce4:	8b 80 e4 0c 00 00    	mov    0xce4(%rax),%eax
  402cea:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402cee:	48 89 d6             	mov    %rdx,%rsi
  402cf1:	89 c7                	mov    %eax,%edi
  402cf3:	e8 9e f5 ff ff       	callq  402296 <userinfo_p_selet>
  402cf8:	89 45 e4             	mov    %eax,-0x1c(%rbp)

    if(data->userid == 0){
  402cfb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402cff:	8b 00                	mov    (%rax),%eax
  402d01:	85 c0                	test   %eax,%eax
  402d03:	75 0a                	jne    402d0f <serve_user_logoff+0x50>
        return 0;
  402d05:	b8 00 00 00 00       	mov    $0x0,%eax
  402d0a:	e9 fb 00 00 00       	jmpq   402e0a <serve_user_logoff+0x14b>
    }


    //用户状态改为下线d
    data->status = _OFFLINE;
  402d0f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402d13:	c6 40 4f 64          	movb   $0x64,0x4f(%rax)

    //下线时间赋值
    data->offtime.date = DateNow();
  402d17:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
  402d1b:	b8 00 00 00 00       	mov    $0x0,%eax
  402d20:	e8 48 11 00 00       	callq  403e6d <DateNow>
  402d25:	48 89 c1             	mov    %rax,%rcx
  402d28:	89 d0                	mov    %edx,%eax
  402d2a:	48 89 8b 84 01 00 00 	mov    %rcx,0x184(%rbx)
  402d31:	89 83 8c 01 00 00    	mov    %eax,0x18c(%rbx)
    data->offtime.time = TimeNow();
  402d37:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
  402d3b:	b8 00 00 00 00       	mov    $0x0,%eax
  402d40:	e8 89 11 00 00       	callq  403ece <TimeNow>
  402d45:	48 89 c1             	mov    %rax,%rcx
  402d48:	89 d0                	mov    %edx,%eax
  402d4a:	48 89 8b 90 01 00 00 	mov    %rcx,0x190(%rbx)
  402d51:	89 83 98 01 00 00    	mov    %eax,0x198(%rbx)


    //system
    printf("\nNO.%d log off, the informatiom below\n", data->userid);
  402d57:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402d5b:	8b 00                	mov    (%rax),%eax
  402d5d:	89 c6                	mov    %eax,%esi
  402d5f:	bf 60 45 40 00       	mov    $0x404560,%edi
  402d64:	b8 00 00 00 00       	mov    $0x0,%eax
  402d69:	e8 f2 e4 ff ff       	callq  401260 <printf@plt>
    printf("name: %s\n", data->username);
  402d6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402d72:	48 83 c0 04          	add    $0x4,%rax
  402d76:	48 89 c6             	mov    %rax,%rsi
  402d79:	bf bb 44 40 00       	mov    $0x4044bb,%edi
  402d7e:	b8 00 00 00 00       	mov    $0x0,%eax
  402d83:	e8 d8 e4 ff ff       	callq  401260 <printf@plt>
    printf("sex: %s\n", data->usersex);
  402d88:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402d8c:	48 83 c0 44          	add    $0x44,%rax
  402d90:	48 89 c6             	mov    %rax,%rsi
  402d93:	bf 2e 45 40 00       	mov    $0x40452e,%edi
  402d98:	b8 00 00 00 00       	mov    $0x0,%eax
  402d9d:	e8 be e4 ff ff       	callq  401260 <printf@plt>
    printf("log in time: %d-%d-%d %d:%d:%d\n\n",data->ontime.date.year,data->ontime.date.month,data->ontime.date.day,data->ontime.time.hour,data->ontime.time.minute,data->ontime.time.second);
  402da2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402da6:	8b b0 80 01 00 00    	mov    0x180(%rax),%esi
  402dac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402db0:	44 8b 80 7c 01 00 00 	mov    0x17c(%rax),%r8d
  402db7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402dbb:	8b b8 78 01 00 00    	mov    0x178(%rax),%edi
  402dc1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402dc5:	8b 88 74 01 00 00    	mov    0x174(%rax),%ecx
  402dcb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402dcf:	8b 90 70 01 00 00    	mov    0x170(%rax),%edx
  402dd5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402dd9:	8b 80 6c 01 00 00    	mov    0x16c(%rax),%eax
  402ddf:	89 34 24             	mov    %esi,(%rsp)
  402de2:	45 89 c1             	mov    %r8d,%r9d
  402de5:	41 89 f8             	mov    %edi,%r8d
  402de8:	89 c6                	mov    %eax,%esi
  402dea:	bf 88 45 40 00       	mov    $0x404588,%edi
  402def:	b8 00 00 00 00       	mov    $0x0,%eax
  402df4:	e8 67 e4 ff ff       	callq  401260 <printf@plt>

    //系统信息进行保存
    userinfo_p_update(data);
  402df9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402dfd:	48 89 c7             	mov    %rax,%rdi
  402e00:	e8 a1 f2 ff ff       	callq  4020a6 <userinfo_p_update>
    return 0;
  402e05:	b8 00 00 00 00       	mov    $0x0,%eax
}
  402e0a:	48 81 c4 c8 01 00 00 	add    $0x1c8,%rsp
  402e11:	5b                   	pop    %rbx
  402e12:	5d                   	pop    %rbp
  402e13:	c3                   	retq   

0000000000402e14 <serve_user_update>:

int serve_user_update(send_t *precv){
  402e14:	55                   	push   %rbp
  402e15:	48 89 e5             	mov    %rsp,%rbp
  402e18:	48 81 ec e0 01 00 00 	sub    $0x1e0,%rsp
  402e1f:	48 89 bd 28 fe ff ff 	mov    %rdi,-0x1d8(%rbp)

    char name[32];
    int check = 0;
  402e26:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    userinfo_service_t info;
    userinfo_service_t *data = &info;
  402e2d:	48 8d 85 30 fe ff ff 	lea    -0x1d0(%rbp),%rax
  402e34:	48 89 45 f0          	mov    %rax,-0x10(%rbp)

    //获取用户名
    strcpy(name, precv->userinfo.username);
  402e38:	48 8b 85 28 fe ff ff 	mov    -0x1d8(%rbp),%rax
  402e3f:	48 8d 50 04          	lea    0x4(%rax),%rdx
  402e43:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  402e47:	48 89 d6             	mov    %rdx,%rsi
  402e4a:	48 89 c7             	mov    %rax,%rdi
  402e4d:	e8 3e e3 ff ff       	callq  401190 <strcpy@plt>

    check = userinfo_p_seletname(name, data);
  402e52:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  402e56:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  402e5a:	48 89 d6             	mov    %rdx,%rsi
  402e5d:	48 89 c7             	mov    %rax,%rdi
  402e60:	e8 ff f5 ff ff       	callq  402464 <userinfo_p_seletname>
  402e65:	89 45 fc             	mov    %eax,-0x4(%rbp)

    //基本信息录入
    strcpy(data->userpasswd, precv->userinfo.userpasswd);
  402e68:	48 8b 85 28 fe ff ff 	mov    -0x1d8(%rbp),%rax
  402e6f:	48 8d 50 24          	lea    0x24(%rax),%rdx
  402e73:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402e77:	48 83 c0 24          	add    $0x24,%rax
  402e7b:	48 89 d6             	mov    %rdx,%rsi
  402e7e:	48 89 c7             	mov    %rax,%rdi
  402e81:	e8 0a e3 ff ff       	callq  401190 <strcpy@plt>

    strcpy(data->usersex, precv->userinfo.usersex);
  402e86:	48 8b 85 28 fe ff ff 	mov    -0x1d8(%rbp),%rax
  402e8d:	48 8d 50 44          	lea    0x44(%rax),%rdx
  402e91:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402e95:	48 83 c0 44          	add    $0x44,%rax
  402e99:	48 89 d6             	mov    %rdx,%rsi
  402e9c:	48 89 c7             	mov    %rax,%rdi
  402e9f:	e8 ec e2 ff ff       	callq  401190 <strcpy@plt>


    //保存
    userinfo_p_update(data);
  402ea4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402ea8:	48 89 c7             	mov    %rax,%rdi
  402eab:	e8 f6 f1 ff ff       	callq  4020a6 <userinfo_p_update>
    return 0;
  402eb0:	b8 00 00 00 00       	mov    $0x0,%eax

}
  402eb5:	c9                   	leaveq 
  402eb6:	c3                   	retq   

0000000000402eb7 <serve_user_delet>:

//not ok not ok

int serve_user_delet(send_t * precv){
  402eb7:	55                   	push   %rbp
  402eb8:	48 89 e5             	mov    %rsp,%rbp
  402ebb:	48 81 ec c0 01 00 00 	sub    $0x1c0,%rsp
  402ec2:	48 89 bd 48 fe ff ff 	mov    %rdi,-0x1b8(%rbp)

    userinfo_service_t info;
    userinfo_service_t *data = &info;
  402ec9:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
  402ed0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)


    userinfo_p_seletname(precv->userinfo.username, data);
  402ed4:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
  402edb:	48 8d 50 04          	lea    0x4(%rax),%rdx
  402edf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402ee3:	48 89 c6             	mov    %rax,%rsi
  402ee6:	48 89 d7             	mov    %rdx,%rdi
  402ee9:	e8 76 f5 ff ff       	callq  402464 <userinfo_p_seletname>

    printf("\nlose user: NO.%d\n, the informatiom below\n", data->userid);
  402eee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402ef2:	8b 00                	mov    (%rax),%eax
  402ef4:	89 c6                	mov    %eax,%esi
  402ef6:	bf b0 45 40 00       	mov    $0x4045b0,%edi
  402efb:	b8 00 00 00 00       	mov    $0x0,%eax
  402f00:	e8 5b e3 ff ff       	callq  401260 <printf@plt>
    printf("name: %s\n", data->username);
  402f05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402f09:	48 83 c0 04          	add    $0x4,%rax
  402f0d:	48 89 c6             	mov    %rax,%rsi
  402f10:	bf bb 44 40 00       	mov    $0x4044bb,%edi
  402f15:	b8 00 00 00 00       	mov    $0x0,%eax
  402f1a:	e8 41 e3 ff ff       	callq  401260 <printf@plt>
    printf("sex: %s\n", data->usersex);
  402f1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402f23:	48 83 c0 44          	add    $0x44,%rax
  402f27:	48 89 c6             	mov    %rax,%rsi
  402f2a:	bf 2e 45 40 00       	mov    $0x40452e,%edi
  402f2f:	b8 00 00 00 00       	mov    $0x0,%eax
  402f34:	e8 27 e3 ff ff       	callq  401260 <printf@plt>

    userinfo_p_deletid(data->userid);
  402f39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  402f3d:	8b 00                	mov    (%rax),%eax
  402f3f:	89 c7                	mov    %eax,%edi
  402f41:	e8 12 f0 ff ff       	callq  401f58 <userinfo_p_deletid>

    return 0;
  402f46:	b8 00 00 00 00       	mov    $0x0,%eax
}
  402f4b:	c9                   	leaveq 
  402f4c:	c3                   	retq   

0000000000402f4d <userinfo_p_selectall>:



int userinfo_p_selectall(userinfo_service_t * users){
  402f4d:	55                   	push   %rbp
  402f4e:	48 89 e5             	mov    %rsp,%rbp
  402f51:	48 81 ec c0 01 00 00 	sub    $0x1c0,%rsp
  402f58:	48 89 bd 48 fe ff ff 	mov    %rdi,-0x1b8(%rbp)

    FILE *fp;
    int count = 0;
  402f5f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    userinfo_service_t buf;
    fp = fopen("USER","rb");
  402f66:	be 5d 44 40 00       	mov    $0x40445d,%esi
  402f6b:	bf 42 44 40 00       	mov    $0x404442,%edi
  402f70:	e8 8b e4 ff ff       	callq  401400 <fopen@plt>
  402f75:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    if(fp == NULL){
  402f79:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  402f7e:	75 0a                	jne    402f8a <userinfo_p_selectall+0x3d>
        return 0;
  402f80:	b8 00 00 00 00       	mov    $0x0,%eax
  402f85:	e9 f7 00 00 00       	jmpq   403081 <userinfo_p_selectall+0x134>
    }
    while(!feof(fp)){
  402f8a:	e9 cf 00 00 00       	jmpq   40305e <userinfo_p_selectall+0x111>
        if(fread(&buf,sizeof(userinfo_service_t),1,fp)){
  402f8f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  402f93:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
  402f9a:	48 89 d1             	mov    %rdx,%rcx
  402f9d:	ba 01 00 00 00       	mov    $0x1,%edx
  402fa2:	be 9c 01 00 00       	mov    $0x19c,%esi
  402fa7:	48 89 c7             	mov    %rax,%rdi
  402faa:	e8 01 e2 ff ff       	callq  4011b0 <fread@plt>
  402faf:	48 85 c0             	test   %rax,%rax
  402fb2:	0f 84 a6 00 00 00    	je     40305e <userinfo_p_selectall+0x111>
            if(buf.status == _OFFLINE)
  402fb8:	0f b6 85 9f fe ff ff 	movzbl -0x161(%rbp),%eax
  402fbf:	3c 64                	cmp    $0x64,%al
  402fc1:	75 05                	jne    402fc8 <userinfo_p_selectall+0x7b>
            {
                continue;
  402fc3:	e9 96 00 00 00       	jmpq   40305e <userinfo_p_selectall+0x111>
            }
            else{
                users[count++] = buf;
  402fc8:	8b 45 fc             	mov    -0x4(%rbp),%eax
  402fcb:	8d 50 01             	lea    0x1(%rax),%edx
  402fce:	89 55 fc             	mov    %edx,-0x4(%rbp)
  402fd1:	48 98                	cltq   
  402fd3:	48 69 d0 9c 01 00 00 	imul   $0x19c,%rax,%rdx
  402fda:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
  402fe1:	48 01 d0             	add    %rdx,%rax
  402fe4:	48 8d b5 50 fe ff ff 	lea    -0x1b0(%rbp),%rsi
  402feb:	41 b8 9c 01 00 00    	mov    $0x19c,%r8d
  402ff1:	48 89 c2             	mov    %rax,%rdx
  402ff4:	83 e2 04             	and    $0x4,%edx
  402ff7:	48 85 d2             	test   %rdx,%rdx
  402ffa:	74 10                	je     40300c <userinfo_p_selectall+0xbf>
  402ffc:	8b 16                	mov    (%rsi),%edx
  402ffe:	89 10                	mov    %edx,(%rax)
  403000:	48 83 c0 04          	add    $0x4,%rax
  403004:	48 83 c6 04          	add    $0x4,%rsi
  403008:	41 83 e8 04          	sub    $0x4,%r8d
  40300c:	44 89 c2             	mov    %r8d,%edx
  40300f:	c1 ea 03             	shr    $0x3,%edx
  403012:	89 d2                	mov    %edx,%edx
  403014:	48 89 c7             	mov    %rax,%rdi
  403017:	48 89 d1             	mov    %rdx,%rcx
  40301a:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
  40301d:	48 89 f8             	mov    %rdi,%rax
  403020:	ba 00 00 00 00       	mov    $0x0,%edx
  403025:	44 89 c1             	mov    %r8d,%ecx
  403028:	83 e1 04             	and    $0x4,%ecx
  40302b:	85 c9                	test   %ecx,%ecx
  40302d:	74 08                	je     403037 <userinfo_p_selectall+0xea>
  40302f:	8b 0e                	mov    (%rsi),%ecx
  403031:	89 08                	mov    %ecx,(%rax)
  403033:	48 83 c2 04          	add    $0x4,%rdx
  403037:	44 89 c1             	mov    %r8d,%ecx
  40303a:	83 e1 02             	and    $0x2,%ecx
  40303d:	85 c9                	test   %ecx,%ecx
  40303f:	74 0c                	je     40304d <userinfo_p_selectall+0x100>
  403041:	0f b7 0c 16          	movzwl (%rsi,%rdx,1),%ecx
  403045:	66 89 0c 10          	mov    %cx,(%rax,%rdx,1)
  403049:	48 83 c2 02          	add    $0x2,%rdx
  40304d:	44 89 c1             	mov    %r8d,%ecx
  403050:	83 e1 01             	and    $0x1,%ecx
  403053:	85 c9                	test   %ecx,%ecx
  403055:	74 07                	je     40305e <userinfo_p_selectall+0x111>
  403057:	0f b6 0c 16          	movzbl (%rsi,%rdx,1),%ecx
  40305b:	88 0c 10             	mov    %cl,(%rax,%rdx,1)
    userinfo_service_t buf;
    fp = fopen("USER","rb");
    if(fp == NULL){
        return 0;
    }
    while(!feof(fp)){
  40305e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403062:	48 89 c7             	mov    %rax,%rdi
  403065:	e8 b6 e2 ff ff       	callq  401320 <feof@plt>
  40306a:	85 c0                	test   %eax,%eax
  40306c:	0f 84 1d ff ff ff    	je     402f8f <userinfo_p_selectall+0x42>
            else{
                users[count++] = buf;
            }
        }
    }
    fclose(fp);
  403072:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403076:	48 89 c7             	mov    %rax,%rdi
  403079:	e8 72 e1 ff ff       	callq  4011f0 <fclose@plt>
    return count;
  40307e:	8b 45 fc             	mov    -0x4(%rbp),%eax
}
  403081:	c9                   	leaveq 
  403082:	c3                   	retq   

0000000000403083 <server_name_check>:

int server_name_check(char *username){    //重名检测
  403083:	55                   	push   %rbp
  403084:	48 89 e5             	mov    %rsp,%rbp
  403087:	48 81 ec c0 01 00 00 	sub    $0x1c0,%rsp
  40308e:	48 89 bd 48 fe ff ff 	mov    %rdi,-0x1b8(%rbp)

    int check = 0;
  403095:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    userinfo_service_t data;
    userinfo_service_t *info = &data;
  40309c:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
  4030a3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    int ret;

    //check USER file
    ret = userinfo_p_checkfile((char*)("USER"));
  4030a7:	bf 42 44 40 00       	mov    $0x404442,%edi
  4030ac:	e8 d7 f0 ff ff       	callq  402188 <userinfo_p_checkfile>
  4030b1:	89 45 ec             	mov    %eax,-0x14(%rbp)
    if(ret < 0){
  4030b4:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  4030b8:	79 0a                	jns    4030c4 <server_name_check+0x41>
        creat_userdir("USER");
  4030ba:	bf 42 44 40 00       	mov    $0x404442,%edi
  4030bf:	e8 fd f0 ff ff       	callq  4021c1 <creat_userdir>
    }


    //userfile check
    check = userinfo_p_seletname(username, info);
  4030c4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4030c8:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
  4030cf:	48 89 d6             	mov    %rdx,%rsi
  4030d2:	48 89 c7             	mov    %rax,%rdi
  4030d5:	e8 8a f3 ff ff       	callq  402464 <userinfo_p_seletname>
  4030da:	89 45 fc             	mov    %eax,-0x4(%rbp)

    if(check){  //name exist
  4030dd:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  4030e1:	74 07                	je     4030ea <server_name_check+0x67>

        //send from command_type
        return 1;
  4030e3:	b8 01 00 00 00       	mov    $0x1,%eax
  4030e8:	eb 05                	jmp    4030ef <server_name_check+0x6c>
    }
    else{
        return -1;
  4030ea:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    }

}
  4030ef:	c9                   	leaveq 
  4030f0:	c3                   	retq   
  4030f1:	0f 1f 00             	nopl   (%rax)

00000000004030f4 <EntKey_Srv_CompNewKey>:
static const char ENTITY_KEY_FILE[] = "./EntityKey.dat";



/*根据传入的实体名entName，为新实体分配一个唯一的主键。函数返回值为取新实体的主键值*/
inline long EntKey_Srv_CompNewKey(char entName[]) {
  4030f4:	55                   	push   %rbp
  4030f5:	48 89 e5             	mov    %rsp,%rbp
  4030f8:	48 83 ec 10          	sub    $0x10,%rsp
  4030fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return EntKey_Srv_CompNewKeys(entName, 1);
  403100:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403104:	be 01 00 00 00       	mov    $0x1,%esi
  403109:	48 89 c7             	mov    %rax,%rdi
  40310c:	e8 02 00 00 00       	callq  403113 <EntKey_Srv_CompNewKeys>
}
  403111:	c9                   	leaveq 
  403112:	c3                   	retq   

0000000000403113 <EntKey_Srv_CompNewKeys>:

/*根据传入的实体名entName及实体个数count，为这个count个新实体分配一个长度为count的主键值区间，
 * 使得每个新实体在该区间内都可以分配到 唯一的 主键。返回值为该主键区间的最小值*/
inline long EntKey_Srv_CompNewKeys(char entName[], int count) {
  403113:	55                   	push   %rbp
  403114:	48 89 e5             	mov    %rsp,%rbp
  403117:	48 83 ec 40          	sub    $0x40,%rsp
  40311b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  40311f:	89 75 c4             	mov    %esi,-0x3c(%rbp)
	char entUpperName[32];

	int nameLen = strlen(entName);
  403122:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403126:	48 89 c7             	mov    %rax,%rdi
  403129:	e8 e2 e0 ff ff       	callq  401210 <strlen@plt>
  40312e:	89 45 fc             	mov    %eax,-0x4(%rbp)

	memcpy(entUpperName, entName, nameLen);
  403131:	8b 45 fc             	mov    -0x4(%rbp),%eax
  403134:	48 63 d0             	movslq %eax,%rdx
  403137:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  40313b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  40313f:	48 89 ce             	mov    %rcx,%rsi
  403142:	48 89 c7             	mov    %rax,%rdi
  403145:	e8 f6 e1 ff ff       	callq  401340 <memcpy@plt>
	entUpperName[nameLen] = '\0';
  40314a:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40314d:	48 98                	cltq   
  40314f:	c6 44 05 d0 00       	movb   $0x0,-0x30(%rbp,%rax,1)

	/*转换为大写*/
	Str2Upper(entUpperName);
  403154:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  403158:	48 89 c7             	mov    %rax,%rdi
  40315b:	e8 5b 0e 00 00       	callq  403fbb <Str2Upper>

	return EntKey_Perst_GetNewKeys(entUpperName, count);
  403160:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  403163:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  403167:	89 d6                	mov    %edx,%esi
  403169:	48 89 c7             	mov    %rax,%rdi
  40316c:	e8 20 01 00 00       	callq  403291 <EntKey_Perst_GetNewKeys>
}
  403171:	c9                   	leaveq 
  403172:	c3                   	retq   

0000000000403173 <EntKey_Srv_Add2List>:


//将主键key保存到主键链表keyList中
inline void EntKey_Srv_Add2List(entkey_list_t keyList, long key) {
  403173:	55                   	push   %rbp
  403174:	48 89 e5             	mov    %rsp,%rbp
  403177:	48 83 ec 20          	sub    $0x20,%rsp
  40317b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40317f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	assert(NULL != keyList);
  403183:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  403188:	75 19                	jne    4031a3 <EntKey_Srv_Add2List+0x30>
  40318a:	b9 70 46 40 00       	mov    $0x404670,%ecx
  40318f:	ba 21 00 00 00       	mov    $0x21,%edx
  403194:	be f0 45 40 00       	mov    $0x4045f0,%esi
  403199:	bf fc 45 40 00       	mov    $0x4045fc,%edi
  40319e:	e8 dd e0 ff ff       	callq  401280 <__assert_fail@plt>
	if (!EntKey_Srv_CheckExist(keyList, key)) {
  4031a3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4031a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4031ab:	48 89 d6             	mov    %rdx,%rsi
  4031ae:	48 89 c7             	mov    %rax,%rdi
  4031b1:	e8 6b 00 00 00       	callq  403221 <EntKey_Srv_CheckExist>
  4031b6:	85 c0                	test   %eax,%eax
  4031b8:	75 65                	jne    40321f <EntKey_Srv_Add2List+0xac>
		entkey_node_t *newNode = (entkey_node_t *) malloc(
  4031ba:	bf 38 00 00 00       	mov    $0x38,%edi
  4031bf:	e8 ac e1 ff ff       	callq  401370 <malloc@plt>
  4031c4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
				sizeof(entkey_node_t));
		if (NULL == newNode) {
  4031c8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4031cd:	75 0c                	jne    4031db <EntKey_Srv_Add2List+0x68>
			printf("Memory overflow!\n");
  4031cf:	bf 13 46 40 00       	mov    $0x404613,%edi
  4031d4:	e8 c7 df ff ff       	callq  4011a0 <puts@plt>
			return;
  4031d9:	eb 44                	jmp    40321f <EntKey_Srv_Add2List+0xac>
		} else {

			newNode->data.key = key;
  4031db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4031df:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4031e3:	48 89 50 20          	mov    %rdx,0x20(%rax)
			List_AddTail(keyList, newNode);
  4031e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4031eb:	48 8b 50 28          	mov    0x28(%rax),%rdx
  4031ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4031f3:	48 89 50 28          	mov    %rdx,0x28(%rax)
  4031f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4031fb:	48 8b 40 28          	mov    0x28(%rax),%rax
  4031ff:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  403203:	48 89 50 30          	mov    %rdx,0x30(%rax)
  403207:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40320b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40320f:	48 89 50 30          	mov    %rdx,0x30(%rax)
  403213:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403217:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40321b:	48 89 50 28          	mov    %rdx,0x28(%rax)
		}
	}
}
  40321f:	c9                   	leaveq 
  403220:	c3                   	retq   

0000000000403221 <EntKey_Srv_CheckExist>:

//在主键链表keyList中检查key是否存在，返回1存在，否则0
inline int EntKey_Srv_CheckExist(entkey_list_t keyList, long key){
  403221:	55                   	push   %rbp
  403222:	48 89 e5             	mov    %rsp,%rbp
  403225:	48 83 ec 20          	sub    $0x20,%rsp
  403229:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40322d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	assert(NULL!=keyList);
  403231:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  403236:	75 19                	jne    403251 <EntKey_Srv_CheckExist+0x30>
  403238:	b9 90 46 40 00       	mov    $0x404690,%ecx
  40323d:	ba 32 00 00 00       	mov    $0x32,%edx
  403242:	be f0 45 40 00       	mov    $0x4045f0,%esi
  403247:	bf 24 46 40 00       	mov    $0x404624,%edi
  40324c:	e8 2f e0 ff ff       	callq  401280 <__assert_fail@plt>
	entkey_node_t *p;
	List_ForEach(keyList, p){
  403251:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403255:	48 8b 40 30          	mov    0x30(%rax),%rax
  403259:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40325d:	eb 21                	jmp    403280 <EntKey_Srv_CheckExist+0x5f>
		if(p->data.key==key)
  40325f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403263:	48 8b 40 20          	mov    0x20(%rax),%rax
  403267:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
  40326b:	75 07                	jne    403274 <EntKey_Srv_CheckExist+0x53>
			return 1;
  40326d:	b8 01 00 00 00       	mov    $0x1,%eax
  403272:	eb 1b                	jmp    40328f <EntKey_Srv_CheckExist+0x6e>

//在主键链表keyList中检查key是否存在，返回1存在，否则0
inline int EntKey_Srv_CheckExist(entkey_list_t keyList, long key){
	assert(NULL!=keyList);
	entkey_node_t *p;
	List_ForEach(keyList, p){
  403274:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403278:	48 8b 40 30          	mov    0x30(%rax),%rax
  40327c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  403280:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403284:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
  403288:	75 d5                	jne    40325f <EntKey_Srv_CheckExist+0x3e>
		if(p->data.key==key)
			return 1;
	}
	return 0;
  40328a:	b8 00 00 00 00       	mov    $0x0,%eax
}
  40328f:	c9                   	leaveq 
  403290:	c3                   	retq   

0000000000403291 <EntKey_Perst_GetNewKeys>:



/*根据传入的实体名entName及实体个数count，为这个count个新实体分配一个长度为count的主键值区间，
 * 使得每个新实体在该区间内都可以分配到 唯一的 主键。返回值为该主键区间的最小值*/
long EntKey_Perst_GetNewKeys(char entName[], int count) {
  403291:	55                   	push   %rbp
  403292:	48 89 e5             	mov    %rsp,%rbp
  403295:	48 83 ec 50          	sub    $0x50,%rsp
  403299:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  40329d:	89 75 b4             	mov    %esi,-0x4c(%rbp)
	entity_key_t ent;
	FILE *fp;
	int found = 0;
  4032a0:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
	long newEntKey = 1;
  4032a7:	48 c7 45 e8 01 00 00 	movq   $0x1,-0x18(%rbp)
  4032ae:	00 

	if (count < 1) {
  4032af:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
  4032b3:	7f 14                	jg     4032c9 <EntKey_Perst_GetNewKeys+0x38>
		printf("Entity count must be bigger than 0!\n");
  4032b5:	bf 40 46 40 00       	mov    $0x404640,%edi
  4032ba:	e8 e1 de ff ff       	callq  4011a0 <puts@plt>
		return 0;
  4032bf:	b8 00 00 00 00       	mov    $0x0,%eax
  4032c4:	e9 5e 01 00 00       	jmpq   403427 <EntKey_Perst_GetNewKeys+0x196>
	}

	//判断文件是否存在
	if (access(ENTITY_KEY_FILE, 0)) {
  4032c9:	be 00 00 00 00       	mov    $0x0,%esi
  4032ce:	bf e0 45 40 00       	mov    $0x4045e0,%edi
  4032d3:	e8 18 e1 ff ff       	callq  4013f0 <access@plt>
  4032d8:	85 c0                	test   %eax,%eax
  4032da:	74 24                	je     403300 <EntKey_Perst_GetNewKeys+0x6f>
		//新建文件
		fp = fopen(ENTITY_KEY_FILE, "wb+");
  4032dc:	be 64 46 40 00       	mov    $0x404664,%esi
  4032e1:	bf e0 45 40 00       	mov    $0x4045e0,%edi
  4032e6:	e8 15 e1 ff ff       	callq  401400 <fopen@plt>
  4032eb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
		if (NULL == fp) {
  4032ef:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4032f4:	75 2e                	jne    403324 <EntKey_Perst_GetNewKeys+0x93>
			return 0;
  4032f6:	b8 00 00 00 00       	mov    $0x0,%eax
  4032fb:	e9 27 01 00 00       	jmpq   403427 <EntKey_Perst_GetNewKeys+0x196>
		}
	} else {
		//以更新模式打开
		fp = fopen(ENTITY_KEY_FILE, "rb+");
  403300:	be 68 46 40 00       	mov    $0x404668,%esi
  403305:	bf e0 45 40 00       	mov    $0x4045e0,%edi
  40330a:	e8 f1 e0 ff ff       	callq  401400 <fopen@plt>
  40330f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
		if (NULL == fp) {
  403313:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  403318:	75 0a                	jne    403324 <EntKey_Perst_GetNewKeys+0x93>
			return 0;
  40331a:	b8 00 00 00 00       	mov    $0x0,%eax
  40331f:	e9 03 01 00 00       	jmpq   403427 <EntKey_Perst_GetNewKeys+0x196>
		}
	}

	while (!feof(fp)) {
  403324:	e9 93 00 00 00       	jmpq   4033bc <EntKey_Perst_GetNewKeys+0x12b>
		if (fread(&ent, sizeof(entity_key_t), 1, fp)) {
  403329:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40332d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
  403331:	48 89 d1             	mov    %rdx,%rcx
  403334:	ba 01 00 00 00       	mov    $0x1,%edx
  403339:	be 28 00 00 00       	mov    $0x28,%esi
  40333e:	48 89 c7             	mov    %rax,%rdi
  403341:	e8 6a de ff ff       	callq  4011b0 <fread@plt>
  403346:	48 85 c0             	test   %rax,%rax
  403349:	74 71                	je     4033bc <EntKey_Perst_GetNewKeys+0x12b>
			if (0 == strcmp(ent.entyName, entName)) {	//找到主键记录
  40334b:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  40334f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
  403353:	48 89 d6             	mov    %rdx,%rsi
  403356:	48 89 c7             	mov    %rax,%rdi
  403359:	e8 92 df ff ff       	callq  4012f0 <strcmp@plt>
  40335e:	85 c0                	test   %eax,%eax
  403360:	75 5a                	jne    4033bc <EntKey_Perst_GetNewKeys+0x12b>
				fseek(fp, -sizeof(entity_key_t), SEEK_CUR);
  403362:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403366:	ba 01 00 00 00       	mov    $0x1,%edx
  40336b:	48 c7 c6 d8 ff ff ff 	mov    $0xffffffffffffffd8,%rsi
  403372:	48 89 c7             	mov    %rax,%rdi
  403375:	e8 16 e0 ff ff       	callq  401390 <fseek@plt>
				newEntKey = ent.key + 1;
  40337a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40337e:	48 83 c0 01          	add    $0x1,%rax
  403382:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
				ent.key += count;
  403386:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40338a:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  40338d:	48 98                	cltq   
  40338f:	48 01 d0             	add    %rdx,%rax
  403392:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
				fwrite(&ent, sizeof(entity_key_t), 1, fp);
  403396:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40339a:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
  40339e:	48 89 d1             	mov    %rdx,%rcx
  4033a1:	ba 01 00 00 00       	mov    $0x1,%edx
  4033a6:	be 28 00 00 00       	mov    $0x28,%esi
  4033ab:	48 89 c7             	mov    %rax,%rdi
  4033ae:	e8 cd e0 ff ff       	callq  401480 <fwrite@plt>
				found = 1;
  4033b3:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
				break;
  4033ba:	eb 14                	jmp    4033d0 <EntKey_Perst_GetNewKeys+0x13f>
		if (NULL == fp) {
			return 0;
		}
	}

	while (!feof(fp)) {
  4033bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4033c0:	48 89 c7             	mov    %rax,%rdi
  4033c3:	e8 58 df ff ff       	callq  401320 <feof@plt>
  4033c8:	85 c0                	test   %eax,%eax
  4033ca:	0f 84 59 ff ff ff    	je     403329 <EntKey_Perst_GetNewKeys+0x98>
			}
		}
	}

	//未找到实体的主键记录，新加主键记录到文件末尾，
	if (!found) {
  4033d0:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  4033d4:	75 41                	jne    403417 <EntKey_Perst_GetNewKeys+0x186>
		strcpy(ent.entyName, entName);
  4033d6:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  4033da:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
  4033de:	48 89 d6             	mov    %rdx,%rsi
  4033e1:	48 89 c7             	mov    %rax,%rdi
  4033e4:	e8 a7 dd ff ff       	callq  401190 <strcpy@plt>
		newEntKey = 1;
  4033e9:	48 c7 45 e8 01 00 00 	movq   $0x1,-0x18(%rbp)
  4033f0:	00 
		ent.key = count;
  4033f1:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  4033f4:	48 98                	cltq   
  4033f6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
		fwrite(&ent, sizeof(entity_key_t), 1, fp);
  4033fa:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4033fe:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
  403402:	48 89 d1             	mov    %rdx,%rcx
  403405:	ba 01 00 00 00       	mov    $0x1,%edx
  40340a:	be 28 00 00 00       	mov    $0x28,%esi
  40340f:	48 89 c7             	mov    %rax,%rdi
  403412:	e8 69 e0 ff ff       	callq  401480 <fwrite@plt>
	}

	fclose(fp);
  403417:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40341b:	48 89 c7             	mov    %rax,%rdi
  40341e:	e8 cd dd ff ff       	callq  4011f0 <fclose@plt>

	return newEntKey;
  403423:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
}
  403427:	c9                   	leaveq 
  403428:	c3                   	retq   
  403429:	0f 1f 00             	nopl   (%rax)

000000000040342c <server_friend_delet>:

return 0;
}
*/

int server_friend_delet(send_t * precv){
  40342c:	55                   	push   %rbp
  40342d:	48 89 e5             	mov    %rsp,%rbp
  403430:	48 81 ec a0 0f 00 00 	sub    $0xfa0,%rsp
  403437:	48 89 bd 68 f0 ff ff 	mov    %rdi,-0xf98(%rbp)
    send_t send_buf;
    send_t *psend = &send_buf;
  40343e:	48 8d 85 10 f2 ff ff 	lea    -0xdf0(%rbp),%rax
  403445:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    userinfo_service_t data;
    int id = 0;
  403449:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    int i;
    memset(psend, 0, sizeof(send_t));
  403450:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403454:	ba dc 0d 00 00       	mov    $0xddc,%edx
  403459:	be 00 00 00 00       	mov    $0x0,%esi
  40345e:	48 89 c7             	mov    %rax,%rdi
  403461:	e8 3a de ff ff       	callq  4012a0 <memset@plt>

    psend->conn_fd = precv->conn_fd;
  403466:	48 8b 85 68 f0 ff ff 	mov    -0xf98(%rbp),%rax
  40346d:	8b 90 e4 0c 00 00    	mov    0xce4(%rax),%edx
  403473:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403477:	89 90 e4 0c 00 00    	mov    %edx,0xce4(%rax)
    psend->command_type = _FRIENDDEL;
  40347d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403481:	c7 80 f4 0c 00 00 19 	movl   $0x19,0xcf4(%rax)
  403488:	00 00 00 
    strcpy(psend->userinfo.username, precv->userinfo.username);
  40348b:	48 8b 85 68 f0 ff ff 	mov    -0xf98(%rbp),%rax
  403492:	48 8d 50 04          	lea    0x4(%rax),%rdx
  403496:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40349a:	48 83 c0 04          	add    $0x4,%rax
  40349e:	48 89 d6             	mov    %rdx,%rsi
  4034a1:	48 89 c7             	mov    %rax,%rdi
  4034a4:	e8 e7 dc ff ff       	callq  401190 <strcpy@plt>

    if(server_name_check(precv->friendinfo.username) < 0){
  4034a9:	48 8b 85 68 f0 ff ff 	mov    -0xf98(%rbp),%rax
  4034b0:	48 05 9c 01 00 00    	add    $0x19c,%rax
  4034b6:	48 89 c7             	mov    %rax,%rdi
  4034b9:	e8 c5 fb ff ff       	callq  403083 <server_name_check>
  4034be:	85 c0                	test   %eax,%eax
  4034c0:	79 23                	jns    4034e5 <server_friend_delet+0xb9>
        psend->userstatus = INVALID_USERINFO;
  4034c2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4034c6:	c6 80 f0 0c 00 00 6e 	movb   $0x6e,0xcf0(%rax)

        send_data(psend->conn_fd, psend);
  4034cd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4034d1:	8b 80 e4 0c 00 00    	mov    0xce4(%rax),%eax
  4034d7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4034db:	48 89 d6             	mov    %rdx,%rsi
  4034de:	89 c7                	mov    %eax,%edi
  4034e0:	e8 61 0a 00 00       	callq  403f46 <send_data>
    }

    userinfo_p_seletname(precv->friendinfo.username, &data);
  4034e5:	48 8b 85 68 f0 ff ff 	mov    -0xf98(%rbp),%rax
  4034ec:	48 8d 90 9c 01 00 00 	lea    0x19c(%rax),%rdx
  4034f3:	48 8d 85 70 f0 ff ff 	lea    -0xf90(%rbp),%rax
  4034fa:	48 89 c6             	mov    %rax,%rsi
  4034fd:	48 89 d7             	mov    %rdx,%rdi
  403500:	e8 5f ef ff ff       	callq  402464 <userinfo_p_seletname>

    id = data.userid;
  403505:	8b 85 70 f0 ff ff    	mov    -0xf90(%rbp),%eax
  40350b:	89 45 ec             	mov    %eax,-0x14(%rbp)
    memset(&data, 0, sizeof(userinfo_service_t));
  40350e:	48 8d 85 70 f0 ff ff 	lea    -0xf90(%rbp),%rax
  403515:	ba 9c 01 00 00       	mov    $0x19c,%edx
  40351a:	be 00 00 00 00       	mov    $0x0,%esi
  40351f:	48 89 c7             	mov    %rax,%rdi
  403522:	e8 79 dd ff ff       	callq  4012a0 <memset@plt>

    userinfo_p_seletname(psend->userinfo.username, &data);
  403527:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40352b:	48 8d 50 04          	lea    0x4(%rax),%rdx
  40352f:	48 8d 85 70 f0 ff ff 	lea    -0xf90(%rbp),%rax
  403536:	48 89 c6             	mov    %rax,%rsi
  403539:	48 89 d7             	mov    %rdx,%rdi
  40353c:	e8 23 ef ff ff       	callq  402464 <userinfo_p_seletname>

    for(i = 0; data.friendslist[i] != 0; i++){
  403541:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  403548:	eb 3d                	jmp    403587 <server_friend_delet+0x15b>

        if(data.friendslist[i] == id){
  40354a:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40354d:	48 98                	cltq   
  40354f:	48 83 c0 14          	add    $0x14,%rax
  403553:	8b 84 85 70 f0 ff ff 	mov    -0xf90(%rbp,%rax,4),%eax
  40355a:	3b 45 ec             	cmp    -0x14(%rbp),%eax
  40355d:	75 24                	jne    403583 <server_friend_delet+0x157>
            data.friendslist[i] = data.friendslist[i+1];
  40355f:	8b 45 fc             	mov    -0x4(%rbp),%eax
  403562:	83 c0 01             	add    $0x1,%eax
  403565:	48 98                	cltq   
  403567:	48 83 c0 14          	add    $0x14,%rax
  40356b:	8b 84 85 70 f0 ff ff 	mov    -0xf90(%rbp,%rax,4),%eax
  403572:	8b 55 fc             	mov    -0x4(%rbp),%edx
  403575:	48 63 d2             	movslq %edx,%rdx
  403578:	48 83 c2 14          	add    $0x14,%rdx
  40357c:	89 84 95 70 f0 ff ff 	mov    %eax,-0xf90(%rbp,%rdx,4)
    id = data.userid;
    memset(&data, 0, sizeof(userinfo_service_t));

    userinfo_p_seletname(psend->userinfo.username, &data);

    for(i = 0; data.friendslist[i] != 0; i++){
  403583:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  403587:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40358a:	48 98                	cltq   
  40358c:	48 83 c0 14          	add    $0x14,%rax
  403590:	8b 84 85 70 f0 ff ff 	mov    -0xf90(%rbp,%rax,4),%eax
  403597:	85 c0                	test   %eax,%eax
  403599:	75 af                	jne    40354a <server_friend_delet+0x11e>
        if(data.friendslist[i] == id){
            data.friendslist[i] = data.friendslist[i+1];
        }
    }

    psend->userstatus = VALID_USERINFO;
  40359b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40359f:	c6 80 f0 0c 00 00 79 	movb   $0x79,0xcf0(%rax)

    userinfo_p_update(&data);
  4035a6:	48 8d 85 70 f0 ff ff 	lea    -0xf90(%rbp),%rax
  4035ad:	48 89 c7             	mov    %rax,%rdi
  4035b0:	e8 f1 ea ff ff       	callq  4020a6 <userinfo_p_update>

    send_data(psend->conn_fd, psend);
  4035b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4035b9:	8b 80 e4 0c 00 00    	mov    0xce4(%rax),%eax
  4035bf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4035c3:	48 89 d6             	mov    %rdx,%rsi
  4035c6:	89 c7                	mov    %eax,%edi
  4035c8:	e8 79 09 00 00       	callq  403f46 <send_data>
    return 0;
  4035cd:	b8 00 00 00 00       	mov    $0x0,%eax
}
  4035d2:	c9                   	leaveq 
  4035d3:	c3                   	retq   

00000000004035d4 <server_friend_show>:


int server_friend_show(send_t *precv){
  4035d4:	55                   	push   %rbp
  4035d5:	48 89 e5             	mov    %rsp,%rbp
  4035d8:	48 81 ec 90 b0 00 00 	sub    $0xb090,%rsp
  4035df:	48 89 bd 78 4f ff ff 	mov    %rdi,-0xb088(%rbp)

    int i = 0;
  4035e6:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)

    userinfo_service_t info[ACCOUNTSIZE];
    userinfo_service_t data;

    send_t send_buf;
    send_t *psend = &send_buf;
  4035ed:	48 8d 85 80 4f ff ff 	lea    -0xb080(%rbp),%rax
  4035f4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    memset(psend, 0, sizeof(send_t));
  4035f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4035fc:	ba dc 0d 00 00       	mov    $0xddc,%edx
  403601:	be 00 00 00 00       	mov    $0x0,%esi
  403606:	48 89 c7             	mov    %rax,%rdi
  403609:	e8 92 dc ff ff       	callq  4012a0 <memset@plt>
    memset(&data, 0, sizeof(userinfo_service_t));
  40360e:	48 8d 85 60 5d ff ff 	lea    -0xa2a0(%rbp),%rax
  403615:	ba 9c 01 00 00       	mov    $0x19c,%edx
  40361a:	be 00 00 00 00       	mov    $0x0,%esi
  40361f:	48 89 c7             	mov    %rax,%rdi
  403622:	e8 79 dc ff ff       	callq  4012a0 <memset@plt>
    memset(info, 0, sizeof(info));
  403627:	48 8d 85 00 5f ff ff 	lea    -0xa100(%rbp),%rax
  40362e:	ba f0 a0 00 00       	mov    $0xa0f0,%edx
  403633:	be 00 00 00 00       	mov    $0x0,%esi
  403638:	48 89 c7             	mov    %rax,%rdi
  40363b:	e8 60 dc ff ff       	callq  4012a0 <memset@plt>

    userinfo_p_seletname(precv->userinfo.username, &data);   //get user information
  403640:	48 8b 85 78 4f ff ff 	mov    -0xb088(%rbp),%rax
  403647:	48 8d 50 04          	lea    0x4(%rax),%rdx
  40364b:	48 8d 85 60 5d ff ff 	lea    -0xa2a0(%rbp),%rax
  403652:	48 89 c6             	mov    %rax,%rsi
  403655:	48 89 d7             	mov    %rdx,%rdi
  403658:	e8 07 ee ff ff       	callq  402464 <userinfo_p_seletname>

    psend->conn_fd = precv->conn_fd;
  40365d:	48 8b 85 78 4f ff ff 	mov    -0xb088(%rbp),%rax
  403664:	8b 90 e4 0c 00 00    	mov    0xce4(%rax),%edx
  40366a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40366e:	89 90 e4 0c 00 00    	mov    %edx,0xce4(%rax)

    for(i = 0; data.friendslist[i] != 0; i++){
  403674:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40367b:	eb 25                	jmp    4036a2 <server_friend_show+0xce>
        //copy friendlist, reblind pointer
        psend->userinfo.friendslist[i] = data.friendslist[i];
  40367d:	8b 45 fc             	mov    -0x4(%rbp),%eax
  403680:	48 98                	cltq   
  403682:	48 83 c0 14          	add    $0x14,%rax
  403686:	8b 94 85 60 5d ff ff 	mov    -0xa2a0(%rbp,%rax,4),%edx
  40368d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403691:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  403694:	48 63 c9             	movslq %ecx,%rcx
  403697:	48 83 c1 14          	add    $0x14,%rcx
  40369b:	89 14 88             	mov    %edx,(%rax,%rcx,4)

    userinfo_p_seletname(precv->userinfo.username, &data);   //get user information

    psend->conn_fd = precv->conn_fd;

    for(i = 0; data.friendslist[i] != 0; i++){
  40369e:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  4036a2:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4036a5:	48 98                	cltq   
  4036a7:	48 83 c0 14          	add    $0x14,%rax
  4036ab:	8b 84 85 60 5d ff ff 	mov    -0xa2a0(%rbp,%rax,4),%eax
  4036b2:	85 c0                	test   %eax,%eax
  4036b4:	75 c7                	jne    40367d <server_friend_show+0xa9>
        //copy friendlist, reblind pointer
        psend->userinfo.friendslist[i] = data.friendslist[i];
    }

    i = i-1;
  4036b6:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
    //no friend, return

    if(i == 0){
  4036ba:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  4036be:	75 3b                	jne    4036fb <server_friend_show+0x127>
        psend->userstatus = INVALID_USERINFO;
  4036c0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4036c4:	c6 80 f0 0c 00 00 6e 	movb   $0x6e,0xcf0(%rax)
        psend->command_type = _FRIENDLIST;
  4036cb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4036cf:	c7 80 f4 0c 00 00 15 	movl   $0x15,0xcf4(%rax)
  4036d6:	00 00 00 
        send_data(psend->conn_fd, psend);
  4036d9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4036dd:	8b 80 e4 0c 00 00    	mov    0xce4(%rax),%eax
  4036e3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4036e7:	48 89 d6             	mov    %rdx,%rsi
  4036ea:	89 c7                	mov    %eax,%edi
  4036ec:	e8 55 08 00 00       	callq  403f46 <send_data>
        return 0;
  4036f1:	b8 00 00 00 00       	mov    $0x0,%eax
  4036f6:	e9 13 01 00 00       	jmpq   40380e <server_friend_show+0x23a>
    }
    else{
        while(i >= 0){
  4036fb:	e9 ff 00 00 00       	jmpq   4037ff <server_friend_show+0x22b>

            //get friend all information
            userinfo_p_selet(psend->userinfo.friendslist[i], &info[i]);
  403700:	48 8d 95 00 5f ff ff 	lea    -0xa100(%rbp),%rdx
  403707:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40370a:	48 98                	cltq   
  40370c:	48 69 c0 9c 01 00 00 	imul   $0x19c,%rax,%rax
  403713:	48 01 c2             	add    %rax,%rdx
  403716:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40371a:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  40371d:	48 63 c9             	movslq %ecx,%rcx
  403720:	48 83 c1 14          	add    $0x14,%rcx
  403724:	8b 04 88             	mov    (%rax,%rcx,4),%eax
  403727:	48 89 d6             	mov    %rdx,%rsi
  40372a:	89 c7                	mov    %eax,%edi
  40372c:	e8 65 eb ff ff       	callq  402296 <userinfo_p_selet>
            psend->conn_fd = precv->conn_fd;
  403731:	48 8b 85 78 4f ff ff 	mov    -0xb088(%rbp),%rax
  403738:	8b 90 e4 0c 00 00    	mov    0xce4(%rax),%edx
  40373e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403742:	89 90 e4 0c 00 00    	mov    %edx,0xce4(%rax)

            psend->userstatus = VALID_USERINFO;
  403748:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40374c:	c6 80 f0 0c 00 00 79 	movb   $0x79,0xcf0(%rax)
            //get friend_info_t information
            strcpy(psend->friendinfo.username, info[i].username);
  403753:	48 8d 95 00 5f ff ff 	lea    -0xa100(%rbp),%rdx
  40375a:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40375d:	48 98                	cltq   
  40375f:	48 69 c0 9c 01 00 00 	imul   $0x19c,%rax,%rax
  403766:	48 01 d0             	add    %rdx,%rax
  403769:	48 8d 50 04          	lea    0x4(%rax),%rdx
  40376d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403771:	48 05 9c 01 00 00    	add    $0x19c,%rax
  403777:	48 89 d6             	mov    %rdx,%rsi
  40377a:	48 89 c7             	mov    %rax,%rdi
  40377d:	e8 0e da ff ff       	callq  401190 <strcpy@plt>
            strcpy(psend->friendinfo.usersex, info[i].usersex);
  403782:	48 8d 85 00 5f ff ff 	lea    -0xa100(%rbp),%rax
  403789:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40378c:	48 63 d2             	movslq %edx,%rdx
  40378f:	48 69 d2 9c 01 00 00 	imul   $0x19c,%rdx,%rdx
  403796:	48 83 c2 40          	add    $0x40,%rdx
  40379a:	48 01 d0             	add    %rdx,%rax
  40379d:	48 8d 50 04          	lea    0x4(%rax),%rdx
  4037a1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4037a5:	48 05 bc 01 00 00    	add    $0x1bc,%rax
  4037ab:	48 89 d6             	mov    %rdx,%rsi
  4037ae:	48 89 c7             	mov    %rax,%rdi
  4037b1:	e8 da d9 ff ff       	callq  401190 <strcpy@plt>
            psend->friendinfo.status = info[i].status;
  4037b6:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4037b9:	48 98                	cltq   
  4037bb:	48 69 c0 9c 01 00 00 	imul   $0x19c,%rax,%rax
  4037c2:	48 01 e8             	add    %rbp,%rax
  4037c5:	48 2d c0 a0 00 00    	sub    $0xa0c0,%rax
  4037cb:	0f b6 50 0f          	movzbl 0xf(%rax),%edx
  4037cf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4037d3:	88 90 c6 01 00 00    	mov    %dl,0x1c6(%rax)
            psend->command_type = _FRIENDLIST;
  4037d9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4037dd:	c7 80 f4 0c 00 00 15 	movl   $0x15,0xcf4(%rax)
  4037e4:	00 00 00 

            send_data(psend->conn_fd, psend);
  4037e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4037eb:	8b 80 e4 0c 00 00    	mov    0xce4(%rax),%eax
  4037f1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4037f5:	48 89 d6             	mov    %rdx,%rsi
  4037f8:	89 c7                	mov    %eax,%edi
  4037fa:	e8 47 07 00 00       	callq  403f46 <send_data>
        psend->command_type = _FRIENDLIST;
        send_data(psend->conn_fd, psend);
        return 0;
    }
    else{
        while(i >= 0){
  4037ff:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  403803:	0f 89 f7 fe ff ff    	jns    403700 <server_friend_show+0x12c>
            psend->command_type = _FRIENDLIST;

            send_data(psend->conn_fd, psend);
        }
    }
    return 0;
  403809:	b8 00 00 00 00       	mov    $0x0,%eax
}
  40380e:	c9                   	leaveq 
  40380f:	c3                   	retq   

0000000000403810 <server_friend_add>:

return 0;
}
*/

int server_friend_add(send_t *precv){
  403810:	55                   	push   %rbp
  403811:	48 89 e5             	mov    %rsp,%rbp
  403814:	48 81 ec 60 ad 00 00 	sub    $0xad60,%rsp
  40381b:	48 89 bd a8 52 ff ff 	mov    %rdi,-0xad58(%rbp)


    userinfo_service_t users[ACCOUNTSIZE-1];
    int ret = -1;
  403822:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
    send_t send_buf;
    send_t *psend = &send_buf;
  403829:	48 8d 85 b0 52 ff ff 	lea    -0xad50(%rbp),%rax
  403830:	48 89 45 f0          	mov    %rax,-0x10(%rbp)

    memset(psend, 0, sizeof(send_t));
  403834:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403838:	ba dc 0d 00 00       	mov    $0xddc,%edx
  40383d:	be 00 00 00 00       	mov    $0x0,%esi
  403842:	48 89 c7             	mov    %rax,%rdi
  403845:	e8 56 da ff ff       	callq  4012a0 <memset@plt>
    memset(users, 0, sizeof(users));
  40384a:	48 8d 85 90 60 ff ff 	lea    -0x9f70(%rbp),%rax
  403851:	ba 54 9f 00 00       	mov    $0x9f54,%edx
  403856:	be 00 00 00 00       	mov    $0x0,%esi
  40385b:	48 89 c7             	mov    %rax,%rdi
  40385e:	e8 3d da ff ff       	callq  4012a0 <memset@plt>
    strcpy(psend->userinfo.username, precv->userinfo.username);
  403863:	48 8b 85 a8 52 ff ff 	mov    -0xad58(%rbp),%rax
  40386a:	48 8d 50 04          	lea    0x4(%rax),%rdx
  40386e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403872:	48 83 c0 04          	add    $0x4,%rax
  403876:	48 89 d6             	mov    %rdx,%rsi
  403879:	48 89 c7             	mov    %rax,%rdi
  40387c:	e8 0f d9 ff ff       	callq  401190 <strcpy@plt>
    psend->command_type = _USERSALL;
  403881:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403885:	c7 80 f4 0c 00 00 1a 	movl   $0x1a,0xcf4(%rax)
  40388c:	00 00 00 
    psend->conn_fd = precv->conn_fd;
  40388f:	48 8b 85 a8 52 ff ff 	mov    -0xad58(%rbp),%rax
  403896:	8b 90 e4 0c 00 00    	mov    0xce4(%rax),%edx
  40389c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4038a0:	89 90 e4 0c 00 00    	mov    %edx,0xce4(%rax)

    //get friend all information
    ret = userinfo_p_selectall(users);
  4038a6:	48 8d 85 90 60 ff ff 	lea    -0x9f70(%rbp),%rax
  4038ad:	48 89 c7             	mov    %rax,%rdi
  4038b0:	e8 98 f6 ff ff       	callq  402f4d <userinfo_p_selectall>
  4038b5:	89 45 fc             	mov    %eax,-0x4(%rbp)
    ret = ret - 1;
  4038b8:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)

    if(ret == 0){
  4038bc:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  4038c0:	75 28                	jne    4038ea <server_friend_add+0xda>
        //no friend, return
        psend->userstatus = INVALID_USERINFO;
  4038c2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4038c6:	c6 80 f0 0c 00 00 6e 	movb   $0x6e,0xcf0(%rax)
        send_data(psend->conn_fd, psend);
  4038cd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4038d1:	8b 80 e4 0c 00 00    	mov    0xce4(%rax),%eax
  4038d7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4038db:	48 89 d6             	mov    %rdx,%rsi
  4038de:	89 c7                	mov    %eax,%edi
  4038e0:	e8 61 06 00 00       	callq  403f46 <send_data>
  4038e5:	e9 ff 00 00 00       	jmpq   4039e9 <server_friend_add+0x1d9>
    }
    else{

        while(ret >= 0){
  4038ea:	e9 f0 00 00 00       	jmpq   4039df <server_friend_add+0x1cf>
            psend->userstatus = VALID_USERINFO;
  4038ef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4038f3:	c6 80 f0 0c 00 00 79 	movb   $0x79,0xcf0(%rax)
            strcpy(psend->userinfo.username, precv->userinfo.username);
  4038fa:	48 8b 85 a8 52 ff ff 	mov    -0xad58(%rbp),%rax
  403901:	48 8d 50 04          	lea    0x4(%rax),%rdx
  403905:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403909:	48 83 c0 04          	add    $0x4,%rax
  40390d:	48 89 d6             	mov    %rdx,%rsi
  403910:	48 89 c7             	mov    %rax,%rdi
  403913:	e8 78 d8 ff ff       	callq  401190 <strcpy@plt>
            psend->command_type = _USERSALL;
  403918:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40391c:	c7 80 f4 0c 00 00 1a 	movl   $0x1a,0xcf4(%rax)
  403923:	00 00 00 
            psend->conn_fd = precv->conn_fd;
  403926:	48 8b 85 a8 52 ff ff 	mov    -0xad58(%rbp),%rax
  40392d:	8b 90 e4 0c 00 00    	mov    0xce4(%rax),%edx
  403933:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403937:	89 90 e4 0c 00 00    	mov    %edx,0xce4(%rax)


            //get friend_info_t information
            strcpy(psend->friendinfo.username, users[ret].username);
  40393d:	48 8d 95 90 60 ff ff 	lea    -0x9f70(%rbp),%rdx
  403944:	8b 45 fc             	mov    -0x4(%rbp),%eax
  403947:	48 98                	cltq   
  403949:	48 69 c0 9c 01 00 00 	imul   $0x19c,%rax,%rax
  403950:	48 01 d0             	add    %rdx,%rax
  403953:	48 8d 50 04          	lea    0x4(%rax),%rdx
  403957:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40395b:	48 05 9c 01 00 00    	add    $0x19c,%rax
  403961:	48 89 d6             	mov    %rdx,%rsi
  403964:	48 89 c7             	mov    %rax,%rdi
  403967:	e8 24 d8 ff ff       	callq  401190 <strcpy@plt>
            strcpy(psend->friendinfo.usersex, users[ret].usersex);
  40396c:	48 8d 85 90 60 ff ff 	lea    -0x9f70(%rbp),%rax
  403973:	8b 55 fc             	mov    -0x4(%rbp),%edx
  403976:	48 63 d2             	movslq %edx,%rdx
  403979:	48 69 d2 9c 01 00 00 	imul   $0x19c,%rdx,%rdx
  403980:	48 83 c2 40          	add    $0x40,%rdx
  403984:	48 01 d0             	add    %rdx,%rax
  403987:	48 8d 50 04          	lea    0x4(%rax),%rdx
  40398b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40398f:	48 05 bc 01 00 00    	add    $0x1bc,%rax
  403995:	48 89 d6             	mov    %rdx,%rsi
  403998:	48 89 c7             	mov    %rax,%rdi
  40399b:	e8 f0 d7 ff ff       	callq  401190 <strcpy@plt>
            psend->friendinfo.status = users[ret].status;
  4039a0:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4039a3:	48 98                	cltq   
  4039a5:	48 69 c0 9c 01 00 00 	imul   $0x19c,%rax,%rax
  4039ac:	48 01 e8             	add    %rbp,%rax
  4039af:	48 2d 30 9f 00 00    	sub    $0x9f30,%rax
  4039b5:	0f b6 50 0f          	movzbl 0xf(%rax),%edx
  4039b9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4039bd:	88 90 c6 01 00 00    	mov    %dl,0x1c6(%rax)
            send_data(psend->conn_fd, psend);
  4039c3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4039c7:	8b 80 e4 0c 00 00    	mov    0xce4(%rax),%eax
  4039cd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4039d1:	48 89 d6             	mov    %rdx,%rsi
  4039d4:	89 c7                	mov    %eax,%edi
  4039d6:	e8 6b 05 00 00       	callq  403f46 <send_data>

            ret--;
  4039db:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
        psend->userstatus = INVALID_USERINFO;
        send_data(psend->conn_fd, psend);
    }
    else{

        while(ret >= 0){
  4039df:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  4039e3:	0f 89 06 ff ff ff    	jns    4038ef <server_friend_add+0xdf>
            send_data(psend->conn_fd, psend);

            ret--;
        }
    }
    return 0;
  4039e9:	b8 00 00 00 00       	mov    $0x0,%eax
}
  4039ee:	c9                   	leaveq 
  4039ef:	c3                   	retq   

00000000004039f0 <l_getc>:
 * Description :
 * *****************************************************************************/
#include"common.h"


char l_getc(){
  4039f0:	55                   	push   %rbp
  4039f1:	48 89 e5             	mov    %rsp,%rbp
  4039f4:	48 83 ec 10          	sub    $0x10,%rsp
    char ch;
    scanf("%c",&ch);
  4039f8:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
  4039fc:	48 89 c6             	mov    %rax,%rsi
  4039ff:	bf a6 46 40 00       	mov    $0x4046a6,%edi
  403a04:	b8 00 00 00 00       	mov    $0x0,%eax
  403a09:	e8 42 da ff ff       	callq  401450 <__isoc99_scanf@plt>
    while(ch == '\n'){
  403a0e:	eb 16                	jmp    403a26 <l_getc+0x36>
        scanf("%c",&ch);
  403a10:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
  403a14:	48 89 c6             	mov    %rax,%rsi
  403a17:	bf a6 46 40 00       	mov    $0x4046a6,%edi
  403a1c:	b8 00 00 00 00       	mov    $0x0,%eax
  403a21:	e8 2a da ff ff       	callq  401450 <__isoc99_scanf@plt>


char l_getc(){
    char ch;
    scanf("%c",&ch);
    while(ch == '\n'){
  403a26:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
  403a2a:	3c 0a                	cmp    $0xa,%al
  403a2c:	74 e2                	je     403a10 <l_getc+0x20>
        scanf("%c",&ch);
    }
    return ch;
  403a2e:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
}
  403a32:	c9                   	leaveq 
  403a33:	c3                   	retq   

0000000000403a34 <getch>:

//Linux没有getch()

int getch(void){
  403a34:	55                   	push   %rbp
  403a35:	48 89 e5             	mov    %rsp,%rbp
  403a38:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    int c= 0;
  403a3f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    struct termios org_opts, new_opts;
    int res = 0;
  403a46:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)

    //将之前的设置备份
    res = tcgetattr(STDIN_FILENO, &org_opts);
  403a4d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  403a51:	48 89 c6             	mov    %rax,%rsi
  403a54:	bf 00 00 00 00       	mov    $0x0,%edi
  403a59:	e8 62 d9 ff ff       	callq  4013c0 <tcgetattr@plt>
  403a5e:	89 45 f8             	mov    %eax,-0x8(%rbp)
    assert(res == 0);
  403a61:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  403a65:	74 19                	je     403a80 <getch+0x4c>
  403a67:	b9 47 47 40 00       	mov    $0x404747,%ecx
  403a6c:	ba 1d 00 00 00       	mov    $0x1d,%edx
  403a71:	be a9 46 40 00       	mov    $0x4046a9,%esi
  403a76:	bf bc 46 40 00       	mov    $0x4046bc,%edi
  403a7b:	e8 00 d8 ff ff       	callq  401280 <__assert_fail@plt>

    //设置新的设定
    memcpy(&new_opts, &org_opts, sizeof(new_opts));
  403a80:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  403a84:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  403a8b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  403a8f:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  403a96:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  403a9a:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  403a9e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403aa2:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  403aa6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403aaa:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  403aae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403ab2:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  403ab6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403aba:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  403abe:	8b 45 e8             	mov    -0x18(%rbp),%eax
  403ac1:	89 45 a8             	mov    %eax,-0x58(%rbp)
    new_opts.c_lflag &= ~(ICANON |ECHO | ECHOE | ECHOK |ECHONL | ECHOKE | ICRNL);
  403ac4:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  403aca:	25 85 f6 ff ff       	and    $0xfffff685,%eax
  403acf:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
    tcsetattr(STDIN_FILENO, TCSANOW, &new_opts);
  403ad5:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
  403adc:	48 89 c2             	mov    %rax,%rdx
  403adf:	be 00 00 00 00       	mov    $0x0,%esi
  403ae4:	bf 00 00 00 00       	mov    $0x0,%edi
  403ae9:	e8 e2 d8 ff ff       	callq  4013d0 <tcsetattr@plt>
    c= getchar();
  403aee:	e8 0d d8 ff ff       	callq  401300 <getchar@plt>
  403af3:	89 45 fc             	mov    %eax,-0x4(%rbp)

    //恢复之前的设定
    res = tcsetattr(STDIN_FILENO, TCSANOW, &org_opts);
  403af6:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  403afa:	48 89 c2             	mov    %rax,%rdx
  403afd:	be 00 00 00 00       	mov    $0x0,%esi
  403b02:	bf 00 00 00 00       	mov    $0x0,%edi
  403b07:	e8 c4 d8 ff ff       	callq  4013d0 <tcsetattr@plt>
  403b0c:	89 45 f8             	mov    %eax,-0x8(%rbp)
    assert(res == 0);
  403b0f:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  403b13:	74 19                	je     403b2e <getch+0xfa>
  403b15:	b9 47 47 40 00       	mov    $0x404747,%ecx
  403b1a:	ba 27 00 00 00       	mov    $0x27,%edx
  403b1f:	be a9 46 40 00       	mov    $0x4046a9,%esi
  403b24:	bf bc 46 40 00       	mov    $0x4046bc,%edi
  403b29:	e8 52 d7 ff ff       	callq  401280 <__assert_fail@plt>
    return c;
  403b2e:	8b 45 fc             	mov    -0x4(%rbp),%eax
}
  403b31:	c9                   	leaveq 
  403b32:	c3                   	retq   

0000000000403b33 <getpwd>:

//密码输入

void getpwd(int maxlen, char *pwd){
  403b33:	55                   	push   %rbp
  403b34:	48 89 e5             	mov    %rsp,%rbp
  403b37:	48 83 ec 20          	sub    $0x20,%rsp
  403b3b:	89 7d ec             	mov    %edi,-0x14(%rbp)
  403b3e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    int j= 0;
  403b42:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    char c;

    while((j < maxlen-2) && (c = getch()) != '\n'){
  403b49:	eb 44                	jmp    403b8f <getpwd+0x5c>
        if(c != 127){
  403b4b:	80 7d fb 7f          	cmpb   $0x7f,-0x5(%rbp)
  403b4f:	74 25                	je     403b76 <getpwd+0x43>
            printf("*");
  403b51:	bf 2a 00 00 00       	mov    $0x2a,%edi
  403b56:	e8 f5 d5 ff ff       	callq  401150 <putchar@plt>
            pwd[j++] = c;
  403b5b:	8b 45 fc             	mov    -0x4(%rbp),%eax
  403b5e:	8d 50 01             	lea    0x1(%rax),%edx
  403b61:	89 55 fc             	mov    %edx,-0x4(%rbp)
  403b64:	48 63 d0             	movslq %eax,%rdx
  403b67:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403b6b:	48 01 c2             	add    %rax,%rdx
  403b6e:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax
  403b72:	88 02                	mov    %al,(%rdx)
  403b74:	eb 19                	jmp    403b8f <getpwd+0x5c>
        }
        else {
            if(j > 0){
  403b76:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  403b7a:	7e 13                	jle    403b8f <getpwd+0x5c>
                 j = j - 1;
  403b7c:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
                 printf("\b \b");
  403b80:	bf c5 46 40 00       	mov    $0x4046c5,%edi
  403b85:	b8 00 00 00 00       	mov    $0x0,%eax
  403b8a:	e8 d1 d6 ff ff       	callq  401260 <printf@plt>

void getpwd(int maxlen, char *pwd){
    int j= 0;
    char c;

    while((j < maxlen-2) && (c = getch()) != '\n'){
  403b8f:	8b 45 ec             	mov    -0x14(%rbp),%eax
  403b92:	83 e8 02             	sub    $0x2,%eax
  403b95:	3b 45 fc             	cmp    -0x4(%rbp),%eax
  403b98:	7e 0e                	jle    403ba8 <getpwd+0x75>
  403b9a:	e8 95 fe ff ff       	callq  403a34 <getch>
  403b9f:	88 45 fb             	mov    %al,-0x5(%rbp)
  403ba2:	80 7d fb 0a          	cmpb   $0xa,-0x5(%rbp)
  403ba6:	75 a3                	jne    403b4b <getpwd+0x18>
                 j = j - 1;
                 printf("\b \b");
            }
        }
    }
    pwd[j++] = '\0';
  403ba8:	8b 45 fc             	mov    -0x4(%rbp),%eax
  403bab:	8d 50 01             	lea    0x1(%rax),%edx
  403bae:	89 55 fc             	mov    %edx,-0x4(%rbp)
  403bb1:	48 63 d0             	movslq %eax,%rdx
  403bb4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403bb8:	48 01 d0             	add    %rdx,%rax
  403bbb:	c6 00 00             	movb   $0x0,(%rax)
    pwd[j++] = '\n';
  403bbe:	8b 45 fc             	mov    -0x4(%rbp),%eax
  403bc1:	8d 50 01             	lea    0x1(%rax),%edx
  403bc4:	89 55 fc             	mov    %edx,-0x4(%rbp)
  403bc7:	48 63 d0             	movslq %eax,%rdx
  403bca:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403bce:	48 01 d0             	add    %rdx,%rax
  403bd1:	c6 00 0a             	movb   $0xa,(%rax)

    puts(" ");
  403bd4:	bf c9 46 40 00       	mov    $0x4046c9,%edi
  403bd9:	e8 c2 d5 ff ff       	callq  4011a0 <puts@plt>
}
  403bde:	c9                   	leaveq 
  403bdf:	c3                   	retq   

0000000000403be0 <cl_stdin>:

void cl_stdin(){
  403be0:	55                   	push   %rbp
  403be1:	48 89 e5             	mov    %rsp,%rbp
  403be4:	48 83 ec 10          	sub    $0x10,%rsp
    char ch;
    while(( ch = getchar()) != '\n' && ch != EOF);
  403be8:	90                   	nop
  403be9:	e8 12 d7 ff ff       	callq  401300 <getchar@plt>
  403bee:	88 45 ff             	mov    %al,-0x1(%rbp)
  403bf1:	80 7d ff 0a          	cmpb   $0xa,-0x1(%rbp)
  403bf5:	74 06                	je     403bfd <cl_stdin+0x1d>
  403bf7:	80 7d ff ff          	cmpb   $0xff,-0x1(%rbp)
  403bfb:	75 ec                	jne    403be9 <cl_stdin+0x9>
}
  403bfd:	c9                   	leaveq 
  403bfe:	c3                   	retq   

0000000000403bff <input_check>:

//合法输入
int input_check(int input_len, char * input_buf){
  403bff:	55                   	push   %rbp
  403c00:	48 89 e5             	mov    %rsp,%rbp
  403c03:	48 83 ec 20          	sub    $0x20,%rsp
  403c07:	89 7d ec             	mov    %edi,-0x14(%rbp)
  403c0a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    char c;
    int i = 0;
  403c0e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    if(input_buf == NULL){
  403c15:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  403c1a:	75 11                	jne    403c2d <input_check+0x2e>
        my_err("input check", __LINE__);
  403c1c:	be 4d 00 00 00       	mov    $0x4d,%esi
  403c21:	bf cb 46 40 00       	mov    $0x4046cb,%edi
  403c26:	e8 6d 00 00 00       	callq  403c98 <my_err>
    }

    while((c = getchar()) != '\n' && (c != EOF) && (i < input_len-2)){
  403c2b:	eb 1b                	jmp    403c48 <input_check+0x49>
  403c2d:	eb 19                	jmp    403c48 <input_check+0x49>
        input_buf[i++] = c;
  403c2f:	8b 45 fc             	mov    -0x4(%rbp),%eax
  403c32:	8d 50 01             	lea    0x1(%rax),%edx
  403c35:	89 55 fc             	mov    %edx,-0x4(%rbp)
  403c38:	48 63 d0             	movslq %eax,%rdx
  403c3b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403c3f:	48 01 c2             	add    %rax,%rdx
  403c42:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax
  403c46:	88 02                	mov    %al,(%rdx)
    int i = 0;
    if(input_buf == NULL){
        my_err("input check", __LINE__);
    }

    while((c = getchar()) != '\n' && (c != EOF) && (i < input_len-2)){
  403c48:	e8 b3 d6 ff ff       	callq  401300 <getchar@plt>
  403c4d:	88 45 fb             	mov    %al,-0x5(%rbp)
  403c50:	80 7d fb 0a          	cmpb   $0xa,-0x5(%rbp)
  403c54:	74 11                	je     403c67 <input_check+0x68>
  403c56:	80 7d fb ff          	cmpb   $0xff,-0x5(%rbp)
  403c5a:	74 0b                	je     403c67 <input_check+0x68>
  403c5c:	8b 45 ec             	mov    -0x14(%rbp),%eax
  403c5f:	83 e8 02             	sub    $0x2,%eax
  403c62:	3b 45 fc             	cmp    -0x4(%rbp),%eax
  403c65:	7f c8                	jg     403c2f <input_check+0x30>
        input_buf[i++] = c;
    }

    input_buf[i++] = '\0';
  403c67:	8b 45 fc             	mov    -0x4(%rbp),%eax
  403c6a:	8d 50 01             	lea    0x1(%rax),%edx
  403c6d:	89 55 fc             	mov    %edx,-0x4(%rbp)
  403c70:	48 63 d0             	movslq %eax,%rdx
  403c73:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403c77:	48 01 d0             	add    %rdx,%rax
  403c7a:	c6 00 00             	movb   $0x0,(%rax)
    input_buf[i++] = '\n';
  403c7d:	8b 45 fc             	mov    -0x4(%rbp),%eax
  403c80:	8d 50 01             	lea    0x1(%rax),%edx
  403c83:	89 55 fc             	mov    %edx,-0x4(%rbp)
  403c86:	48 63 d0             	movslq %eax,%rdx
  403c89:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403c8d:	48 01 d0             	add    %rdx,%rax
  403c90:	c6 00 0a             	movb   $0xa,(%rax)

    return i;
  403c93:	8b 45 fc             	mov    -0x4(%rbp),%eax
}
  403c96:	c9                   	leaveq 
  403c97:	c3                   	retq   

0000000000403c98 <my_err>:



//自定义错误函数
void my_err(const char* err_string, int line){
  403c98:	55                   	push   %rbp
  403c99:	48 89 e5             	mov    %rsp,%rbp
  403c9c:	48 83 ec 10          	sub    $0x10,%rsp
  403ca0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  403ca4:	89 75 f4             	mov    %esi,-0xc(%rbp)
    fprintf(stderr, "line:%d \n", line);
  403ca7:	48 8b 05 32 25 20 00 	mov    0x202532(%rip),%rax        # 6061e0 <__TMC_END__>
  403cae:	8b 55 f4             	mov    -0xc(%rbp),%edx
  403cb1:	be d7 46 40 00       	mov    $0x4046d7,%esi
  403cb6:	48 89 c7             	mov    %rax,%rdi
  403cb9:	b8 00 00 00 00       	mov    $0x0,%eax
  403cbe:	e8 4d d6 ff ff       	callq  401310 <fprintf@plt>
    perror(err_string);
  403cc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403cc7:	48 89 c7             	mov    %rax,%rdi
  403cca:	e8 41 d7 ff ff       	callq  401410 <perror@plt>
}
  403ccf:	c9                   	leaveq 
  403cd0:	c3                   	retq   

0000000000403cd1 <recv_data>:

//从套接字上读取一次数据

int recv_data(int conn_fd, send_t *precv){
  403cd1:	55                   	push   %rbp
  403cd2:	48 89 e5             	mov    %rsp,%rbp
  403cd5:	48 83 ec 20          	sub    $0x20,%rsp
  403cd9:	89 7d ec             	mov    %edi,-0x14(%rbp)
  403cdc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    int len_remain = 0;
  403ce0:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)

    if(len_remain <= 0){
  403ce7:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  403ceb:	7f 3f                	jg     403d2c <recv_data+0x5b>
        len_remain = recv(conn_fd, precv, sizeof(send_t), 0);
  403ced:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  403cf1:	8b 45 ec             	mov    -0x14(%rbp),%eax
  403cf4:	b9 00 00 00 00       	mov    $0x0,%ecx
  403cf9:	ba dc 0d 00 00       	mov    $0xddc,%edx
  403cfe:	89 c7                	mov    %eax,%edi
  403d00:	e8 3b d4 ff ff       	callq  401140 <recv@plt>
  403d05:	89 45 fc             	mov    %eax,-0x4(%rbp)
        if(len_remain < 0){
  403d08:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  403d0c:	79 11                	jns    403d1f <recv_data+0x4e>
            my_err("recv", __LINE__);
  403d0e:	be 6a 00 00 00       	mov    $0x6a,%esi
  403d13:	bf e1 46 40 00       	mov    $0x4046e1,%edi
  403d18:	e8 7b ff ff ff       	callq  403c98 <my_err>
  403d1d:	eb 0d                	jmp    403d2c <recv_data+0x5b>
        }
        else if(len_remain == 0){
  403d1f:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  403d23:	75 07                	jne    403d2c <recv_data+0x5b>
            return -1;
  403d25:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  403d2a:	eb 1e                	jmp    403d4a <recv_data+0x79>
        }
    }

    printf("%d recv\n", precv->command_type);
  403d2c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403d30:	8b 80 f4 0c 00 00    	mov    0xcf4(%rax),%eax
  403d36:	89 c6                	mov    %eax,%esi
  403d38:	bf e6 46 40 00       	mov    $0x4046e6,%edi
  403d3d:	b8 00 00 00 00       	mov    $0x0,%eax
  403d42:	e8 19 d5 ff ff       	callq  401260 <printf@plt>
    return len_remain;
  403d47:	8b 45 fc             	mov    -0x4(%rbp),%eax
}
  403d4a:	c9                   	leaveq 
  403d4b:	c3                   	retq   

0000000000403d4c <file_write>:


//文件写入函数

int file_write(int fd, const void * buf, int len){
  403d4c:	55                   	push   %rbp
  403d4d:	48 89 e5             	mov    %rsp,%rbp
  403d50:	48 83 ec 20          	sub    $0x20,%rsp
  403d54:	89 7d ec             	mov    %edi,-0x14(%rbp)
  403d57:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  403d5b:	89 55 e8             	mov    %edx,-0x18(%rbp)
    int we;

    we = write(fd , buf, len);
  403d5e:	8b 45 e8             	mov    -0x18(%rbp),%eax
  403d61:	48 63 d0             	movslq %eax,%rdx
  403d64:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  403d68:	8b 45 ec             	mov    -0x14(%rbp),%eax
  403d6b:	48 89 ce             	mov    %rcx,%rsi
  403d6e:	89 c7                	mov    %eax,%edi
  403d70:	e8 5b d4 ff ff       	callq  4011d0 <write@plt>
  403d75:	89 45 fc             	mov    %eax,-0x4(%rbp)
    if(we < 0){
  403d78:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  403d7c:	79 0f                	jns    403d8d <file_write+0x41>
        my_err("file_write", __LINE__);
  403d7e:	be 7d 00 00 00       	mov    $0x7d,%esi
  403d83:	bf ef 46 40 00       	mov    $0x4046ef,%edi
  403d88:	e8 0b ff ff ff       	callq  403c98 <my_err>
    }

    return we;
  403d8d:	8b 45 fc             	mov    -0x4(%rbp),%eax
}
  403d90:	c9                   	leaveq 
  403d91:	c3                   	retq   

0000000000403d92 <file_len>:

//获取文件长度
int file_len(int fd){
  403d92:	55                   	push   %rbp
  403d93:	48 89 e5             	mov    %rsp,%rbp
  403d96:	48 83 ec 20          	sub    $0x20,%rsp
  403d9a:	89 7d ec             	mov    %edi,-0x14(%rbp)

    int length = 0;
  403d9d:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    if(lseek(fd ,0 ,SEEK_END)== -1){
  403da4:	8b 45 ec             	mov    -0x14(%rbp),%eax
  403da7:	ba 02 00 00 00       	mov    $0x2,%edx
  403dac:	be 00 00 00 00       	mov    $0x0,%esi
  403db1:	89 c7                	mov    %eax,%edi
  403db3:	e8 b8 d4 ff ff       	callq  401270 <lseek@plt>
  403db8:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  403dbc:	75 0f                	jne    403dcd <file_len+0x3b>
        my_err("lseek set", __LINE__);
  403dbe:	be 88 00 00 00       	mov    $0x88,%esi
  403dc3:	bf fa 46 40 00       	mov    $0x4046fa,%edi
  403dc8:	e8 cb fe ff ff       	callq  403c98 <my_err>
    }
    if((length = lseek(fd , 0 , SEEK_CUR)) == -1 ){
  403dcd:	8b 45 ec             	mov    -0x14(%rbp),%eax
  403dd0:	ba 01 00 00 00       	mov    $0x1,%edx
  403dd5:	be 00 00 00 00       	mov    $0x0,%esi
  403dda:	89 c7                	mov    %eax,%edi
  403ddc:	e8 8f d4 ff ff       	callq  401270 <lseek@plt>
  403de1:	89 45 fc             	mov    %eax,-0x4(%rbp)
  403de4:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%rbp)
  403de8:	75 0f                	jne    403df9 <file_len+0x67>
        my_err("length" , __LINE__);
  403dea:	be 8b 00 00 00       	mov    $0x8b,%esi
  403def:	bf 04 47 40 00       	mov    $0x404704,%edi
  403df4:	e8 9f fe ff ff       	callq  403c98 <my_err>
    }
    if(lseek(fd , 0 ,SEEK_SET)== -1){
  403df9:	8b 45 ec             	mov    -0x14(%rbp),%eax
  403dfc:	ba 00 00 00 00       	mov    $0x0,%edx
  403e01:	be 00 00 00 00       	mov    $0x0,%esi
  403e06:	89 c7                	mov    %eax,%edi
  403e08:	e8 63 d4 ff ff       	callq  401270 <lseek@plt>
  403e0d:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  403e11:	75 0f                	jne    403e22 <file_len+0x90>
        my_err("lseek end" , __LINE__);
  403e13:	be 8e 00 00 00       	mov    $0x8e,%esi
  403e18:	bf 0b 47 40 00       	mov    $0x40470b,%edi
  403e1d:	e8 76 fe ff ff       	callq  403c98 <my_err>
    }
    return length;
  403e22:	8b 45 fc             	mov    -0x4(%rbp),%eax
}
  403e25:	c9                   	leaveq 
  403e26:	c3                   	retq   

0000000000403e27 <file_read>:


int file_read(int fd,int len,void* buf){
  403e27:	55                   	push   %rbp
  403e28:	48 89 e5             	mov    %rsp,%rbp
  403e2b:	48 83 ec 20          	sub    $0x20,%rsp
  403e2f:	89 7d ec             	mov    %edi,-0x14(%rbp)
  403e32:	89 75 e8             	mov    %esi,-0x18(%rbp)
  403e35:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
    int re;
    if((re = read(fd , buf , len)) == -1){
  403e39:	8b 45 e8             	mov    -0x18(%rbp),%eax
  403e3c:	48 63 d0             	movslq %eax,%rdx
  403e3f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  403e43:	8b 45 ec             	mov    -0x14(%rbp),%eax
  403e46:	48 89 ce             	mov    %rcx,%rsi
  403e49:	89 c7                	mov    %eax,%edi
  403e4b:	e8 80 d4 ff ff       	callq  4012d0 <read@plt>
  403e50:	89 45 fc             	mov    %eax,-0x4(%rbp)
  403e53:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%rbp)
  403e57:	75 0f                	jne    403e68 <file_read+0x41>
        my_err("c_read", __LINE__);
  403e59:	be 97 00 00 00       	mov    $0x97,%esi
  403e5e:	bf 15 47 40 00       	mov    $0x404715,%edi
  403e63:	e8 30 fe ff ff       	callq  403c98 <my_err>
    }
    return re;
  403e68:	8b 45 fc             	mov    -0x4(%rbp),%eax
}
  403e6b:	c9                   	leaveq 
  403e6c:	c3                   	retq   

0000000000403e6d <DateNow>:
        printf("%c", recv_buf[i]);
    }
}
*/
//获取系统当前日期
user_date_t DateNow() {
  403e6d:	55                   	push   %rbp
  403e6e:	48 89 e5             	mov    %rsp,%rbp
  403e71:	48 83 ec 50          	sub    $0x50,%rsp
	user_date_t curDate;
	time_t now;         //实例化time_t结构
	struct tm *timeNow;         //实例化tm结构指针
	time(&now);
  403e75:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
  403e79:	48 89 c7             	mov    %rax,%rdi
  403e7c:	e8 cf d4 ff ff       	callq  401350 <time@plt>
	timeNow = localtime(&now);
  403e81:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
  403e85:	48 89 c7             	mov    %rax,%rdi
  403e88:	e8 e3 d2 ff ff       	callq  401170 <localtime@plt>
  403e8d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	curDate.year=timeNow->tm_year+1900;
  403e91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403e95:	8b 40 14             	mov    0x14(%rax),%eax
  403e98:	05 6c 07 00 00       	add    $0x76c,%eax
  403e9d:	89 45 d0             	mov    %eax,-0x30(%rbp)
	curDate.month=timeNow->tm_mon+1;
  403ea0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403ea4:	8b 40 10             	mov    0x10(%rax),%eax
  403ea7:	83 c0 01             	add    $0x1,%eax
  403eaa:	89 45 d4             	mov    %eax,-0x2c(%rbp)
	curDate.day=timeNow->tm_mday;
  403ead:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403eb1:	8b 40 0c             	mov    0xc(%rax),%eax
  403eb4:	89 45 d8             	mov    %eax,-0x28(%rbp)

	return curDate;
  403eb7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403ebb:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  403ebf:	8b 45 d8             	mov    -0x28(%rbp),%eax
  403ec2:	89 45 e8             	mov    %eax,-0x18(%rbp)
  403ec5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403ec9:	8b 55 e8             	mov    -0x18(%rbp),%edx
}
  403ecc:	c9                   	leaveq 
  403ecd:	c3                   	retq   

0000000000403ece <TimeNow>:

//获取系统当前时间
user_time_t TimeNow(){
  403ece:	55                   	push   %rbp
  403ecf:	48 89 e5             	mov    %rsp,%rbp
  403ed2:	48 83 ec 50          	sub    $0x50,%rsp
	user_time_t curTime;
	time_t now;         //实例化time_t结构
	struct tm *timeNow;         //实例化tm结构指针
	time(&now);
  403ed6:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
  403eda:	48 89 c7             	mov    %rax,%rdi
  403edd:	e8 6e d4 ff ff       	callq  401350 <time@plt>
	timeNow = localtime(&now);
  403ee2:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
  403ee6:	48 89 c7             	mov    %rax,%rdi
  403ee9:	e8 82 d2 ff ff       	callq  401170 <localtime@plt>
  403eee:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	curTime.hour=timeNow->tm_hour;
  403ef2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403ef6:	8b 40 08             	mov    0x8(%rax),%eax
  403ef9:	89 45 d0             	mov    %eax,-0x30(%rbp)
	curTime.minute=timeNow->tm_min;
  403efc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403f00:	8b 40 04             	mov    0x4(%rax),%eax
  403f03:	89 45 d4             	mov    %eax,-0x2c(%rbp)
	curTime.second=timeNow->tm_sec;
  403f06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403f0a:	8b 00                	mov    (%rax),%eax
  403f0c:	89 45 d8             	mov    %eax,-0x28(%rbp)

    return curTime;
  403f0f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403f13:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  403f17:	8b 45 d8             	mov    -0x28(%rbp),%eax
  403f1a:	89 45 e8             	mov    %eax,-0x18(%rbp)
  403f1d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403f21:	8b 55 e8             	mov    -0x18(%rbp),%edx
}
  403f24:	c9                   	leaveq 
  403f25:	c3                   	retq   

0000000000403f26 <ser_atoi>:

int ser_atoi(char * buf){     //atoi
  403f26:	55                   	push   %rbp
  403f27:	48 89 e5             	mov    %rsp,%rbp
  403f2a:	48 83 ec 20          	sub    $0x20,%rsp
  403f2e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)

    int ret;
    ret = atoi(buf);
  403f32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403f36:	48 89 c7             	mov    %rax,%rdi
  403f39:	e8 02 d5 ff ff       	callq  401440 <atoi@plt>
  403f3e:	89 45 fc             	mov    %eax,-0x4(%rbp)

    return ret;
  403f41:	8b 45 fc             	mov    -0x4(%rbp),%eax
}
  403f44:	c9                   	leaveq 
  403f45:	c3                   	retq   

0000000000403f46 <send_data>:
    return sizeof(send_t);
}
*/

//发送数据
int send_data(int conn_fd, send_t * psend){
  403f46:	55                   	push   %rbp
  403f47:	48 89 e5             	mov    %rsp,%rbp
  403f4a:	48 83 ec 20          	sub    $0x20,%rsp
  403f4e:	89 7d ec             	mov    %edi,-0x14(%rbp)
  403f51:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)

    int ret;
    if((ret = send(conn_fd, psend, sizeof(send_t), 0)) < 0){
  403f55:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  403f59:	8b 45 ec             	mov    -0x14(%rbp),%eax
  403f5c:	b9 00 00 00 00       	mov    $0x0,%ecx
  403f61:	ba dc 0d 00 00       	mov    $0xddc,%edx
  403f66:	89 c7                	mov    %eax,%edi
  403f68:	e8 e3 d2 ff ff       	callq  401250 <send@plt>
  403f6d:	89 45 fc             	mov    %eax,-0x4(%rbp)
  403f70:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  403f74:	79 0f                	jns    403f85 <send_data+0x3f>
        my_err("send",__LINE__);
  403f76:	be eb 00 00 00       	mov    $0xeb,%esi
  403f7b:	bf 1c 47 40 00       	mov    $0x40471c,%edi
  403f80:	e8 13 fd ff ff       	callq  403c98 <my_err>
    }

    printf("%d send\n", psend->command_type);
  403f85:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403f89:	8b 80 f4 0c 00 00    	mov    0xcf4(%rax),%eax
  403f8f:	89 c6                	mov    %eax,%esi
  403f91:	bf 21 47 40 00       	mov    $0x404721,%edi
  403f96:	b8 00 00 00 00       	mov    $0x0,%eax
  403f9b:	e8 c0 d2 ff ff       	callq  401260 <printf@plt>
    memset(psend, 0, sizeof(send_t));
  403fa0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403fa4:	ba dc 0d 00 00       	mov    $0xddc,%edx
  403fa9:	be 00 00 00 00       	mov    $0x0,%esi
  403fae:	48 89 c7             	mov    %rax,%rdi
  403fb1:	e8 ea d2 ff ff       	callq  4012a0 <memset@plt>

    return ret;
  403fb6:	8b 45 fc             	mov    -0x4(%rbp),%eax
}
  403fb9:	c9                   	leaveq 
  403fba:	c3                   	retq   

0000000000403fbb <Str2Upper>:



//将字符串str就地转换为大写字符串，并返回字符串头指针
char *Str2Upper(char *str) {
  403fbb:	55                   	push   %rbp
  403fbc:	48 89 e5             	mov    %rsp,%rbp
  403fbf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	if (NULL == str)
  403fc3:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  403fc8:	75 07                	jne    403fd1 <Str2Upper+0x16>
		return NULL;
  403fca:	b8 00 00 00 00       	mov    $0x0,%eax
  403fcf:	eb 46                	jmp    404017 <Str2Upper+0x5c>
	else {
		char *p = str;
  403fd1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403fd5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
		while ('\0' != *p) {
  403fd9:	eb 2d                	jmp    404008 <Str2Upper+0x4d>
			if (*p >= 'a' && *p <= 'z')
  403fdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403fdf:	0f b6 00             	movzbl (%rax),%eax
  403fe2:	3c 60                	cmp    $0x60,%al
  403fe4:	7e 1d                	jle    404003 <Str2Upper+0x48>
  403fe6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403fea:	0f b6 00             	movzbl (%rax),%eax
  403fed:	3c 7a                	cmp    $0x7a,%al
  403fef:	7f 12                	jg     404003 <Str2Upper+0x48>
				*p -= 32;
  403ff1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403ff5:	0f b6 00             	movzbl (%rax),%eax
  403ff8:	83 e8 20             	sub    $0x20,%eax
  403ffb:	89 c2                	mov    %eax,%edx
  403ffd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404001:	88 10                	mov    %dl,(%rax)
			p++;
  404003:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
char *Str2Upper(char *str) {
	if (NULL == str)
		return NULL;
	else {
		char *p = str;
		while ('\0' != *p) {
  404008:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40400c:	0f b6 00             	movzbl (%rax),%eax
  40400f:	84 c0                	test   %al,%al
  404011:	75 c8                	jne    403fdb <Str2Upper+0x20>
			if (*p >= 'a' && *p <= 'z')
				*p -= 32;
			p++;
		}
		return str;
  404013:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
}
  404017:	5d                   	pop    %rbp
  404018:	c3                   	retq   

0000000000404019 <show_message>:

//显示消息
void show_message(int conn_fd){
  404019:	55                   	push   %rbp
  40401a:	48 89 e5             	mov    %rsp,%rbp
  40401d:	48 81 ec 30 01 00 00 	sub    $0x130,%rsp
  404024:	89 bd dc fe ff ff    	mov    %edi,-0x124(%rbp)
    message_t leave;
    message_t * pmess = &leave;
  40402a:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
  404031:	48 89 45 f8          	mov    %rax,-0x8(%rbp)

    recv(conn_fd, pmess, sizeof(leave), 0);
  404035:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  404039:	8b 85 dc fe ff ff    	mov    -0x124(%rbp),%eax
  40403f:	b9 00 00 00 00       	mov    $0x0,%ecx
  404044:	ba 18 01 00 00       	mov    $0x118,%edx
  404049:	89 c7                	mov    %eax,%edi
  40404b:	e8 f0 d0 ff ff       	callq  401140 <recv@plt>
    printf("%d-%d-%d %2d:%2d:%2d\n",pmess->date.year,pmess->date.month,pmess->date.day,pmess->time.hour,pmess->time.minute,pmess->time.second);
  404050:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404054:	8b 70 14             	mov    0x14(%rax),%esi
  404057:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40405b:	44 8b 40 10          	mov    0x10(%rax),%r8d
  40405f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404063:	8b 78 0c             	mov    0xc(%rax),%edi
  404066:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40406a:	8b 48 08             	mov    0x8(%rax),%ecx
  40406d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404071:	8b 50 04             	mov    0x4(%rax),%edx
  404074:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404078:	8b 00                	mov    (%rax),%eax
  40407a:	89 34 24             	mov    %esi,(%rsp)
  40407d:	45 89 c1             	mov    %r8d,%r9d
  404080:	41 89 f8             	mov    %edi,%r8d
  404083:	89 c6                	mov    %eax,%esi
  404085:	bf 2a 47 40 00       	mov    $0x40472a,%edi
  40408a:	b8 00 00 00 00       	mov    $0x0,%eax
  40408f:	e8 cc d1 ff ff       	callq  401260 <printf@plt>
    printf("<%s>: ", pmess->send_name);
  404094:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404098:	48 83 c0 18          	add    $0x18,%rax
  40409c:	48 89 c6             	mov    %rax,%rsi
  40409f:	bf 40 47 40 00       	mov    $0x404740,%edi
  4040a4:	b8 00 00 00 00       	mov    $0x0,%eax
  4040a9:	e8 b2 d1 ff ff       	callq  401260 <printf@plt>
    puts(pmess->message_buf);
  4040ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4040b2:	48 83 c0 58          	add    $0x58,%rax
  4040b6:	48 89 c7             	mov    %rax,%rdi
  4040b9:	e8 e2 d0 ff ff       	callq  4011a0 <puts@plt>
    puts(" ");
  4040be:	bf c9 46 40 00       	mov    $0x4046c9,%edi
  4040c3:	e8 d8 d0 ff ff       	callq  4011a0 <puts@plt>
}
  4040c8:	c9                   	leaveq 
  4040c9:	c3                   	retq   
  4040ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004040d0 <__libc_csu_init>:
  4040d0:	41 57                	push   %r15
  4040d2:	41 89 ff             	mov    %edi,%r15d
  4040d5:	41 56                	push   %r14
  4040d7:	49 89 f6             	mov    %rsi,%r14
  4040da:	41 55                	push   %r13
  4040dc:	49 89 d5             	mov    %rdx,%r13
  4040df:	41 54                	push   %r12
  4040e1:	4c 8d 25 18 1d 20 00 	lea    0x201d18(%rip),%r12        # 605e00 <__frame_dummy_init_array_entry>
  4040e8:	55                   	push   %rbp
  4040e9:	48 8d 2d 18 1d 20 00 	lea    0x201d18(%rip),%rbp        # 605e08 <__init_array_end>
  4040f0:	53                   	push   %rbx
  4040f1:	4c 29 e5             	sub    %r12,%rbp
  4040f4:	31 db                	xor    %ebx,%ebx
  4040f6:	48 c1 fd 03          	sar    $0x3,%rbp
  4040fa:	48 83 ec 08          	sub    $0x8,%rsp
  4040fe:	e8 05 d0 ff ff       	callq  401108 <_init>
  404103:	48 85 ed             	test   %rbp,%rbp
  404106:	74 1e                	je     404126 <__libc_csu_init+0x56>
  404108:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40410f:	00 
  404110:	4c 89 ea             	mov    %r13,%rdx
  404113:	4c 89 f6             	mov    %r14,%rsi
  404116:	44 89 ff             	mov    %r15d,%edi
  404119:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40411d:	48 83 c3 01          	add    $0x1,%rbx
  404121:	48 39 eb             	cmp    %rbp,%rbx
  404124:	75 ea                	jne    404110 <__libc_csu_init+0x40>
  404126:	48 83 c4 08          	add    $0x8,%rsp
  40412a:	5b                   	pop    %rbx
  40412b:	5d                   	pop    %rbp
  40412c:	41 5c                	pop    %r12
  40412e:	41 5d                	pop    %r13
  404130:	41 5e                	pop    %r14
  404132:	41 5f                	pop    %r15
  404134:	c3                   	retq   
  404135:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  40413c:	00 00 00 00 

0000000000404140 <__libc_csu_fini>:
  404140:	f3 c3                	repz retq 
  404142:	66 90                	xchg   %ax,%ax

Disassembly of section .fini:

0000000000404144 <_fini>:
  404144:	48 83 ec 08          	sub    $0x8,%rsp
  404148:	48 83 c4 08          	add    $0x8,%rsp
  40414c:	c3                   	retq   
